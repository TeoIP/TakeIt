{
  "version": 3,
  "sources": ["../../defu/dist/defu.mjs", "../../@vueuse/shared/index.mjs", "../../@vueuse/core/node_modules/vue-demi/lib/index.mjs", "../../@vueuse/core/index.mjs", "../../framesync/dist/es/on-next-frame.mjs", "../../framesync/dist/es/create-render-step.mjs", "../../framesync/dist/es/index.mjs", "../../tslib/tslib.es6.js", "../../hey-listen/dist/hey-listen.es.js", "../../popmotion/dist/es/utils/clamp.mjs", "../../popmotion/dist/es/animations/utils/find-spring.mjs", "../../popmotion/dist/es/animations/generators/spring.mjs", "../../popmotion/dist/es/utils/progress.mjs", "../../popmotion/dist/es/utils/mix.mjs", "../../style-value-types/dist/es/utils.mjs", "../../style-value-types/dist/es/numbers/index.mjs", "../../style-value-types/dist/es/numbers/units.mjs", "../../style-value-types/dist/es/color/utils.mjs", "../../style-value-types/dist/es/color/hsla.mjs", "../../style-value-types/dist/es/color/rgba.mjs", "../../style-value-types/dist/es/color/hex.mjs", "../../style-value-types/dist/es/color/index.mjs", "../../style-value-types/dist/es/complex/index.mjs", "../../style-value-types/dist/es/complex/filter.mjs", "../../popmotion/dist/es/utils/hsla-to-rgba.mjs", "../../popmotion/dist/es/utils/mix-color.mjs", "../../popmotion/dist/es/utils/inc.mjs", "../../popmotion/dist/es/utils/pipe.mjs", "../../popmotion/dist/es/utils/mix-complex.mjs", "../../popmotion/dist/es/utils/interpolate.mjs", "../../popmotion/dist/es/easing/utils.mjs", "../../popmotion/dist/es/easing/index.mjs", "../../popmotion/dist/es/animations/generators/keyframes.mjs", "../../popmotion/dist/es/animations/generators/decay.mjs", "../../popmotion/dist/es/animations/utils/detect-animation-from-options.mjs", "../../popmotion/dist/es/animations/utils/elapsed.mjs", "../../popmotion/dist/es/animations/index.mjs", "../../popmotion/dist/es/utils/velocity-per-second.mjs", "../../popmotion/dist/es/animations/inertia.mjs", "../../popmotion/dist/es/utils/attract.mjs", "../../popmotion/dist/es/easing/cubic-bezier.mjs", "../../@vueuse/motion/dist/index.mjs"],
  "sourcesContent": ["function isPlainObject(value) {\r\n  if (value === null || typeof value !== \"object\") {\r\n    return false;\r\n  }\r\n  const prototype = Object.getPrototypeOf(value);\r\n  if (prototype !== null && prototype !== Object.prototype && Object.getPrototypeOf(prototype) !== null) {\r\n    return false;\r\n  }\r\n  if (Symbol.iterator in value) {\r\n    return false;\r\n  }\r\n  if (Symbol.toStringTag in value) {\r\n    return Object.prototype.toString.call(value) === \"[object Module]\";\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction _defu(baseObject, defaults, namespace = \".\", merger) {\r\n  if (!isPlainObject(defaults)) {\r\n    return _defu(baseObject, {}, namespace, merger);\r\n  }\r\n  const object = Object.assign({}, defaults);\r\n  for (const key in baseObject) {\r\n    if (key === \"__proto__\" || key === \"constructor\") {\r\n      continue;\r\n    }\r\n    const value = baseObject[key];\r\n    if (value === null || value === void 0) {\r\n      continue;\r\n    }\r\n    if (merger && merger(object, key, value, namespace)) {\r\n      continue;\r\n    }\r\n    if (Array.isArray(value) && Array.isArray(object[key])) {\r\n      object[key] = [...value, ...object[key]];\r\n    } else if (isPlainObject(value) && isPlainObject(object[key])) {\r\n      object[key] = _defu(\r\n        value,\r\n        object[key],\r\n        (namespace ? `${namespace}.` : \"\") + key.toString(),\r\n        merger\r\n      );\r\n    } else {\r\n      object[key] = value;\r\n    }\r\n  }\r\n  return object;\r\n}\r\nfunction createDefu(merger) {\r\n  return (...arguments_) => (\r\n    // eslint-disable-next-line unicorn/no-array-reduce\r\n    arguments_.reduce((p, c) => _defu(p, c, \"\", merger), {})\r\n  );\r\n}\r\nconst defu = createDefu();\r\nconst defuFn = createDefu((object, key, currentValue) => {\r\n  if (object[key] !== void 0 && typeof currentValue === \"function\") {\r\n    object[key] = currentValue(object[key]);\r\n    return true;\r\n  }\r\n});\r\nconst defuArrayFn = createDefu((object, key, currentValue) => {\r\n  if (Array.isArray(object[key]) && typeof currentValue === \"function\") {\r\n    object[key] = currentValue(object[key]);\r\n    return true;\r\n  }\r\n});\r\n\r\nexport { createDefu, defu as default, defu, defuArrayFn, defuFn };\r\n", "import { shallowRef, watchEffect, readonly, ref, watch, customRef, getCurrentScope, onScopeDispose, effectScope, getCurrentInstance, provide, inject, isVue3, version, isRef, unref, computed, reactive, toRefs as toRefs$1, toRef as toRef$1, isVue2, set as set$1, onBeforeMount, nextTick, onBeforeUnmount, onMounted, onUnmounted, isReactive } from 'vue-demi';\r\n\r\nfunction computedEager(fn, options) {\r\n  var _a;\r\n  const result = shallowRef();\r\n  watchEffect(() => {\r\n    result.value = fn();\r\n  }, {\r\n    ...options,\r\n    flush: (_a = options == null ? void 0 : options.flush) != null ? _a : \"sync\"\r\n  });\r\n  return readonly(result);\r\n}\r\n\r\nfunction computedWithControl(source, fn) {\r\n  let v = void 0;\r\n  let track;\r\n  let trigger;\r\n  const dirty = ref(true);\r\n  const update = () => {\r\n    dirty.value = true;\r\n    trigger();\r\n  };\r\n  watch(source, update, { flush: \"sync\" });\r\n  const get = typeof fn === \"function\" ? fn : fn.get;\r\n  const set = typeof fn === \"function\" ? void 0 : fn.set;\r\n  const result = customRef((_track, _trigger) => {\r\n    track = _track;\r\n    trigger = _trigger;\r\n    return {\r\n      get() {\r\n        if (dirty.value) {\r\n          v = get();\r\n          dirty.value = false;\r\n        }\r\n        track();\r\n        return v;\r\n      },\r\n      set(v2) {\r\n        set == null ? void 0 : set(v2);\r\n      }\r\n    };\r\n  });\r\n  if (Object.isExtensible(result))\r\n    result.trigger = update;\r\n  return result;\r\n}\r\n\r\nfunction tryOnScopeDispose(fn) {\r\n  if (getCurrentScope()) {\r\n    onScopeDispose(fn);\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction createEventHook() {\r\n  const fns = /* @__PURE__ */ new Set();\r\n  const off = (fn) => {\r\n    fns.delete(fn);\r\n  };\r\n  const on = (fn) => {\r\n    fns.add(fn);\r\n    const offFn = () => off(fn);\r\n    tryOnScopeDispose(offFn);\r\n    return {\r\n      off: offFn\r\n    };\r\n  };\r\n  const trigger = (...args) => {\r\n    return Promise.all(Array.from(fns).map((fn) => fn(...args)));\r\n  };\r\n  return {\r\n    on,\r\n    off,\r\n    trigger\r\n  };\r\n}\r\n\r\nfunction createGlobalState(stateFactory) {\r\n  let initialized = false;\r\n  let state;\r\n  const scope = effectScope(true);\r\n  return (...args) => {\r\n    if (!initialized) {\r\n      state = scope.run(() => stateFactory(...args));\r\n      initialized = true;\r\n    }\r\n    return state;\r\n  };\r\n}\r\n\r\nconst localProvidedStateMap = /* @__PURE__ */ new WeakMap();\r\n\r\nconst provideLocal = (key, value) => {\r\n  var _a;\r\n  const instance = (_a = getCurrentInstance()) == null ? void 0 : _a.proxy;\r\n  if (instance == null)\r\n    throw new Error(\"provideLocal must be called in setup\");\r\n  if (!localProvidedStateMap.has(instance))\r\n    localProvidedStateMap.set(instance, /* @__PURE__ */ Object.create(null));\r\n  const localProvidedState = localProvidedStateMap.get(instance);\r\n  localProvidedState[key] = value;\r\n  provide(key, value);\r\n};\r\n\r\nconst injectLocal = (...args) => {\r\n  var _a;\r\n  const key = args[0];\r\n  const instance = (_a = getCurrentInstance()) == null ? void 0 : _a.proxy;\r\n  if (instance == null)\r\n    throw new Error(\"injectLocal must be called in setup\");\r\n  if (localProvidedStateMap.has(instance) && key in localProvidedStateMap.get(instance))\r\n    return localProvidedStateMap.get(instance)[key];\r\n  return inject(...args);\r\n};\r\n\r\nfunction createInjectionState(composable, options) {\r\n  const key = (options == null ? void 0 : options.injectionKey) || Symbol(composable.name || \"InjectionState\");\r\n  const useProvidingState = (...args) => {\r\n    const state = composable(...args);\r\n    provideLocal(key, state);\r\n    return state;\r\n  };\r\n  const useInjectedState = () => injectLocal(key);\r\n  return [useProvidingState, useInjectedState];\r\n}\r\n\r\nfunction createSharedComposable(composable) {\r\n  let subscribers = 0;\r\n  let state;\r\n  let scope;\r\n  const dispose = () => {\r\n    subscribers -= 1;\r\n    if (scope && subscribers <= 0) {\r\n      scope.stop();\r\n      state = void 0;\r\n      scope = void 0;\r\n    }\r\n  };\r\n  return (...args) => {\r\n    subscribers += 1;\r\n    if (!state) {\r\n      scope = effectScope(true);\r\n      state = scope.run(() => composable(...args));\r\n    }\r\n    tryOnScopeDispose(dispose);\r\n    return state;\r\n  };\r\n}\r\n\r\nfunction extendRef(ref, extend, { enumerable = false, unwrap = true } = {}) {\r\n  if (!isVue3 && !version.startsWith(\"2.7.\")) {\r\n    if (process.env.NODE_ENV !== \"production\")\r\n      throw new Error(\"[VueUse] extendRef only works in Vue 2.7 or above.\");\r\n    return;\r\n  }\r\n  for (const [key, value] of Object.entries(extend)) {\r\n    if (key === \"value\")\r\n      continue;\r\n    if (isRef(value) && unwrap) {\r\n      Object.defineProperty(ref, key, {\r\n        get() {\r\n          return value.value;\r\n        },\r\n        set(v) {\r\n          value.value = v;\r\n        },\r\n        enumerable\r\n      });\r\n    } else {\r\n      Object.defineProperty(ref, key, { value, enumerable });\r\n    }\r\n  }\r\n  return ref;\r\n}\r\n\r\nfunction get(obj, key) {\r\n  if (key == null)\r\n    return unref(obj);\r\n  return unref(obj)[key];\r\n}\r\n\r\nfunction isDefined(v) {\r\n  return unref(v) != null;\r\n}\r\n\r\nfunction makeDestructurable(obj, arr) {\r\n  if (typeof Symbol !== \"undefined\") {\r\n    const clone = { ...obj };\r\n    Object.defineProperty(clone, Symbol.iterator, {\r\n      enumerable: false,\r\n      value() {\r\n        let index = 0;\r\n        return {\r\n          next: () => ({\r\n            value: arr[index++],\r\n            done: index > arr.length\r\n          })\r\n        };\r\n      }\r\n    });\r\n    return clone;\r\n  } else {\r\n    return Object.assign([...arr], obj);\r\n  }\r\n}\r\n\r\nfunction toValue(r) {\r\n  return typeof r === \"function\" ? r() : unref(r);\r\n}\r\nconst resolveUnref = toValue;\r\n\r\nfunction reactify(fn, options) {\r\n  const unrefFn = (options == null ? void 0 : options.computedGetter) === false ? unref : toValue;\r\n  return function(...args) {\r\n    return computed(() => fn.apply(this, args.map((i) => unrefFn(i))));\r\n  };\r\n}\r\n\r\nfunction reactifyObject(obj, optionsOrKeys = {}) {\r\n  let keys = [];\r\n  let options;\r\n  if (Array.isArray(optionsOrKeys)) {\r\n    keys = optionsOrKeys;\r\n  } else {\r\n    options = optionsOrKeys;\r\n    const { includeOwnProperties = true } = optionsOrKeys;\r\n    keys.push(...Object.keys(obj));\r\n    if (includeOwnProperties)\r\n      keys.push(...Object.getOwnPropertyNames(obj));\r\n  }\r\n  return Object.fromEntries(\r\n    keys.map((key) => {\r\n      const value = obj[key];\r\n      return [\r\n        key,\r\n        typeof value === \"function\" ? reactify(value.bind(obj), options) : value\r\n      ];\r\n    })\r\n  );\r\n}\r\n\r\nfunction toReactive(objectRef) {\r\n  if (!isRef(objectRef))\r\n    return reactive(objectRef);\r\n  const proxy = new Proxy({}, {\r\n    get(_, p, receiver) {\r\n      return unref(Reflect.get(objectRef.value, p, receiver));\r\n    },\r\n    set(_, p, value) {\r\n      if (isRef(objectRef.value[p]) && !isRef(value))\r\n        objectRef.value[p].value = value;\r\n      else\r\n        objectRef.value[p] = value;\r\n      return true;\r\n    },\r\n    deleteProperty(_, p) {\r\n      return Reflect.deleteProperty(objectRef.value, p);\r\n    },\r\n    has(_, p) {\r\n      return Reflect.has(objectRef.value, p);\r\n    },\r\n    ownKeys() {\r\n      return Object.keys(objectRef.value);\r\n    },\r\n    getOwnPropertyDescriptor() {\r\n      return {\r\n        enumerable: true,\r\n        configurable: true\r\n      };\r\n    }\r\n  });\r\n  return reactive(proxy);\r\n}\r\n\r\nfunction reactiveComputed(fn) {\r\n  return toReactive(computed(fn));\r\n}\r\n\r\nfunction reactiveOmit(obj, ...keys) {\r\n  const flatKeys = keys.flat();\r\n  const predicate = flatKeys[0];\r\n  return reactiveComputed(() => typeof predicate === \"function\" ? Object.fromEntries(Object.entries(toRefs$1(obj)).filter(([k, v]) => !predicate(toValue(v), k))) : Object.fromEntries(Object.entries(toRefs$1(obj)).filter((e) => !flatKeys.includes(e[0]))));\r\n}\r\n\r\nconst isClient = typeof window !== \"undefined\" && typeof document !== \"undefined\";\r\nconst isWorker = typeof WorkerGlobalScope !== \"undefined\" && globalThis instanceof WorkerGlobalScope;\r\nconst isDef = (val) => typeof val !== \"undefined\";\r\nconst notNullish = (val) => val != null;\r\nconst assert = (condition, ...infos) => {\r\n  if (!condition)\r\n    console.warn(...infos);\r\n};\r\nconst toString = Object.prototype.toString;\r\nconst isObject = (val) => toString.call(val) === \"[object Object]\";\r\nconst now = () => Date.now();\r\nconst timestamp = () => +Date.now();\r\nconst clamp = (n, min, max) => Math.min(max, Math.max(min, n));\r\nconst noop = () => {\r\n};\r\nconst rand = (min, max) => {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n};\r\nconst hasOwn = (val, key) => Object.prototype.hasOwnProperty.call(val, key);\r\nconst isIOS = /* @__PURE__ */ getIsIOS();\r\nfunction getIsIOS() {\r\n  var _a, _b;\r\n  return isClient && ((_a = window == null ? void 0 : window.navigator) == null ? void 0 : _a.userAgent) && (/iP(ad|hone|od)/.test(window.navigator.userAgent) || ((_b = window == null ? void 0 : window.navigator) == null ? void 0 : _b.maxTouchPoints) > 2 && /iPad|Macintosh/.test(window == null ? void 0 : window.navigator.userAgent));\r\n}\r\n\r\nfunction createFilterWrapper(filter, fn) {\r\n  function wrapper(...args) {\r\n    return new Promise((resolve, reject) => {\r\n      Promise.resolve(filter(() => fn.apply(this, args), { fn, thisArg: this, args })).then(resolve).catch(reject);\r\n    });\r\n  }\r\n  return wrapper;\r\n}\r\nconst bypassFilter = (invoke) => {\r\n  return invoke();\r\n};\r\nfunction debounceFilter(ms, options = {}) {\r\n  let timer;\r\n  let maxTimer;\r\n  let lastRejector = noop;\r\n  const _clearTimeout = (timer2) => {\r\n    clearTimeout(timer2);\r\n    lastRejector();\r\n    lastRejector = noop;\r\n  };\r\n  const filter = (invoke) => {\r\n    const duration = toValue(ms);\r\n    const maxDuration = toValue(options.maxWait);\r\n    if (timer)\r\n      _clearTimeout(timer);\r\n    if (duration <= 0 || maxDuration !== void 0 && maxDuration <= 0) {\r\n      if (maxTimer) {\r\n        _clearTimeout(maxTimer);\r\n        maxTimer = null;\r\n      }\r\n      return Promise.resolve(invoke());\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      lastRejector = options.rejectOnCancel ? reject : resolve;\r\n      if (maxDuration && !maxTimer) {\r\n        maxTimer = setTimeout(() => {\r\n          if (timer)\r\n            _clearTimeout(timer);\r\n          maxTimer = null;\r\n          resolve(invoke());\r\n        }, maxDuration);\r\n      }\r\n      timer = setTimeout(() => {\r\n        if (maxTimer)\r\n          _clearTimeout(maxTimer);\r\n        maxTimer = null;\r\n        resolve(invoke());\r\n      }, duration);\r\n    });\r\n  };\r\n  return filter;\r\n}\r\nfunction throttleFilter(...args) {\r\n  let lastExec = 0;\r\n  let timer;\r\n  let isLeading = true;\r\n  let lastRejector = noop;\r\n  let lastValue;\r\n  let ms;\r\n  let trailing;\r\n  let leading;\r\n  let rejectOnCancel;\r\n  if (!isRef(args[0]) && typeof args[0] === \"object\")\r\n    ({ delay: ms, trailing = true, leading = true, rejectOnCancel = false } = args[0]);\r\n  else\r\n    [ms, trailing = true, leading = true, rejectOnCancel = false] = args;\r\n  const clear = () => {\r\n    if (timer) {\r\n      clearTimeout(timer);\r\n      timer = void 0;\r\n      lastRejector();\r\n      lastRejector = noop;\r\n    }\r\n  };\r\n  const filter = (_invoke) => {\r\n    const duration = toValue(ms);\r\n    const elapsed = Date.now() - lastExec;\r\n    const invoke = () => {\r\n      return lastValue = _invoke();\r\n    };\r\n    clear();\r\n    if (duration <= 0) {\r\n      lastExec = Date.now();\r\n      return invoke();\r\n    }\r\n    if (elapsed > duration && (leading || !isLeading)) {\r\n      lastExec = Date.now();\r\n      invoke();\r\n    } else if (trailing) {\r\n      lastValue = new Promise((resolve, reject) => {\r\n        lastRejector = rejectOnCancel ? reject : resolve;\r\n        timer = setTimeout(() => {\r\n          lastExec = Date.now();\r\n          isLeading = true;\r\n          resolve(invoke());\r\n          clear();\r\n        }, Math.max(0, duration - elapsed));\r\n      });\r\n    }\r\n    if (!leading && !timer)\r\n      timer = setTimeout(() => isLeading = true, duration);\r\n    isLeading = false;\r\n    return lastValue;\r\n  };\r\n  return filter;\r\n}\r\nfunction pausableFilter(extendFilter = bypassFilter) {\r\n  const isActive = ref(true);\r\n  function pause() {\r\n    isActive.value = false;\r\n  }\r\n  function resume() {\r\n    isActive.value = true;\r\n  }\r\n  const eventFilter = (...args) => {\r\n    if (isActive.value)\r\n      extendFilter(...args);\r\n  };\r\n  return { isActive: readonly(isActive), pause, resume, eventFilter };\r\n}\r\n\r\nconst directiveHooks = {\r\n  mounted: isVue3 ? \"mounted\" : \"inserted\",\r\n  updated: isVue3 ? \"updated\" : \"componentUpdated\",\r\n  unmounted: isVue3 ? \"unmounted\" : \"unbind\"\r\n};\r\n\r\nfunction cacheStringFunction(fn) {\r\n  const cache = /* @__PURE__ */ Object.create(null);\r\n  return (str) => {\r\n    const hit = cache[str];\r\n    return hit || (cache[str] = fn(str));\r\n  };\r\n}\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, \"-$1\").toLowerCase());\r\nconst camelizeRE = /-(\\w)/g;\r\nconst camelize = cacheStringFunction((str) => {\r\n  return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : \"\");\r\n});\r\n\r\nfunction promiseTimeout(ms, throwOnTimeout = false, reason = \"Timeout\") {\r\n  return new Promise((resolve, reject) => {\r\n    if (throwOnTimeout)\r\n      setTimeout(() => reject(reason), ms);\r\n    else\r\n      setTimeout(resolve, ms);\r\n  });\r\n}\r\nfunction identity(arg) {\r\n  return arg;\r\n}\r\nfunction createSingletonPromise(fn) {\r\n  let _promise;\r\n  function wrapper() {\r\n    if (!_promise)\r\n      _promise = fn();\r\n    return _promise;\r\n  }\r\n  wrapper.reset = async () => {\r\n    const _prev = _promise;\r\n    _promise = void 0;\r\n    if (_prev)\r\n      await _prev;\r\n  };\r\n  return wrapper;\r\n}\r\nfunction invoke(fn) {\r\n  return fn();\r\n}\r\nfunction containsProp(obj, ...props) {\r\n  return props.some((k) => k in obj);\r\n}\r\nfunction increaseWithUnit(target, delta) {\r\n  var _a;\r\n  if (typeof target === \"number\")\r\n    return target + delta;\r\n  const value = ((_a = target.match(/^-?[0-9]+\\.?[0-9]*/)) == null ? void 0 : _a[0]) || \"\";\r\n  const unit = target.slice(value.length);\r\n  const result = Number.parseFloat(value) + delta;\r\n  if (Number.isNaN(result))\r\n    return target;\r\n  return result + unit;\r\n}\r\nfunction objectPick(obj, keys, omitUndefined = false) {\r\n  return keys.reduce((n, k) => {\r\n    if (k in obj) {\r\n      if (!omitUndefined || obj[k] !== void 0)\r\n        n[k] = obj[k];\r\n    }\r\n    return n;\r\n  }, {});\r\n}\r\nfunction objectOmit(obj, keys, omitUndefined = false) {\r\n  return Object.fromEntries(Object.entries(obj).filter(([key, value]) => {\r\n    return (!omitUndefined || value !== void 0) && !keys.includes(key);\r\n  }));\r\n}\r\nfunction objectEntries(obj) {\r\n  return Object.entries(obj);\r\n}\r\nfunction getLifeCycleTarget(target) {\r\n  return target || getCurrentInstance();\r\n}\r\n\r\nfunction toRef(...args) {\r\n  if (args.length !== 1)\r\n    return toRef$1(...args);\r\n  const r = args[0];\r\n  return typeof r === \"function\" ? readonly(customRef(() => ({ get: r, set: noop }))) : ref(r);\r\n}\r\nconst resolveRef = toRef;\r\n\r\nfunction reactivePick(obj, ...keys) {\r\n  const flatKeys = keys.flat();\r\n  const predicate = flatKeys[0];\r\n  return reactiveComputed(() => typeof predicate === \"function\" ? Object.fromEntries(Object.entries(toRefs$1(obj)).filter(([k, v]) => predicate(toValue(v), k))) : Object.fromEntries(flatKeys.map((k) => [k, toRef(obj, k)])));\r\n}\r\n\r\nfunction refAutoReset(defaultValue, afterMs = 1e4) {\r\n  return customRef((track, trigger) => {\r\n    let value = toValue(defaultValue);\r\n    let timer;\r\n    const resetAfter = () => setTimeout(() => {\r\n      value = toValue(defaultValue);\r\n      trigger();\r\n    }, toValue(afterMs));\r\n    tryOnScopeDispose(() => {\r\n      clearTimeout(timer);\r\n    });\r\n    return {\r\n      get() {\r\n        track();\r\n        return value;\r\n      },\r\n      set(newValue) {\r\n        value = newValue;\r\n        trigger();\r\n        clearTimeout(timer);\r\n        timer = resetAfter();\r\n      }\r\n    };\r\n  });\r\n}\r\n\r\nfunction useDebounceFn(fn, ms = 200, options = {}) {\r\n  return createFilterWrapper(\r\n    debounceFilter(ms, options),\r\n    fn\r\n  );\r\n}\r\n\r\nfunction refDebounced(value, ms = 200, options = {}) {\r\n  const debounced = ref(value.value);\r\n  const updater = useDebounceFn(() => {\r\n    debounced.value = value.value;\r\n  }, ms, options);\r\n  watch(value, () => updater());\r\n  return debounced;\r\n}\r\n\r\nfunction refDefault(source, defaultValue) {\r\n  return computed({\r\n    get() {\r\n      var _a;\r\n      return (_a = source.value) != null ? _a : defaultValue;\r\n    },\r\n    set(value) {\r\n      source.value = value;\r\n    }\r\n  });\r\n}\r\n\r\nfunction useThrottleFn(fn, ms = 200, trailing = false, leading = true, rejectOnCancel = false) {\r\n  return createFilterWrapper(\r\n    throttleFilter(ms, trailing, leading, rejectOnCancel),\r\n    fn\r\n  );\r\n}\r\n\r\nfunction refThrottled(value, delay = 200, trailing = true, leading = true) {\r\n  if (delay <= 0)\r\n    return value;\r\n  const throttled = ref(value.value);\r\n  const updater = useThrottleFn(() => {\r\n    throttled.value = value.value;\r\n  }, delay, trailing, leading);\r\n  watch(value, () => updater());\r\n  return throttled;\r\n}\r\n\r\nfunction refWithControl(initial, options = {}) {\r\n  let source = initial;\r\n  let track;\r\n  let trigger;\r\n  const ref = customRef((_track, _trigger) => {\r\n    track = _track;\r\n    trigger = _trigger;\r\n    return {\r\n      get() {\r\n        return get();\r\n      },\r\n      set(v) {\r\n        set(v);\r\n      }\r\n    };\r\n  });\r\n  function get(tracking = true) {\r\n    if (tracking)\r\n      track();\r\n    return source;\r\n  }\r\n  function set(value, triggering = true) {\r\n    var _a, _b;\r\n    if (value === source)\r\n      return;\r\n    const old = source;\r\n    if (((_a = options.onBeforeChange) == null ? void 0 : _a.call(options, value, old)) === false)\r\n      return;\r\n    source = value;\r\n    (_b = options.onChanged) == null ? void 0 : _b.call(options, value, old);\r\n    if (triggering)\r\n      trigger();\r\n  }\r\n  const untrackedGet = () => get(false);\r\n  const silentSet = (v) => set(v, false);\r\n  const peek = () => get(false);\r\n  const lay = (v) => set(v, false);\r\n  return extendRef(\r\n    ref,\r\n    {\r\n      get,\r\n      set,\r\n      untrackedGet,\r\n      silentSet,\r\n      peek,\r\n      lay\r\n    },\r\n    { enumerable: true }\r\n  );\r\n}\r\nconst controlledRef = refWithControl;\r\n\r\nfunction set(...args) {\r\n  if (args.length === 2) {\r\n    const [ref, value] = args;\r\n    ref.value = value;\r\n  }\r\n  if (args.length === 3) {\r\n    if (isVue2) {\r\n      set$1(...args);\r\n    } else {\r\n      const [target, key, value] = args;\r\n      target[key] = value;\r\n    }\r\n  }\r\n}\r\n\r\nfunction watchWithFilter(source, cb, options = {}) {\r\n  const {\r\n    eventFilter = bypassFilter,\r\n    ...watchOptions\r\n  } = options;\r\n  return watch(\r\n    source,\r\n    createFilterWrapper(\r\n      eventFilter,\r\n      cb\r\n    ),\r\n    watchOptions\r\n  );\r\n}\r\n\r\nfunction watchPausable(source, cb, options = {}) {\r\n  const {\r\n    eventFilter: filter,\r\n    ...watchOptions\r\n  } = options;\r\n  const { eventFilter, pause, resume, isActive } = pausableFilter(filter);\r\n  const stop = watchWithFilter(\r\n    source,\r\n    cb,\r\n    {\r\n      ...watchOptions,\r\n      eventFilter\r\n    }\r\n  );\r\n  return { stop, pause, resume, isActive };\r\n}\r\n\r\nfunction syncRef(left, right, ...[options]) {\r\n  const {\r\n    flush = \"sync\",\r\n    deep = false,\r\n    immediate = true,\r\n    direction = \"both\",\r\n    transform = {}\r\n  } = options || {};\r\n  const watchers = [];\r\n  const transformLTR = \"ltr\" in transform && transform.ltr || ((v) => v);\r\n  const transformRTL = \"rtl\" in transform && transform.rtl || ((v) => v);\r\n  if (direction === \"both\" || direction === \"ltr\") {\r\n    watchers.push(watchPausable(\r\n      left,\r\n      (newValue) => {\r\n        watchers.forEach((w) => w.pause());\r\n        right.value = transformLTR(newValue);\r\n        watchers.forEach((w) => w.resume());\r\n      },\r\n      { flush, deep, immediate }\r\n    ));\r\n  }\r\n  if (direction === \"both\" || direction === \"rtl\") {\r\n    watchers.push(watchPausable(\r\n      right,\r\n      (newValue) => {\r\n        watchers.forEach((w) => w.pause());\r\n        left.value = transformRTL(newValue);\r\n        watchers.forEach((w) => w.resume());\r\n      },\r\n      { flush, deep, immediate }\r\n    ));\r\n  }\r\n  const stop = () => {\r\n    watchers.forEach((w) => w.stop());\r\n  };\r\n  return stop;\r\n}\r\n\r\nfunction syncRefs(source, targets, options = {}) {\r\n  const {\r\n    flush = \"sync\",\r\n    deep = false,\r\n    immediate = true\r\n  } = options;\r\n  if (!Array.isArray(targets))\r\n    targets = [targets];\r\n  return watch(\r\n    source,\r\n    (newValue) => targets.forEach((target) => target.value = newValue),\r\n    { flush, deep, immediate }\r\n  );\r\n}\r\n\r\nfunction toRefs(objectRef, options = {}) {\r\n  if (!isRef(objectRef))\r\n    return toRefs$1(objectRef);\r\n  const result = Array.isArray(objectRef.value) ? Array.from({ length: objectRef.value.length }) : {};\r\n  for (const key in objectRef.value) {\r\n    result[key] = customRef(() => ({\r\n      get() {\r\n        return objectRef.value[key];\r\n      },\r\n      set(v) {\r\n        var _a;\r\n        const replaceRef = (_a = toValue(options.replaceRef)) != null ? _a : true;\r\n        if (replaceRef) {\r\n          if (Array.isArray(objectRef.value)) {\r\n            const copy = [...objectRef.value];\r\n            copy[key] = v;\r\n            objectRef.value = copy;\r\n          } else {\r\n            const newObject = { ...objectRef.value, [key]: v };\r\n            Object.setPrototypeOf(newObject, Object.getPrototypeOf(objectRef.value));\r\n            objectRef.value = newObject;\r\n          }\r\n        } else {\r\n          objectRef.value[key] = v;\r\n        }\r\n      }\r\n    }));\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction tryOnBeforeMount(fn, sync = true, target) {\r\n  const instance = getLifeCycleTarget(target);\r\n  if (instance)\r\n    onBeforeMount(fn, target);\r\n  else if (sync)\r\n    fn();\r\n  else\r\n    nextTick(fn);\r\n}\r\n\r\nfunction tryOnBeforeUnmount(fn, target) {\r\n  const instance = getLifeCycleTarget(target);\r\n  if (instance)\r\n    onBeforeUnmount(fn, target);\r\n}\r\n\r\nfunction tryOnMounted(fn, sync = true, target) {\r\n  const instance = getLifeCycleTarget();\r\n  if (instance)\r\n    onMounted(fn, target);\r\n  else if (sync)\r\n    fn();\r\n  else\r\n    nextTick(fn);\r\n}\r\n\r\nfunction tryOnUnmounted(fn, target) {\r\n  const instance = getLifeCycleTarget(target);\r\n  if (instance)\r\n    onUnmounted(fn, target);\r\n}\r\n\r\nfunction createUntil(r, isNot = false) {\r\n  function toMatch(condition, { flush = \"sync\", deep = false, timeout, throwOnTimeout } = {}) {\r\n    let stop = null;\r\n    const watcher = new Promise((resolve) => {\r\n      stop = watch(\r\n        r,\r\n        (v) => {\r\n          if (condition(v) !== isNot) {\r\n            stop == null ? void 0 : stop();\r\n            resolve(v);\r\n          }\r\n        },\r\n        {\r\n          flush,\r\n          deep,\r\n          immediate: true\r\n        }\r\n      );\r\n    });\r\n    const promises = [watcher];\r\n    if (timeout != null) {\r\n      promises.push(\r\n        promiseTimeout(timeout, throwOnTimeout).then(() => toValue(r)).finally(() => stop == null ? void 0 : stop())\r\n      );\r\n    }\r\n    return Promise.race(promises);\r\n  }\r\n  function toBe(value, options) {\r\n    if (!isRef(value))\r\n      return toMatch((v) => v === value, options);\r\n    const { flush = \"sync\", deep = false, timeout, throwOnTimeout } = options != null ? options : {};\r\n    let stop = null;\r\n    const watcher = new Promise((resolve) => {\r\n      stop = watch(\r\n        [r, value],\r\n        ([v1, v2]) => {\r\n          if (isNot !== (v1 === v2)) {\r\n            stop == null ? void 0 : stop();\r\n            resolve(v1);\r\n          }\r\n        },\r\n        {\r\n          flush,\r\n          deep,\r\n          immediate: true\r\n        }\r\n      );\r\n    });\r\n    const promises = [watcher];\r\n    if (timeout != null) {\r\n      promises.push(\r\n        promiseTimeout(timeout, throwOnTimeout).then(() => toValue(r)).finally(() => {\r\n          stop == null ? void 0 : stop();\r\n          return toValue(r);\r\n        })\r\n      );\r\n    }\r\n    return Promise.race(promises);\r\n  }\r\n  function toBeTruthy(options) {\r\n    return toMatch((v) => Boolean(v), options);\r\n  }\r\n  function toBeNull(options) {\r\n    return toBe(null, options);\r\n  }\r\n  function toBeUndefined(options) {\r\n    return toBe(void 0, options);\r\n  }\r\n  function toBeNaN(options) {\r\n    return toMatch(Number.isNaN, options);\r\n  }\r\n  function toContains(value, options) {\r\n    return toMatch((v) => {\r\n      const array = Array.from(v);\r\n      return array.includes(value) || array.includes(toValue(value));\r\n    }, options);\r\n  }\r\n  function changed(options) {\r\n    return changedTimes(1, options);\r\n  }\r\n  function changedTimes(n = 1, options) {\r\n    let count = -1;\r\n    return toMatch(() => {\r\n      count += 1;\r\n      return count >= n;\r\n    }, options);\r\n  }\r\n  if (Array.isArray(toValue(r))) {\r\n    const instance = {\r\n      toMatch,\r\n      toContains,\r\n      changed,\r\n      changedTimes,\r\n      get not() {\r\n        return createUntil(r, !isNot);\r\n      }\r\n    };\r\n    return instance;\r\n  } else {\r\n    const instance = {\r\n      toMatch,\r\n      toBe,\r\n      toBeTruthy,\r\n      toBeNull,\r\n      toBeNaN,\r\n      toBeUndefined,\r\n      changed,\r\n      changedTimes,\r\n      get not() {\r\n        return createUntil(r, !isNot);\r\n      }\r\n    };\r\n    return instance;\r\n  }\r\n}\r\nfunction until(r) {\r\n  return createUntil(r);\r\n}\r\n\r\nfunction defaultComparator(value, othVal) {\r\n  return value === othVal;\r\n}\r\nfunction useArrayDifference(...args) {\r\n  var _a;\r\n  const list = args[0];\r\n  const values = args[1];\r\n  let compareFn = (_a = args[2]) != null ? _a : defaultComparator;\r\n  if (typeof compareFn === \"string\") {\r\n    const key = compareFn;\r\n    compareFn = (value, othVal) => value[key] === othVal[key];\r\n  }\r\n  return computed(() => toValue(list).filter((x) => toValue(values).findIndex((y) => compareFn(x, y)) === -1));\r\n}\r\n\r\nfunction useArrayEvery(list, fn) {\r\n  return computed(() => toValue(list).every((element, index, array) => fn(toValue(element), index, array)));\r\n}\r\n\r\nfunction useArrayFilter(list, fn) {\r\n  return computed(() => toValue(list).map((i) => toValue(i)).filter(fn));\r\n}\r\n\r\nfunction useArrayFind(list, fn) {\r\n  return computed(() => toValue(\r\n    toValue(list).find((element, index, array) => fn(toValue(element), index, array))\r\n  ));\r\n}\r\n\r\nfunction useArrayFindIndex(list, fn) {\r\n  return computed(() => toValue(list).findIndex((element, index, array) => fn(toValue(element), index, array)));\r\n}\r\n\r\nfunction findLast(arr, cb) {\r\n  let index = arr.length;\r\n  while (index-- > 0) {\r\n    if (cb(arr[index], index, arr))\r\n      return arr[index];\r\n  }\r\n  return void 0;\r\n}\r\nfunction useArrayFindLast(list, fn) {\r\n  return computed(() => toValue(\r\n    !Array.prototype.findLast ? findLast(toValue(list), (element, index, array) => fn(toValue(element), index, array)) : toValue(list).findLast((element, index, array) => fn(toValue(element), index, array))\r\n  ));\r\n}\r\n\r\nfunction isArrayIncludesOptions(obj) {\r\n  return isObject(obj) && containsProp(obj, \"formIndex\", \"comparator\");\r\n}\r\nfunction useArrayIncludes(...args) {\r\n  var _a;\r\n  const list = args[0];\r\n  const value = args[1];\r\n  let comparator = args[2];\r\n  let formIndex = 0;\r\n  if (isArrayIncludesOptions(comparator)) {\r\n    formIndex = (_a = comparator.fromIndex) != null ? _a : 0;\r\n    comparator = comparator.comparator;\r\n  }\r\n  if (typeof comparator === \"string\") {\r\n    const key = comparator;\r\n    comparator = (element, value2) => element[key] === toValue(value2);\r\n  }\r\n  comparator = comparator != null ? comparator : (element, value2) => element === toValue(value2);\r\n  return computed(() => toValue(list).slice(formIndex).some((element, index, array) => comparator(\r\n    toValue(element),\r\n    toValue(value),\r\n    index,\r\n    toValue(array)\r\n  )));\r\n}\r\n\r\nfunction useArrayJoin(list, separator) {\r\n  return computed(() => toValue(list).map((i) => toValue(i)).join(toValue(separator)));\r\n}\r\n\r\nfunction useArrayMap(list, fn) {\r\n  return computed(() => toValue(list).map((i) => toValue(i)).map(fn));\r\n}\r\n\r\nfunction useArrayReduce(list, reducer, ...args) {\r\n  const reduceCallback = (sum, value, index) => reducer(toValue(sum), toValue(value), index);\r\n  return computed(() => {\r\n    const resolved = toValue(list);\r\n    return args.length ? resolved.reduce(reduceCallback, toValue(args[0])) : resolved.reduce(reduceCallback);\r\n  });\r\n}\r\n\r\nfunction useArraySome(list, fn) {\r\n  return computed(() => toValue(list).some((element, index, array) => fn(toValue(element), index, array)));\r\n}\r\n\r\nfunction uniq(array) {\r\n  return Array.from(new Set(array));\r\n}\r\nfunction uniqueElementsBy(array, fn) {\r\n  return array.reduce((acc, v) => {\r\n    if (!acc.some((x) => fn(v, x, array)))\r\n      acc.push(v);\r\n    return acc;\r\n  }, []);\r\n}\r\nfunction useArrayUnique(list, compareFn) {\r\n  return computed(() => {\r\n    const resolvedList = toValue(list).map((element) => toValue(element));\r\n    return compareFn ? uniqueElementsBy(resolvedList, compareFn) : uniq(resolvedList);\r\n  });\r\n}\r\n\r\nfunction useCounter(initialValue = 0, options = {}) {\r\n  let _initialValue = unref(initialValue);\r\n  const count = ref(initialValue);\r\n  const {\r\n    max = Number.POSITIVE_INFINITY,\r\n    min = Number.NEGATIVE_INFINITY\r\n  } = options;\r\n  const inc = (delta = 1) => count.value = Math.max(Math.min(max, count.value + delta), min);\r\n  const dec = (delta = 1) => count.value = Math.min(Math.max(min, count.value - delta), max);\r\n  const get = () => count.value;\r\n  const set = (val) => count.value = Math.max(min, Math.min(max, val));\r\n  const reset = (val = _initialValue) => {\r\n    _initialValue = val;\r\n    return set(val);\r\n  };\r\n  return { count, inc, dec, get, set, reset };\r\n}\r\n\r\nconst REGEX_PARSE = /^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/;\r\nconst REGEX_FORMAT = /[YMDHhms]o|\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a{1,2}|A{1,2}|m{1,2}|s{1,2}|Z{1,2}|SSS/g;\r\nfunction defaultMeridiem(hours, minutes, isLowercase, hasPeriod) {\r\n  let m = hours < 12 ? \"AM\" : \"PM\";\r\n  if (hasPeriod)\r\n    m = m.split(\"\").reduce((acc, curr) => acc += `${curr}.`, \"\");\r\n  return isLowercase ? m.toLowerCase() : m;\r\n}\r\nfunction formatOrdinal(num) {\r\n  const suffixes = [\"th\", \"st\", \"nd\", \"rd\"];\r\n  const v = num % 100;\r\n  return num + (suffixes[(v - 20) % 10] || suffixes[v] || suffixes[0]);\r\n}\r\nfunction formatDate(date, formatStr, options = {}) {\r\n  var _a;\r\n  const years = date.getFullYear();\r\n  const month = date.getMonth();\r\n  const days = date.getDate();\r\n  const hours = date.getHours();\r\n  const minutes = date.getMinutes();\r\n  const seconds = date.getSeconds();\r\n  const milliseconds = date.getMilliseconds();\r\n  const day = date.getDay();\r\n  const meridiem = (_a = options.customMeridiem) != null ? _a : defaultMeridiem;\r\n  const matches = {\r\n    Yo: () => formatOrdinal(years),\r\n    YY: () => String(years).slice(-2),\r\n    YYYY: () => years,\r\n    M: () => month + 1,\r\n    Mo: () => formatOrdinal(month + 1),\r\n    MM: () => `${month + 1}`.padStart(2, \"0\"),\r\n    MMM: () => date.toLocaleDateString(options.locales, { month: \"short\" }),\r\n    MMMM: () => date.toLocaleDateString(options.locales, { month: \"long\" }),\r\n    D: () => String(days),\r\n    Do: () => formatOrdinal(days),\r\n    DD: () => `${days}`.padStart(2, \"0\"),\r\n    H: () => String(hours),\r\n    Ho: () => formatOrdinal(hours),\r\n    HH: () => `${hours}`.padStart(2, \"0\"),\r\n    h: () => `${hours % 12 || 12}`.padStart(1, \"0\"),\r\n    ho: () => formatOrdinal(hours % 12 || 12),\r\n    hh: () => `${hours % 12 || 12}`.padStart(2, \"0\"),\r\n    m: () => String(minutes),\r\n    mo: () => formatOrdinal(minutes),\r\n    mm: () => `${minutes}`.padStart(2, \"0\"),\r\n    s: () => String(seconds),\r\n    so: () => formatOrdinal(seconds),\r\n    ss: () => `${seconds}`.padStart(2, \"0\"),\r\n    SSS: () => `${milliseconds}`.padStart(3, \"0\"),\r\n    d: () => day,\r\n    dd: () => date.toLocaleDateString(options.locales, { weekday: \"narrow\" }),\r\n    ddd: () => date.toLocaleDateString(options.locales, { weekday: \"short\" }),\r\n    dddd: () => date.toLocaleDateString(options.locales, { weekday: \"long\" }),\r\n    A: () => meridiem(hours, minutes),\r\n    AA: () => meridiem(hours, minutes, false, true),\r\n    a: () => meridiem(hours, minutes, true),\r\n    aa: () => meridiem(hours, minutes, true, true)\r\n  };\r\n  return formatStr.replace(REGEX_FORMAT, (match, $1) => {\r\n    var _a2, _b;\r\n    return (_b = $1 != null ? $1 : (_a2 = matches[match]) == null ? void 0 : _a2.call(matches)) != null ? _b : match;\r\n  });\r\n}\r\nfunction normalizeDate(date) {\r\n  if (date === null)\r\n    return new Date(Number.NaN);\r\n  if (date === void 0)\r\n    return /* @__PURE__ */ new Date();\r\n  if (date instanceof Date)\r\n    return new Date(date);\r\n  if (typeof date === \"string\" && !/Z$/i.test(date)) {\r\n    const d = date.match(REGEX_PARSE);\r\n    if (d) {\r\n      const m = d[2] - 1 || 0;\r\n      const ms = (d[7] || \"0\").substring(0, 3);\r\n      return new Date(d[1], m, d[3] || 1, d[4] || 0, d[5] || 0, d[6] || 0, ms);\r\n    }\r\n  }\r\n  return new Date(date);\r\n}\r\nfunction useDateFormat(date, formatStr = \"HH:mm:ss\", options = {}) {\r\n  return computed(() => formatDate(normalizeDate(toValue(date)), toValue(formatStr), options));\r\n}\r\n\r\nfunction useIntervalFn(cb, interval = 1e3, options = {}) {\r\n  const {\r\n    immediate = true,\r\n    immediateCallback = false\r\n  } = options;\r\n  let timer = null;\r\n  const isActive = ref(false);\r\n  function clean() {\r\n    if (timer) {\r\n      clearInterval(timer);\r\n      timer = null;\r\n    }\r\n  }\r\n  function pause() {\r\n    isActive.value = false;\r\n    clean();\r\n  }\r\n  function resume() {\r\n    const intervalValue = toValue(interval);\r\n    if (intervalValue <= 0)\r\n      return;\r\n    isActive.value = true;\r\n    if (immediateCallback)\r\n      cb();\r\n    clean();\r\n    timer = setInterval(cb, intervalValue);\r\n  }\r\n  if (immediate && isClient)\r\n    resume();\r\n  if (isRef(interval) || typeof interval === \"function\") {\r\n    const stopWatch = watch(interval, () => {\r\n      if (isActive.value && isClient)\r\n        resume();\r\n    });\r\n    tryOnScopeDispose(stopWatch);\r\n  }\r\n  tryOnScopeDispose(pause);\r\n  return {\r\n    isActive,\r\n    pause,\r\n    resume\r\n  };\r\n}\r\n\r\nfunction useInterval(interval = 1e3, options = {}) {\r\n  const {\r\n    controls: exposeControls = false,\r\n    immediate = true,\r\n    callback\r\n  } = options;\r\n  const counter = ref(0);\r\n  const update = () => counter.value += 1;\r\n  const reset = () => {\r\n    counter.value = 0;\r\n  };\r\n  const controls = useIntervalFn(\r\n    callback ? () => {\r\n      update();\r\n      callback(counter.value);\r\n    } : update,\r\n    interval,\r\n    { immediate }\r\n  );\r\n  if (exposeControls) {\r\n    return {\r\n      counter,\r\n      reset,\r\n      ...controls\r\n    };\r\n  } else {\r\n    return counter;\r\n  }\r\n}\r\n\r\nfunction useLastChanged(source, options = {}) {\r\n  var _a;\r\n  const ms = ref((_a = options.initialValue) != null ? _a : null);\r\n  watch(\r\n    source,\r\n    () => ms.value = timestamp(),\r\n    options\r\n  );\r\n  return ms;\r\n}\r\n\r\nfunction useTimeoutFn(cb, interval, options = {}) {\r\n  const {\r\n    immediate = true\r\n  } = options;\r\n  const isPending = ref(false);\r\n  let timer = null;\r\n  function clear() {\r\n    if (timer) {\r\n      clearTimeout(timer);\r\n      timer = null;\r\n    }\r\n  }\r\n  function stop() {\r\n    isPending.value = false;\r\n    clear();\r\n  }\r\n  function start(...args) {\r\n    clear();\r\n    isPending.value = true;\r\n    timer = setTimeout(() => {\r\n      isPending.value = false;\r\n      timer = null;\r\n      cb(...args);\r\n    }, toValue(interval));\r\n  }\r\n  if (immediate) {\r\n    isPending.value = true;\r\n    if (isClient)\r\n      start();\r\n  }\r\n  tryOnScopeDispose(stop);\r\n  return {\r\n    isPending: readonly(isPending),\r\n    start,\r\n    stop\r\n  };\r\n}\r\n\r\nfunction useTimeout(interval = 1e3, options = {}) {\r\n  const {\r\n    controls: exposeControls = false,\r\n    callback\r\n  } = options;\r\n  const controls = useTimeoutFn(\r\n    callback != null ? callback : noop,\r\n    interval,\r\n    options\r\n  );\r\n  const ready = computed(() => !controls.isPending.value);\r\n  if (exposeControls) {\r\n    return {\r\n      ready,\r\n      ...controls\r\n    };\r\n  } else {\r\n    return ready;\r\n  }\r\n}\r\n\r\nfunction useToNumber(value, options = {}) {\r\n  const {\r\n    method = \"parseFloat\",\r\n    radix,\r\n    nanToZero\r\n  } = options;\r\n  return computed(() => {\r\n    let resolved = toValue(value);\r\n    if (typeof resolved === \"string\")\r\n      resolved = Number[method](resolved, radix);\r\n    if (nanToZero && Number.isNaN(resolved))\r\n      resolved = 0;\r\n    return resolved;\r\n  });\r\n}\r\n\r\nfunction useToString(value) {\r\n  return computed(() => `${toValue(value)}`);\r\n}\r\n\r\nfunction useToggle(initialValue = false, options = {}) {\r\n  const {\r\n    truthyValue = true,\r\n    falsyValue = false\r\n  } = options;\r\n  const valueIsRef = isRef(initialValue);\r\n  const _value = ref(initialValue);\r\n  function toggle(value) {\r\n    if (arguments.length) {\r\n      _value.value = value;\r\n      return _value.value;\r\n    } else {\r\n      const truthy = toValue(truthyValue);\r\n      _value.value = _value.value === truthy ? toValue(falsyValue) : truthy;\r\n      return _value.value;\r\n    }\r\n  }\r\n  if (valueIsRef)\r\n    return toggle;\r\n  else\r\n    return [_value, toggle];\r\n}\r\n\r\nfunction watchArray(source, cb, options) {\r\n  let oldList = (options == null ? void 0 : options.immediate) ? [] : [...source instanceof Function ? source() : Array.isArray(source) ? source : toValue(source)];\r\n  return watch(source, (newList, _, onCleanup) => {\r\n    const oldListRemains = Array.from({ length: oldList.length });\r\n    const added = [];\r\n    for (const obj of newList) {\r\n      let found = false;\r\n      for (let i = 0; i < oldList.length; i++) {\r\n        if (!oldListRemains[i] && obj === oldList[i]) {\r\n          oldListRemains[i] = true;\r\n          found = true;\r\n          break;\r\n        }\r\n      }\r\n      if (!found)\r\n        added.push(obj);\r\n    }\r\n    const removed = oldList.filter((_2, i) => !oldListRemains[i]);\r\n    cb(newList, oldList, added, removed, onCleanup);\r\n    oldList = [...newList];\r\n  }, options);\r\n}\r\n\r\nfunction watchAtMost(source, cb, options) {\r\n  const {\r\n    count,\r\n    ...watchOptions\r\n  } = options;\r\n  const current = ref(0);\r\n  const stop = watchWithFilter(\r\n    source,\r\n    (...args) => {\r\n      current.value += 1;\r\n      if (current.value >= toValue(count))\r\n        nextTick(() => stop());\r\n      cb(...args);\r\n    },\r\n    watchOptions\r\n  );\r\n  return { count: current, stop };\r\n}\r\n\r\nfunction watchDebounced(source, cb, options = {}) {\r\n  const {\r\n    debounce = 0,\r\n    maxWait = void 0,\r\n    ...watchOptions\r\n  } = options;\r\n  return watchWithFilter(\r\n    source,\r\n    cb,\r\n    {\r\n      ...watchOptions,\r\n      eventFilter: debounceFilter(debounce, { maxWait })\r\n    }\r\n  );\r\n}\r\n\r\nfunction watchDeep(source, cb, options) {\r\n  return watch(\r\n    source,\r\n    cb,\r\n    {\r\n      ...options,\r\n      deep: true\r\n    }\r\n  );\r\n}\r\n\r\nfunction watchIgnorable(source, cb, options = {}) {\r\n  const {\r\n    eventFilter = bypassFilter,\r\n    ...watchOptions\r\n  } = options;\r\n  const filteredCb = createFilterWrapper(\r\n    eventFilter,\r\n    cb\r\n  );\r\n  let ignoreUpdates;\r\n  let ignorePrevAsyncUpdates;\r\n  let stop;\r\n  if (watchOptions.flush === \"sync\") {\r\n    const ignore = ref(false);\r\n    ignorePrevAsyncUpdates = () => {\r\n    };\r\n    ignoreUpdates = (updater) => {\r\n      ignore.value = true;\r\n      updater();\r\n      ignore.value = false;\r\n    };\r\n    stop = watch(\r\n      source,\r\n      (...args) => {\r\n        if (!ignore.value)\r\n          filteredCb(...args);\r\n      },\r\n      watchOptions\r\n    );\r\n  } else {\r\n    const disposables = [];\r\n    const ignoreCounter = ref(0);\r\n    const syncCounter = ref(0);\r\n    ignorePrevAsyncUpdates = () => {\r\n      ignoreCounter.value = syncCounter.value;\r\n    };\r\n    disposables.push(\r\n      watch(\r\n        source,\r\n        () => {\r\n          syncCounter.value++;\r\n        },\r\n        { ...watchOptions, flush: \"sync\" }\r\n      )\r\n    );\r\n    ignoreUpdates = (updater) => {\r\n      const syncCounterPrev = syncCounter.value;\r\n      updater();\r\n      ignoreCounter.value += syncCounter.value - syncCounterPrev;\r\n    };\r\n    disposables.push(\r\n      watch(\r\n        source,\r\n        (...args) => {\r\n          const ignore = ignoreCounter.value > 0 && ignoreCounter.value === syncCounter.value;\r\n          ignoreCounter.value = 0;\r\n          syncCounter.value = 0;\r\n          if (ignore)\r\n            return;\r\n          filteredCb(...args);\r\n        },\r\n        watchOptions\r\n      )\r\n    );\r\n    stop = () => {\r\n      disposables.forEach((fn) => fn());\r\n    };\r\n  }\r\n  return { stop, ignoreUpdates, ignorePrevAsyncUpdates };\r\n}\r\n\r\nfunction watchImmediate(source, cb, options) {\r\n  return watch(\r\n    source,\r\n    cb,\r\n    {\r\n      ...options,\r\n      immediate: true\r\n    }\r\n  );\r\n}\r\n\r\nfunction watchOnce(source, cb, options) {\r\n  const stop = watch(source, (...args) => {\r\n    nextTick(() => stop());\r\n    return cb(...args);\r\n  }, options);\r\n  return stop;\r\n}\r\n\r\nfunction watchThrottled(source, cb, options = {}) {\r\n  const {\r\n    throttle = 0,\r\n    trailing = true,\r\n    leading = true,\r\n    ...watchOptions\r\n  } = options;\r\n  return watchWithFilter(\r\n    source,\r\n    cb,\r\n    {\r\n      ...watchOptions,\r\n      eventFilter: throttleFilter(throttle, trailing, leading)\r\n    }\r\n  );\r\n}\r\n\r\nfunction watchTriggerable(source, cb, options = {}) {\r\n  let cleanupFn;\r\n  function onEffect() {\r\n    if (!cleanupFn)\r\n      return;\r\n    const fn = cleanupFn;\r\n    cleanupFn = void 0;\r\n    fn();\r\n  }\r\n  function onCleanup(callback) {\r\n    cleanupFn = callback;\r\n  }\r\n  const _cb = (value, oldValue) => {\r\n    onEffect();\r\n    return cb(value, oldValue, onCleanup);\r\n  };\r\n  const res = watchIgnorable(source, _cb, options);\r\n  const { ignoreUpdates } = res;\r\n  const trigger = () => {\r\n    let res2;\r\n    ignoreUpdates(() => {\r\n      res2 = _cb(getWatchSources(source), getOldValue(source));\r\n    });\r\n    return res2;\r\n  };\r\n  return {\r\n    ...res,\r\n    trigger\r\n  };\r\n}\r\nfunction getWatchSources(sources) {\r\n  if (isReactive(sources))\r\n    return sources;\r\n  if (Array.isArray(sources))\r\n    return sources.map((item) => toValue(item));\r\n  return toValue(sources);\r\n}\r\nfunction getOldValue(source) {\r\n  return Array.isArray(source) ? source.map(() => void 0) : void 0;\r\n}\r\n\r\nfunction whenever(source, cb, options) {\r\n  const stop = watch(\r\n    source,\r\n    (v, ov, onInvalidate) => {\r\n      if (v) {\r\n        if (options == null ? void 0 : options.once)\r\n          nextTick(() => stop());\r\n        cb(v, ov, onInvalidate);\r\n      }\r\n    },\r\n    {\r\n      ...options,\r\n      once: false\r\n    }\r\n  );\r\n  return stop;\r\n}\r\n\r\nexport { assert, refAutoReset as autoResetRef, bypassFilter, camelize, clamp, computedEager, computedWithControl, containsProp, computedWithControl as controlledComputed, controlledRef, createEventHook, createFilterWrapper, createGlobalState, createInjectionState, reactify as createReactiveFn, createSharedComposable, createSingletonPromise, debounceFilter, refDebounced as debouncedRef, watchDebounced as debouncedWatch, directiveHooks, computedEager as eagerComputed, extendRef, formatDate, get, getLifeCycleTarget, hasOwn, hyphenate, identity, watchIgnorable as ignorableWatch, increaseWithUnit, injectLocal, invoke, isClient, isDef, isDefined, isIOS, isObject, isWorker, makeDestructurable, noop, normalizeDate, notNullish, now, objectEntries, objectOmit, objectPick, pausableFilter, watchPausable as pausableWatch, promiseTimeout, provideLocal, rand, reactify, reactifyObject, reactiveComputed, reactiveOmit, reactivePick, refAutoReset, refDebounced, refDefault, refThrottled, refWithControl, resolveRef, resolveUnref, set, syncRef, syncRefs, throttleFilter, refThrottled as throttledRef, watchThrottled as throttledWatch, timestamp, toReactive, toRef, toRefs, toValue, tryOnBeforeMount, tryOnBeforeUnmount, tryOnMounted, tryOnScopeDispose, tryOnUnmounted, until, useArrayDifference, useArrayEvery, useArrayFilter, useArrayFind, useArrayFindIndex, useArrayFindLast, useArrayIncludes, useArrayJoin, useArrayMap, useArrayReduce, useArraySome, useArrayUnique, useCounter, useDateFormat, refDebounced as useDebounce, useDebounceFn, useInterval, useIntervalFn, useLastChanged, refThrottled as useThrottle, useThrottleFn, useTimeout, useTimeoutFn, useToNumber, useToString, useToggle, watchArray, watchAtMost, watchDebounced, watchDeep, watchIgnorable, watchImmediate, watchOnce, watchPausable, watchThrottled, watchTriggerable, watchWithFilter, whenever };\r\n", "import * as Vue from 'vue'\r\n\r\nvar isVue2 = false\r\nvar isVue3 = true\r\nvar Vue2 = undefined\r\n\r\nfunction install() {}\r\n\r\nexport function set(target, key, val) {\r\n  if (Array.isArray(target)) {\r\n    target.length = Math.max(target.length, key)\r\n    target.splice(key, 1, val)\r\n    return val\r\n  }\r\n  target[key] = val\r\n  return val\r\n}\r\n\r\nexport function del(target, key) {\r\n  if (Array.isArray(target)) {\r\n    target.splice(key, 1)\r\n    return\r\n  }\r\n  delete target[key]\r\n}\r\n\r\nexport * from 'vue'\r\nexport {\r\n  Vue,\r\n  Vue2,\r\n  isVue2,\r\n  isVue3,\r\n  install,\r\n}\r\n", "import { noop, makeDestructurable, camelize, toValue, isClient, isObject, tryOnScopeDispose, isIOS, tryOnMounted, objectOmit, promiseTimeout, until, increaseWithUnit, objectEntries, createSingletonPromise, useTimeoutFn, pausableWatch, toRef, createEventHook, notNullish, computedWithControl, timestamp, pausableFilter, watchIgnorable, debounceFilter, createFilterWrapper, bypassFilter, toRefs, useIntervalFn, containsProp, hasOwn, throttleFilter, useDebounceFn, useThrottleFn, clamp, syncRef, objectPick, tryOnUnmounted, watchWithFilter, tryOnBeforeUnmount, identity, isDef, isWorker } from '@vueuse/shared';\r\nexport * from '@vueuse/shared';\r\nimport { isRef, ref, shallowRef, watchEffect, computed, inject, isVue3, version, defineComponent, h, TransitionGroup, shallowReactive, Fragment, watch, getCurrentInstance, customRef, onUpdated, onMounted, isVue2, readonly, nextTick, reactive, markRaw, unref, getCurrentScope, set, del, isReadonly, onBeforeUpdate } from 'vue-demi';\r\n\r\nfunction computedAsync(evaluationCallback, initialState, optionsOrRef) {\r\n  let options;\r\n  if (isRef(optionsOrRef)) {\r\n    options = {\r\n      evaluating: optionsOrRef\r\n    };\r\n  } else {\r\n    options = optionsOrRef || {};\r\n  }\r\n  const {\r\n    lazy = false,\r\n    evaluating = void 0,\r\n    shallow = true,\r\n    onError = noop\r\n  } = options;\r\n  const started = ref(!lazy);\r\n  const current = shallow ? shallowRef(initialState) : ref(initialState);\r\n  let counter = 0;\r\n  watchEffect(async (onInvalidate) => {\r\n    if (!started.value)\r\n      return;\r\n    counter++;\r\n    const counterAtBeginning = counter;\r\n    let hasFinished = false;\r\n    if (evaluating) {\r\n      Promise.resolve().then(() => {\r\n        evaluating.value = true;\r\n      });\r\n    }\r\n    try {\r\n      const result = await evaluationCallback((cancelCallback) => {\r\n        onInvalidate(() => {\r\n          if (evaluating)\r\n            evaluating.value = false;\r\n          if (!hasFinished)\r\n            cancelCallback();\r\n        });\r\n      });\r\n      if (counterAtBeginning === counter)\r\n        current.value = result;\r\n    } catch (e) {\r\n      onError(e);\r\n    } finally {\r\n      if (evaluating && counterAtBeginning === counter)\r\n        evaluating.value = false;\r\n      hasFinished = true;\r\n    }\r\n  });\r\n  if (lazy) {\r\n    return computed(() => {\r\n      started.value = true;\r\n      return current.value;\r\n    });\r\n  } else {\r\n    return current;\r\n  }\r\n}\r\n\r\nfunction computedInject(key, options, defaultSource, treatDefaultAsFactory) {\r\n  let source = inject(key);\r\n  if (defaultSource)\r\n    source = inject(key, defaultSource);\r\n  if (treatDefaultAsFactory)\r\n    source = inject(key, defaultSource, treatDefaultAsFactory);\r\n  if (typeof options === \"function\") {\r\n    return computed((ctx) => options(source, ctx));\r\n  } else {\r\n    return computed({\r\n      get: (ctx) => options.get(source, ctx),\r\n      set: options.set\r\n    });\r\n  }\r\n}\r\n\r\nfunction createReusableTemplate(options = {}) {\r\n  if (!isVue3 && !version.startsWith(\"2.7.\")) {\r\n    if (process.env.NODE_ENV !== \"production\")\r\n      throw new Error(\"[VueUse] createReusableTemplate only works in Vue 2.7 or above.\");\r\n    return;\r\n  }\r\n  const {\r\n    inheritAttrs = true\r\n  } = options;\r\n  const render = shallowRef();\r\n  const define = /* #__PURE__ */ defineComponent({\r\n    setup(_, { slots }) {\r\n      return () => {\r\n        render.value = slots.default;\r\n      };\r\n    }\r\n  });\r\n  const reuse = /* #__PURE__ */ defineComponent({\r\n    inheritAttrs,\r\n    setup(_, { attrs, slots }) {\r\n      return () => {\r\n        var _a;\r\n        if (!render.value && process.env.NODE_ENV !== \"production\")\r\n          throw new Error(\"[VueUse] Failed to find the definition of reusable template\");\r\n        const vnode = (_a = render.value) == null ? void 0 : _a.call(render, { ...keysToCamelKebabCase(attrs), $slots: slots });\r\n        return inheritAttrs && (vnode == null ? void 0 : vnode.length) === 1 ? vnode[0] : vnode;\r\n      };\r\n    }\r\n  });\r\n  return makeDestructurable(\r\n    { define, reuse },\r\n    [define, reuse]\r\n  );\r\n}\r\nfunction keysToCamelKebabCase(obj) {\r\n  const newObj = {};\r\n  for (const key in obj)\r\n    newObj[camelize(key)] = obj[key];\r\n  return newObj;\r\n}\r\n\r\nfunction createTemplatePromise(options = {}) {\r\n  if (!isVue3) {\r\n    if (process.env.NODE_ENV !== \"production\")\r\n      throw new Error(\"[VueUse] createTemplatePromise only works in Vue 3 or above.\");\r\n    return;\r\n  }\r\n  let index = 0;\r\n  const instances = ref([]);\r\n  function create(...args) {\r\n    const props = shallowReactive({\r\n      key: index++,\r\n      args,\r\n      promise: void 0,\r\n      resolve: () => {\r\n      },\r\n      reject: () => {\r\n      },\r\n      isResolving: false,\r\n      options\r\n    });\r\n    instances.value.push(props);\r\n    props.promise = new Promise((_resolve, _reject) => {\r\n      props.resolve = (v) => {\r\n        props.isResolving = true;\r\n        return _resolve(v);\r\n      };\r\n      props.reject = _reject;\r\n    }).finally(() => {\r\n      props.promise = void 0;\r\n      const index2 = instances.value.indexOf(props);\r\n      if (index2 !== -1)\r\n        instances.value.splice(index2, 1);\r\n    });\r\n    return props.promise;\r\n  }\r\n  function start(...args) {\r\n    if (options.singleton && instances.value.length > 0)\r\n      return instances.value[0].promise;\r\n    return create(...args);\r\n  }\r\n  const component = /* #__PURE__ */ defineComponent((_, { slots }) => {\r\n    const renderList = () => instances.value.map((props) => {\r\n      var _a;\r\n      return h(Fragment, { key: props.key }, (_a = slots.default) == null ? void 0 : _a.call(slots, props));\r\n    });\r\n    if (options.transition)\r\n      return () => h(TransitionGroup, options.transition, renderList);\r\n    return renderList;\r\n  });\r\n  component.start = start;\r\n  return component;\r\n}\r\n\r\nfunction createUnrefFn(fn) {\r\n  return function(...args) {\r\n    return fn.apply(this, args.map((i) => toValue(i)));\r\n  };\r\n}\r\n\r\nfunction unrefElement(elRef) {\r\n  var _a;\r\n  const plain = toValue(elRef);\r\n  return (_a = plain == null ? void 0 : plain.$el) != null ? _a : plain;\r\n}\r\n\r\nconst defaultWindow = isClient ? window : void 0;\r\nconst defaultDocument = isClient ? window.document : void 0;\r\nconst defaultNavigator = isClient ? window.navigator : void 0;\r\nconst defaultLocation = isClient ? window.location : void 0;\r\n\r\nfunction useEventListener(...args) {\r\n  let target;\r\n  let events;\r\n  let listeners;\r\n  let options;\r\n  if (typeof args[0] === \"string\" || Array.isArray(args[0])) {\r\n    [events, listeners, options] = args;\r\n    target = defaultWindow;\r\n  } else {\r\n    [target, events, listeners, options] = args;\r\n  }\r\n  if (!target)\r\n    return noop;\r\n  if (!Array.isArray(events))\r\n    events = [events];\r\n  if (!Array.isArray(listeners))\r\n    listeners = [listeners];\r\n  const cleanups = [];\r\n  const cleanup = () => {\r\n    cleanups.forEach((fn) => fn());\r\n    cleanups.length = 0;\r\n  };\r\n  const register = (el, event, listener, options2) => {\r\n    el.addEventListener(event, listener, options2);\r\n    return () => el.removeEventListener(event, listener, options2);\r\n  };\r\n  const stopWatch = watch(\r\n    () => [unrefElement(target), toValue(options)],\r\n    ([el, options2]) => {\r\n      cleanup();\r\n      if (!el)\r\n        return;\r\n      const optionsClone = isObject(options2) ? { ...options2 } : options2;\r\n      cleanups.push(\r\n        ...events.flatMap((event) => {\r\n          return listeners.map((listener) => register(el, event, listener, optionsClone));\r\n        })\r\n      );\r\n    },\r\n    { immediate: true, flush: \"post\" }\r\n  );\r\n  const stop = () => {\r\n    stopWatch();\r\n    cleanup();\r\n  };\r\n  tryOnScopeDispose(stop);\r\n  return stop;\r\n}\r\n\r\nlet _iOSWorkaround = false;\r\nfunction onClickOutside(target, handler, options = {}) {\r\n  const { window = defaultWindow, ignore = [], capture = true, detectIframe = false } = options;\r\n  if (!window)\r\n    return noop;\r\n  if (isIOS && !_iOSWorkaround) {\r\n    _iOSWorkaround = true;\r\n    Array.from(window.document.body.children).forEach((el) => el.addEventListener(\"click\", noop));\r\n    window.document.documentElement.addEventListener(\"click\", noop);\r\n  }\r\n  let shouldListen = true;\r\n  const shouldIgnore = (event) => {\r\n    return ignore.some((target2) => {\r\n      if (typeof target2 === \"string\") {\r\n        return Array.from(window.document.querySelectorAll(target2)).some((el) => el === event.target || event.composedPath().includes(el));\r\n      } else {\r\n        const el = unrefElement(target2);\r\n        return el && (event.target === el || event.composedPath().includes(el));\r\n      }\r\n    });\r\n  };\r\n  const listener = (event) => {\r\n    const el = unrefElement(target);\r\n    if (!el || el === event.target || event.composedPath().includes(el))\r\n      return;\r\n    if (event.detail === 0)\r\n      shouldListen = !shouldIgnore(event);\r\n    if (!shouldListen) {\r\n      shouldListen = true;\r\n      return;\r\n    }\r\n    handler(event);\r\n  };\r\n  const cleanup = [\r\n    useEventListener(window, \"click\", listener, { passive: true, capture }),\r\n    useEventListener(window, \"pointerdown\", (e) => {\r\n      const el = unrefElement(target);\r\n      shouldListen = !shouldIgnore(e) && !!(el && !e.composedPath().includes(el));\r\n    }, { passive: true }),\r\n    detectIframe && useEventListener(window, \"blur\", (event) => {\r\n      setTimeout(() => {\r\n        var _a;\r\n        const el = unrefElement(target);\r\n        if (((_a = window.document.activeElement) == null ? void 0 : _a.tagName) === \"IFRAME\" && !(el == null ? void 0 : el.contains(window.document.activeElement)))\r\n          handler(event);\r\n      }, 0);\r\n    })\r\n  ].filter(Boolean);\r\n  const stop = () => cleanup.forEach((fn) => fn());\r\n  return stop;\r\n}\r\n\r\nfunction createKeyPredicate(keyFilter) {\r\n  if (typeof keyFilter === \"function\")\r\n    return keyFilter;\r\n  else if (typeof keyFilter === \"string\")\r\n    return (event) => event.key === keyFilter;\r\n  else if (Array.isArray(keyFilter))\r\n    return (event) => keyFilter.includes(event.key);\r\n  return () => true;\r\n}\r\nfunction onKeyStroke(...args) {\r\n  let key;\r\n  let handler;\r\n  let options = {};\r\n  if (args.length === 3) {\r\n    key = args[0];\r\n    handler = args[1];\r\n    options = args[2];\r\n  } else if (args.length === 2) {\r\n    if (typeof args[1] === \"object\") {\r\n      key = true;\r\n      handler = args[0];\r\n      options = args[1];\r\n    } else {\r\n      key = args[0];\r\n      handler = args[1];\r\n    }\r\n  } else {\r\n    key = true;\r\n    handler = args[0];\r\n  }\r\n  const {\r\n    target = defaultWindow,\r\n    eventName = \"keydown\",\r\n    passive = false,\r\n    dedupe = false\r\n  } = options;\r\n  const predicate = createKeyPredicate(key);\r\n  const listener = (e) => {\r\n    if (e.repeat && toValue(dedupe))\r\n      return;\r\n    if (predicate(e))\r\n      handler(e);\r\n  };\r\n  return useEventListener(target, eventName, listener, passive);\r\n}\r\nfunction onKeyDown(key, handler, options = {}) {\r\n  return onKeyStroke(key, handler, { ...options, eventName: \"keydown\" });\r\n}\r\nfunction onKeyPressed(key, handler, options = {}) {\r\n  return onKeyStroke(key, handler, { ...options, eventName: \"keypress\" });\r\n}\r\nfunction onKeyUp(key, handler, options = {}) {\r\n  return onKeyStroke(key, handler, { ...options, eventName: \"keyup\" });\r\n}\r\n\r\nconst DEFAULT_DELAY = 500;\r\nconst DEFAULT_THRESHOLD = 10;\r\nfunction onLongPress(target, handler, options) {\r\n  var _a, _b;\r\n  const elementRef = computed(() => unrefElement(target));\r\n  let timeout;\r\n  let posStart;\r\n  function clear() {\r\n    if (timeout) {\r\n      clearTimeout(timeout);\r\n      timeout = void 0;\r\n    }\r\n    posStart = void 0;\r\n  }\r\n  function onDown(ev) {\r\n    var _a2, _b2, _c, _d;\r\n    if (((_a2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _a2.self) && ev.target !== elementRef.value)\r\n      return;\r\n    clear();\r\n    if ((_b2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _b2.prevent)\r\n      ev.preventDefault();\r\n    if ((_c = options == null ? void 0 : options.modifiers) == null ? void 0 : _c.stop)\r\n      ev.stopPropagation();\r\n    posStart = {\r\n      x: ev.x,\r\n      y: ev.y\r\n    };\r\n    timeout = setTimeout(\r\n      () => handler(ev),\r\n      (_d = options == null ? void 0 : options.delay) != null ? _d : DEFAULT_DELAY\r\n    );\r\n  }\r\n  function onMove(ev) {\r\n    var _a2, _b2, _c, _d;\r\n    if (((_a2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _a2.self) && ev.target !== elementRef.value)\r\n      return;\r\n    if (!posStart || (options == null ? void 0 : options.distanceThreshold) === false)\r\n      return;\r\n    if ((_b2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _b2.prevent)\r\n      ev.preventDefault();\r\n    if ((_c = options == null ? void 0 : options.modifiers) == null ? void 0 : _c.stop)\r\n      ev.stopPropagation();\r\n    const dx = ev.x - posStart.x;\r\n    const dy = ev.y - posStart.y;\r\n    const distance = Math.sqrt(dx * dx + dy * dy);\r\n    if (distance >= ((_d = options == null ? void 0 : options.distanceThreshold) != null ? _d : DEFAULT_THRESHOLD))\r\n      clear();\r\n  }\r\n  const listenerOptions = {\r\n    capture: (_a = options == null ? void 0 : options.modifiers) == null ? void 0 : _a.capture,\r\n    once: (_b = options == null ? void 0 : options.modifiers) == null ? void 0 : _b.once\r\n  };\r\n  const cleanup = [\r\n    useEventListener(elementRef, \"pointerdown\", onDown, listenerOptions),\r\n    useEventListener(elementRef, \"pointermove\", onMove, listenerOptions),\r\n    useEventListener(elementRef, [\"pointerup\", \"pointerleave\"], clear, listenerOptions)\r\n  ];\r\n  const stop = () => cleanup.forEach((fn) => fn());\r\n  return stop;\r\n}\r\n\r\nfunction isFocusedElementEditable() {\r\n  const { activeElement, body } = document;\r\n  if (!activeElement)\r\n    return false;\r\n  if (activeElement === body)\r\n    return false;\r\n  switch (activeElement.tagName) {\r\n    case \"INPUT\":\r\n    case \"TEXTAREA\":\r\n      return true;\r\n  }\r\n  return activeElement.hasAttribute(\"contenteditable\");\r\n}\r\nfunction isTypedCharValid({\r\n  keyCode,\r\n  metaKey,\r\n  ctrlKey,\r\n  altKey\r\n}) {\r\n  if (metaKey || ctrlKey || altKey)\r\n    return false;\r\n  if (keyCode >= 48 && keyCode <= 57)\r\n    return true;\r\n  if (keyCode >= 65 && keyCode <= 90)\r\n    return true;\r\n  if (keyCode >= 97 && keyCode <= 122)\r\n    return true;\r\n  return false;\r\n}\r\nfunction onStartTyping(callback, options = {}) {\r\n  const { document: document2 = defaultDocument } = options;\r\n  const keydown = (event) => {\r\n    !isFocusedElementEditable() && isTypedCharValid(event) && callback(event);\r\n  };\r\n  if (document2)\r\n    useEventListener(document2, \"keydown\", keydown, { passive: true });\r\n}\r\n\r\nfunction templateRef(key, initialValue = null) {\r\n  const instance = getCurrentInstance();\r\n  let _trigger = () => {\r\n  };\r\n  const element = customRef((track, trigger) => {\r\n    _trigger = trigger;\r\n    return {\r\n      get() {\r\n        var _a, _b;\r\n        track();\r\n        return (_b = (_a = instance == null ? void 0 : instance.proxy) == null ? void 0 : _a.$refs[key]) != null ? _b : initialValue;\r\n      },\r\n      set() {\r\n      }\r\n    };\r\n  });\r\n  tryOnMounted(_trigger);\r\n  onUpdated(_trigger);\r\n  return element;\r\n}\r\n\r\nfunction useActiveElement(options = {}) {\r\n  var _a;\r\n  const {\r\n    window = defaultWindow,\r\n    deep = true\r\n  } = options;\r\n  const document = (_a = options.document) != null ? _a : window == null ? void 0 : window.document;\r\n  const getDeepActiveElement = () => {\r\n    var _a2;\r\n    let element = document == null ? void 0 : document.activeElement;\r\n    if (deep) {\r\n      while (element == null ? void 0 : element.shadowRoot)\r\n        element = (_a2 = element == null ? void 0 : element.shadowRoot) == null ? void 0 : _a2.activeElement;\r\n    }\r\n    return element;\r\n  };\r\n  const activeElement = ref();\r\n  const trigger = () => {\r\n    activeElement.value = getDeepActiveElement();\r\n  };\r\n  if (window) {\r\n    useEventListener(window, \"blur\", (event) => {\r\n      if (event.relatedTarget !== null)\r\n        return;\r\n      trigger();\r\n    }, true);\r\n    useEventListener(window, \"focus\", trigger, true);\r\n  }\r\n  trigger();\r\n  return activeElement;\r\n}\r\n\r\nfunction useMounted() {\r\n  const isMounted = ref(false);\r\n  const instance = getCurrentInstance();\r\n  if (instance) {\r\n    onMounted(() => {\r\n      isMounted.value = true;\r\n    }, isVue2 ? null : instance);\r\n  }\r\n  return isMounted;\r\n}\r\n\r\nfunction useSupported(callback) {\r\n  const isMounted = useMounted();\r\n  return computed(() => {\r\n    isMounted.value;\r\n    return Boolean(callback());\r\n  });\r\n}\r\n\r\nfunction useRafFn(fn, options = {}) {\r\n  const {\r\n    immediate = true,\r\n    fpsLimit = void 0,\r\n    window = defaultWindow\r\n  } = options;\r\n  const isActive = ref(false);\r\n  const intervalLimit = fpsLimit ? 1e3 / fpsLimit : null;\r\n  let previousFrameTimestamp = 0;\r\n  let rafId = null;\r\n  function loop(timestamp) {\r\n    if (!isActive.value || !window)\r\n      return;\r\n    if (!previousFrameTimestamp)\r\n      previousFrameTimestamp = timestamp;\r\n    const delta = timestamp - previousFrameTimestamp;\r\n    if (intervalLimit && delta < intervalLimit) {\r\n      rafId = window.requestAnimationFrame(loop);\r\n      return;\r\n    }\r\n    previousFrameTimestamp = timestamp;\r\n    fn({ delta, timestamp });\r\n    rafId = window.requestAnimationFrame(loop);\r\n  }\r\n  function resume() {\r\n    if (!isActive.value && window) {\r\n      isActive.value = true;\r\n      previousFrameTimestamp = 0;\r\n      rafId = window.requestAnimationFrame(loop);\r\n    }\r\n  }\r\n  function pause() {\r\n    isActive.value = false;\r\n    if (rafId != null && window) {\r\n      window.cancelAnimationFrame(rafId);\r\n      rafId = null;\r\n    }\r\n  }\r\n  if (immediate)\r\n    resume();\r\n  tryOnScopeDispose(pause);\r\n  return {\r\n    isActive: readonly(isActive),\r\n    pause,\r\n    resume\r\n  };\r\n}\r\n\r\nfunction useAnimate(target, keyframes, options) {\r\n  let config;\r\n  let animateOptions;\r\n  if (isObject(options)) {\r\n    config = options;\r\n    animateOptions = objectOmit(options, [\"window\", \"immediate\", \"commitStyles\", \"persist\", \"onReady\", \"onError\"]);\r\n  } else {\r\n    config = { duration: options };\r\n    animateOptions = options;\r\n  }\r\n  const {\r\n    window = defaultWindow,\r\n    immediate = true,\r\n    commitStyles,\r\n    persist,\r\n    playbackRate: _playbackRate = 1,\r\n    onReady,\r\n    onError = (e) => {\r\n      console.error(e);\r\n    }\r\n  } = config;\r\n  const isSupported = useSupported(() => window && HTMLElement && \"animate\" in HTMLElement.prototype);\r\n  const animate = shallowRef(void 0);\r\n  const store = shallowReactive({\r\n    startTime: null,\r\n    currentTime: null,\r\n    timeline: null,\r\n    playbackRate: _playbackRate,\r\n    pending: false,\r\n    playState: immediate ? \"idle\" : \"paused\",\r\n    replaceState: \"active\"\r\n  });\r\n  const pending = computed(() => store.pending);\r\n  const playState = computed(() => store.playState);\r\n  const replaceState = computed(() => store.replaceState);\r\n  const startTime = computed({\r\n    get() {\r\n      return store.startTime;\r\n    },\r\n    set(value) {\r\n      store.startTime = value;\r\n      if (animate.value)\r\n        animate.value.startTime = value;\r\n    }\r\n  });\r\n  const currentTime = computed({\r\n    get() {\r\n      return store.currentTime;\r\n    },\r\n    set(value) {\r\n      store.currentTime = value;\r\n      if (animate.value) {\r\n        animate.value.currentTime = value;\r\n        syncResume();\r\n      }\r\n    }\r\n  });\r\n  const timeline = computed({\r\n    get() {\r\n      return store.timeline;\r\n    },\r\n    set(value) {\r\n      store.timeline = value;\r\n      if (animate.value)\r\n        animate.value.timeline = value;\r\n    }\r\n  });\r\n  const playbackRate = computed({\r\n    get() {\r\n      return store.playbackRate;\r\n    },\r\n    set(value) {\r\n      store.playbackRate = value;\r\n      if (animate.value)\r\n        animate.value.playbackRate = value;\r\n    }\r\n  });\r\n  const play = () => {\r\n    if (animate.value) {\r\n      try {\r\n        animate.value.play();\r\n        syncResume();\r\n      } catch (e) {\r\n        syncPause();\r\n        onError(e);\r\n      }\r\n    } else {\r\n      update();\r\n    }\r\n  };\r\n  const pause = () => {\r\n    var _a;\r\n    try {\r\n      (_a = animate.value) == null ? void 0 : _a.pause();\r\n      syncPause();\r\n    } catch (e) {\r\n      onError(e);\r\n    }\r\n  };\r\n  const reverse = () => {\r\n    var _a;\r\n    !animate.value && update();\r\n    try {\r\n      (_a = animate.value) == null ? void 0 : _a.reverse();\r\n      syncResume();\r\n    } catch (e) {\r\n      syncPause();\r\n      onError(e);\r\n    }\r\n  };\r\n  const finish = () => {\r\n    var _a;\r\n    try {\r\n      (_a = animate.value) == null ? void 0 : _a.finish();\r\n      syncPause();\r\n    } catch (e) {\r\n      onError(e);\r\n    }\r\n  };\r\n  const cancel = () => {\r\n    var _a;\r\n    try {\r\n      (_a = animate.value) == null ? void 0 : _a.cancel();\r\n      syncPause();\r\n    } catch (e) {\r\n      onError(e);\r\n    }\r\n  };\r\n  watch(() => unrefElement(target), (el) => {\r\n    el && update();\r\n  });\r\n  watch(() => keyframes, (value) => {\r\n    !animate.value && update();\r\n    if (!unrefElement(target) && animate.value) {\r\n      animate.value.effect = new KeyframeEffect(\r\n        unrefElement(target),\r\n        toValue(value),\r\n        animateOptions\r\n      );\r\n    }\r\n  }, { deep: true });\r\n  tryOnMounted(() => {\r\n    nextTick(() => update(true));\r\n  });\r\n  tryOnScopeDispose(cancel);\r\n  function update(init) {\r\n    const el = unrefElement(target);\r\n    if (!isSupported.value || !el)\r\n      return;\r\n    if (!animate.value)\r\n      animate.value = el.animate(toValue(keyframes), animateOptions);\r\n    if (commitStyles)\r\n      animate.value.commitStyles();\r\n    if (persist)\r\n      animate.value.persist();\r\n    if (_playbackRate !== 1)\r\n      animate.value.playbackRate = _playbackRate;\r\n    if (init && !immediate)\r\n      animate.value.pause();\r\n    else\r\n      syncResume();\r\n    onReady == null ? void 0 : onReady(animate.value);\r\n  }\r\n  useEventListener(animate, [\"cancel\", \"finish\", \"remove\"], syncPause);\r\n  const { resume: resumeRef, pause: pauseRef } = useRafFn(() => {\r\n    if (!animate.value)\r\n      return;\r\n    store.pending = animate.value.pending;\r\n    store.playState = animate.value.playState;\r\n    store.replaceState = animate.value.replaceState;\r\n    store.startTime = animate.value.startTime;\r\n    store.currentTime = animate.value.currentTime;\r\n    store.timeline = animate.value.timeline;\r\n    store.playbackRate = animate.value.playbackRate;\r\n  }, { immediate: false });\r\n  function syncResume() {\r\n    if (isSupported.value)\r\n      resumeRef();\r\n  }\r\n  function syncPause() {\r\n    if (isSupported.value && window)\r\n      window.requestAnimationFrame(pauseRef);\r\n  }\r\n  return {\r\n    isSupported,\r\n    animate,\r\n    // actions\r\n    play,\r\n    pause,\r\n    reverse,\r\n    finish,\r\n    cancel,\r\n    // state\r\n    pending,\r\n    playState,\r\n    replaceState,\r\n    startTime,\r\n    currentTime,\r\n    timeline,\r\n    playbackRate\r\n  };\r\n}\r\n\r\nfunction useAsyncQueue(tasks, options) {\r\n  const {\r\n    interrupt = true,\r\n    onError = noop,\r\n    onFinished = noop,\r\n    signal\r\n  } = options || {};\r\n  const promiseState = {\r\n    aborted: \"aborted\",\r\n    fulfilled: \"fulfilled\",\r\n    pending: \"pending\",\r\n    rejected: \"rejected\"\r\n  };\r\n  const initialResult = Array.from(Array.from({ length: tasks.length }), () => ({ state: promiseState.pending, data: null }));\r\n  const result = reactive(initialResult);\r\n  const activeIndex = ref(-1);\r\n  if (!tasks || tasks.length === 0) {\r\n    onFinished();\r\n    return {\r\n      activeIndex,\r\n      result\r\n    };\r\n  }\r\n  function updateResult(state, res) {\r\n    activeIndex.value++;\r\n    result[activeIndex.value].data = res;\r\n    result[activeIndex.value].state = state;\r\n  }\r\n  tasks.reduce((prev, curr) => {\r\n    return prev.then((prevRes) => {\r\n      var _a;\r\n      if (signal == null ? void 0 : signal.aborted) {\r\n        updateResult(promiseState.aborted, new Error(\"aborted\"));\r\n        return;\r\n      }\r\n      if (((_a = result[activeIndex.value]) == null ? void 0 : _a.state) === promiseState.rejected && interrupt) {\r\n        onFinished();\r\n        return;\r\n      }\r\n      const done = curr(prevRes).then((currentRes) => {\r\n        updateResult(promiseState.fulfilled, currentRes);\r\n        activeIndex.value === tasks.length - 1 && onFinished();\r\n        return currentRes;\r\n      });\r\n      if (!signal)\r\n        return done;\r\n      return Promise.race([done, whenAborted(signal)]);\r\n    }).catch((e) => {\r\n      if (signal == null ? void 0 : signal.aborted) {\r\n        updateResult(promiseState.aborted, e);\r\n        return e;\r\n      }\r\n      updateResult(promiseState.rejected, e);\r\n      onError();\r\n      return e;\r\n    });\r\n  }, Promise.resolve());\r\n  return {\r\n    activeIndex,\r\n    result\r\n  };\r\n}\r\nfunction whenAborted(signal) {\r\n  return new Promise((resolve, reject) => {\r\n    const error = new Error(\"aborted\");\r\n    if (signal.aborted)\r\n      reject(error);\r\n    else\r\n      signal.addEventListener(\"abort\", () => reject(error), { once: true });\r\n  });\r\n}\r\n\r\nfunction useAsyncState(promise, initialState, options) {\r\n  const {\r\n    immediate = true,\r\n    delay = 0,\r\n    onError = noop,\r\n    onSuccess = noop,\r\n    resetOnExecute = true,\r\n    shallow = true,\r\n    throwError\r\n  } = options != null ? options : {};\r\n  const state = shallow ? shallowRef(initialState) : ref(initialState);\r\n  const isReady = ref(false);\r\n  const isLoading = ref(false);\r\n  const error = shallowRef(void 0);\r\n  async function execute(delay2 = 0, ...args) {\r\n    if (resetOnExecute)\r\n      state.value = initialState;\r\n    error.value = void 0;\r\n    isReady.value = false;\r\n    isLoading.value = true;\r\n    if (delay2 > 0)\r\n      await promiseTimeout(delay2);\r\n    const _promise = typeof promise === \"function\" ? promise(...args) : promise;\r\n    try {\r\n      const data = await _promise;\r\n      state.value = data;\r\n      isReady.value = true;\r\n      onSuccess(data);\r\n    } catch (e) {\r\n      error.value = e;\r\n      onError(e);\r\n      if (throwError)\r\n        throw e;\r\n    } finally {\r\n      isLoading.value = false;\r\n    }\r\n    return state.value;\r\n  }\r\n  if (immediate)\r\n    execute(delay);\r\n  const shell = {\r\n    state,\r\n    isReady,\r\n    isLoading,\r\n    error,\r\n    execute\r\n  };\r\n  function waitUntilIsLoaded() {\r\n    return new Promise((resolve, reject) => {\r\n      until(isLoading).toBe(false).then(() => resolve(shell)).catch(reject);\r\n    });\r\n  }\r\n  return {\r\n    ...shell,\r\n    then(onFulfilled, onRejected) {\r\n      return waitUntilIsLoaded().then(onFulfilled, onRejected);\r\n    }\r\n  };\r\n}\r\n\r\nconst defaults = {\r\n  array: (v) => JSON.stringify(v),\r\n  object: (v) => JSON.stringify(v),\r\n  set: (v) => JSON.stringify(Array.from(v)),\r\n  map: (v) => JSON.stringify(Object.fromEntries(v)),\r\n  null: () => \"\"\r\n};\r\nfunction getDefaultSerialization(target) {\r\n  if (!target)\r\n    return defaults.null;\r\n  if (target instanceof Map)\r\n    return defaults.map;\r\n  else if (target instanceof Set)\r\n    return defaults.set;\r\n  else if (Array.isArray(target))\r\n    return defaults.array;\r\n  else\r\n    return defaults.object;\r\n}\r\n\r\nfunction useBase64(target, options) {\r\n  const base64 = ref(\"\");\r\n  const promise = ref();\r\n  function execute() {\r\n    if (!isClient)\r\n      return;\r\n    promise.value = new Promise((resolve, reject) => {\r\n      try {\r\n        const _target = toValue(target);\r\n        if (_target == null) {\r\n          resolve(\"\");\r\n        } else if (typeof _target === \"string\") {\r\n          resolve(blobToBase64(new Blob([_target], { type: \"text/plain\" })));\r\n        } else if (_target instanceof Blob) {\r\n          resolve(blobToBase64(_target));\r\n        } else if (_target instanceof ArrayBuffer) {\r\n          resolve(window.btoa(String.fromCharCode(...new Uint8Array(_target))));\r\n        } else if (_target instanceof HTMLCanvasElement) {\r\n          resolve(_target.toDataURL(options == null ? void 0 : options.type, options == null ? void 0 : options.quality));\r\n        } else if (_target instanceof HTMLImageElement) {\r\n          const img = _target.cloneNode(false);\r\n          img.crossOrigin = \"Anonymous\";\r\n          imgLoaded(img).then(() => {\r\n            const canvas = document.createElement(\"canvas\");\r\n            const ctx = canvas.getContext(\"2d\");\r\n            canvas.width = img.width;\r\n            canvas.height = img.height;\r\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n            resolve(canvas.toDataURL(options == null ? void 0 : options.type, options == null ? void 0 : options.quality));\r\n          }).catch(reject);\r\n        } else if (typeof _target === \"object\") {\r\n          const _serializeFn = (options == null ? void 0 : options.serializer) || getDefaultSerialization(_target);\r\n          const serialized = _serializeFn(_target);\r\n          return resolve(blobToBase64(new Blob([serialized], { type: \"application/json\" })));\r\n        } else {\r\n          reject(new Error(\"target is unsupported types\"));\r\n        }\r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    });\r\n    promise.value.then((res) => base64.value = res);\r\n    return promise.value;\r\n  }\r\n  if (isRef(target) || typeof target === \"function\")\r\n    watch(target, execute, { immediate: true });\r\n  else\r\n    execute();\r\n  return {\r\n    base64,\r\n    promise,\r\n    execute\r\n  };\r\n}\r\nfunction imgLoaded(img) {\r\n  return new Promise((resolve, reject) => {\r\n    if (!img.complete) {\r\n      img.onload = () => {\r\n        resolve();\r\n      };\r\n      img.onerror = reject;\r\n    } else {\r\n      resolve();\r\n    }\r\n  });\r\n}\r\nfunction blobToBase64(blob) {\r\n  return new Promise((resolve, reject) => {\r\n    const fr = new FileReader();\r\n    fr.onload = (e) => {\r\n      resolve(e.target.result);\r\n    };\r\n    fr.onerror = reject;\r\n    fr.readAsDataURL(blob);\r\n  });\r\n}\r\n\r\nfunction useBattery(options = {}) {\r\n  const { navigator = defaultNavigator } = options;\r\n  const events = [\"chargingchange\", \"chargingtimechange\", \"dischargingtimechange\", \"levelchange\"];\r\n  const isSupported = useSupported(() => navigator && \"getBattery\" in navigator && typeof navigator.getBattery === \"function\");\r\n  const charging = ref(false);\r\n  const chargingTime = ref(0);\r\n  const dischargingTime = ref(0);\r\n  const level = ref(1);\r\n  let battery;\r\n  function updateBatteryInfo() {\r\n    charging.value = this.charging;\r\n    chargingTime.value = this.chargingTime || 0;\r\n    dischargingTime.value = this.dischargingTime || 0;\r\n    level.value = this.level;\r\n  }\r\n  if (isSupported.value) {\r\n    navigator.getBattery().then((_battery) => {\r\n      battery = _battery;\r\n      updateBatteryInfo.call(battery);\r\n      useEventListener(battery, events, updateBatteryInfo, { passive: true });\r\n    });\r\n  }\r\n  return {\r\n    isSupported,\r\n    charging,\r\n    chargingTime,\r\n    dischargingTime,\r\n    level\r\n  };\r\n}\r\n\r\nfunction useBluetooth(options) {\r\n  let {\r\n    acceptAllDevices = false\r\n  } = options || {};\r\n  const {\r\n    filters = void 0,\r\n    optionalServices = void 0,\r\n    navigator = defaultNavigator\r\n  } = options || {};\r\n  const isSupported = useSupported(() => navigator && \"bluetooth\" in navigator);\r\n  const device = shallowRef(void 0);\r\n  const error = shallowRef(null);\r\n  watch(device, () => {\r\n    connectToBluetoothGATTServer();\r\n  });\r\n  async function requestDevice() {\r\n    if (!isSupported.value)\r\n      return;\r\n    error.value = null;\r\n    if (filters && filters.length > 0)\r\n      acceptAllDevices = false;\r\n    try {\r\n      device.value = await (navigator == null ? void 0 : navigator.bluetooth.requestDevice({\r\n        acceptAllDevices,\r\n        filters,\r\n        optionalServices\r\n      }));\r\n    } catch (err) {\r\n      error.value = err;\r\n    }\r\n  }\r\n  const server = ref();\r\n  const isConnected = computed(() => {\r\n    var _a;\r\n    return ((_a = server.value) == null ? void 0 : _a.connected) || false;\r\n  });\r\n  async function connectToBluetoothGATTServer() {\r\n    error.value = null;\r\n    if (device.value && device.value.gatt) {\r\n      device.value.addEventListener(\"gattserverdisconnected\", () => {\r\n      });\r\n      try {\r\n        server.value = await device.value.gatt.connect();\r\n      } catch (err) {\r\n        error.value = err;\r\n      }\r\n    }\r\n  }\r\n  tryOnMounted(() => {\r\n    var _a;\r\n    if (device.value)\r\n      (_a = device.value.gatt) == null ? void 0 : _a.connect();\r\n  });\r\n  tryOnScopeDispose(() => {\r\n    var _a;\r\n    if (device.value)\r\n      (_a = device.value.gatt) == null ? void 0 : _a.disconnect();\r\n  });\r\n  return {\r\n    isSupported,\r\n    isConnected,\r\n    // Device:\r\n    device,\r\n    requestDevice,\r\n    // Server:\r\n    server,\r\n    // Errors:\r\n    error\r\n  };\r\n}\r\n\r\nfunction useMediaQuery(query, options = {}) {\r\n  const { window = defaultWindow } = options;\r\n  const isSupported = useSupported(() => window && \"matchMedia\" in window && typeof window.matchMedia === \"function\");\r\n  let mediaQuery;\r\n  const matches = ref(false);\r\n  const handler = (event) => {\r\n    matches.value = event.matches;\r\n  };\r\n  const cleanup = () => {\r\n    if (!mediaQuery)\r\n      return;\r\n    if (\"removeEventListener\" in mediaQuery)\r\n      mediaQuery.removeEventListener(\"change\", handler);\r\n    else\r\n      mediaQuery.removeListener(handler);\r\n  };\r\n  const stopWatch = watchEffect(() => {\r\n    if (!isSupported.value)\r\n      return;\r\n    cleanup();\r\n    mediaQuery = window.matchMedia(toValue(query));\r\n    if (\"addEventListener\" in mediaQuery)\r\n      mediaQuery.addEventListener(\"change\", handler);\r\n    else\r\n      mediaQuery.addListener(handler);\r\n    matches.value = mediaQuery.matches;\r\n  });\r\n  tryOnScopeDispose(() => {\r\n    stopWatch();\r\n    cleanup();\r\n    mediaQuery = void 0;\r\n  });\r\n  return matches;\r\n}\r\n\r\nconst breakpointsTailwind = {\r\n  \"sm\": 640,\r\n  \"md\": 768,\r\n  \"lg\": 1024,\r\n  \"xl\": 1280,\r\n  \"2xl\": 1536\r\n};\r\nconst breakpointsBootstrapV5 = {\r\n  xs: 0,\r\n  sm: 576,\r\n  md: 768,\r\n  lg: 992,\r\n  xl: 1200,\r\n  xxl: 1400\r\n};\r\nconst breakpointsVuetifyV2 = {\r\n  xs: 0,\r\n  sm: 600,\r\n  md: 960,\r\n  lg: 1264,\r\n  xl: 1904\r\n};\r\nconst breakpointsVuetifyV3 = {\r\n  xs: 0,\r\n  sm: 600,\r\n  md: 960,\r\n  lg: 1280,\r\n  xl: 1920,\r\n  xxl: 2560\r\n};\r\nconst breakpointsVuetify = breakpointsVuetifyV2;\r\nconst breakpointsAntDesign = {\r\n  xs: 480,\r\n  sm: 576,\r\n  md: 768,\r\n  lg: 992,\r\n  xl: 1200,\r\n  xxl: 1600\r\n};\r\nconst breakpointsQuasar = {\r\n  xs: 0,\r\n  sm: 600,\r\n  md: 1024,\r\n  lg: 1440,\r\n  xl: 1920\r\n};\r\nconst breakpointsSematic = {\r\n  mobileS: 320,\r\n  mobileM: 375,\r\n  mobileL: 425,\r\n  tablet: 768,\r\n  laptop: 1024,\r\n  laptopL: 1440,\r\n  desktop4K: 2560\r\n};\r\nconst breakpointsMasterCss = {\r\n  \"3xs\": 360,\r\n  \"2xs\": 480,\r\n  \"xs\": 600,\r\n  \"sm\": 768,\r\n  \"md\": 1024,\r\n  \"lg\": 1280,\r\n  \"xl\": 1440,\r\n  \"2xl\": 1600,\r\n  \"3xl\": 1920,\r\n  \"4xl\": 2560\r\n};\r\nconst breakpointsPrimeFlex = {\r\n  sm: 576,\r\n  md: 768,\r\n  lg: 992,\r\n  xl: 1200\r\n};\r\n\r\nfunction useBreakpoints(breakpoints, options = {}) {\r\n  function getValue(k, delta) {\r\n    let v = toValue(breakpoints[toValue(k)]);\r\n    if (delta != null)\r\n      v = increaseWithUnit(v, delta);\r\n    if (typeof v === \"number\")\r\n      v = `${v}px`;\r\n    return v;\r\n  }\r\n  const { window = defaultWindow, strategy = \"min-width\" } = options;\r\n  function match(query) {\r\n    if (!window)\r\n      return false;\r\n    return window.matchMedia(query).matches;\r\n  }\r\n  const greaterOrEqual = (k) => {\r\n    return useMediaQuery(() => `(min-width: ${getValue(k)})`, options);\r\n  };\r\n  const smallerOrEqual = (k) => {\r\n    return useMediaQuery(() => `(max-width: ${getValue(k)})`, options);\r\n  };\r\n  const shortcutMethods = Object.keys(breakpoints).reduce((shortcuts, k) => {\r\n    Object.defineProperty(shortcuts, k, {\r\n      get: () => strategy === \"min-width\" ? greaterOrEqual(k) : smallerOrEqual(k),\r\n      enumerable: true,\r\n      configurable: true\r\n    });\r\n    return shortcuts;\r\n  }, {});\r\n  function current() {\r\n    const points = Object.keys(breakpoints).map((i) => [i, greaterOrEqual(i)]);\r\n    return computed(() => points.filter(([, v]) => v.value).map(([k]) => k));\r\n  }\r\n  return Object.assign(shortcutMethods, {\r\n    greaterOrEqual,\r\n    smallerOrEqual,\r\n    greater(k) {\r\n      return useMediaQuery(() => `(min-width: ${getValue(k, 0.1)})`, options);\r\n    },\r\n    smaller(k) {\r\n      return useMediaQuery(() => `(max-width: ${getValue(k, -0.1)})`, options);\r\n    },\r\n    between(a, b) {\r\n      return useMediaQuery(() => `(min-width: ${getValue(a)}) and (max-width: ${getValue(b, -0.1)})`, options);\r\n    },\r\n    isGreater(k) {\r\n      return match(`(min-width: ${getValue(k, 0.1)})`);\r\n    },\r\n    isGreaterOrEqual(k) {\r\n      return match(`(min-width: ${getValue(k)})`);\r\n    },\r\n    isSmaller(k) {\r\n      return match(`(max-width: ${getValue(k, -0.1)})`);\r\n    },\r\n    isSmallerOrEqual(k) {\r\n      return match(`(max-width: ${getValue(k)})`);\r\n    },\r\n    isInBetween(a, b) {\r\n      return match(`(min-width: ${getValue(a)}) and (max-width: ${getValue(b, -0.1)})`);\r\n    },\r\n    current,\r\n    active() {\r\n      const bps = current();\r\n      return computed(() => bps.value.length === 0 ? \"\" : bps.value.at(-1));\r\n    }\r\n  });\r\n}\r\n\r\nfunction useBroadcastChannel(options) {\r\n  const {\r\n    name,\r\n    window = defaultWindow\r\n  } = options;\r\n  const isSupported = useSupported(() => window && \"BroadcastChannel\" in window);\r\n  const isClosed = ref(false);\r\n  const channel = ref();\r\n  const data = ref();\r\n  const error = shallowRef(null);\r\n  const post = (data2) => {\r\n    if (channel.value)\r\n      channel.value.postMessage(data2);\r\n  };\r\n  const close = () => {\r\n    if (channel.value)\r\n      channel.value.close();\r\n    isClosed.value = true;\r\n  };\r\n  if (isSupported.value) {\r\n    tryOnMounted(() => {\r\n      error.value = null;\r\n      channel.value = new BroadcastChannel(name);\r\n      channel.value.addEventListener(\"message\", (e) => {\r\n        data.value = e.data;\r\n      }, { passive: true });\r\n      channel.value.addEventListener(\"messageerror\", (e) => {\r\n        error.value = e;\r\n      }, { passive: true });\r\n      channel.value.addEventListener(\"close\", () => {\r\n        isClosed.value = true;\r\n      });\r\n    });\r\n  }\r\n  tryOnScopeDispose(() => {\r\n    close();\r\n  });\r\n  return {\r\n    isSupported,\r\n    channel,\r\n    data,\r\n    post,\r\n    close,\r\n    error,\r\n    isClosed\r\n  };\r\n}\r\n\r\nconst WRITABLE_PROPERTIES = [\r\n  \"hash\",\r\n  \"host\",\r\n  \"hostname\",\r\n  \"href\",\r\n  \"pathname\",\r\n  \"port\",\r\n  \"protocol\",\r\n  \"search\"\r\n];\r\nfunction useBrowserLocation(options = {}) {\r\n  const { window = defaultWindow } = options;\r\n  const refs = Object.fromEntries(\r\n    WRITABLE_PROPERTIES.map((key) => [key, ref()])\r\n  );\r\n  for (const [key, ref2] of objectEntries(refs)) {\r\n    watch(ref2, (value) => {\r\n      if (!(window == null ? void 0 : window.location) || window.location[key] === value)\r\n        return;\r\n      window.location[key] = value;\r\n    });\r\n  }\r\n  const buildState = (trigger) => {\r\n    var _a;\r\n    const { state: state2, length } = (window == null ? void 0 : window.history) || {};\r\n    const { origin } = (window == null ? void 0 : window.location) || {};\r\n    for (const key of WRITABLE_PROPERTIES)\r\n      refs[key].value = (_a = window == null ? void 0 : window.location) == null ? void 0 : _a[key];\r\n    return reactive({\r\n      trigger,\r\n      state: state2,\r\n      length,\r\n      origin,\r\n      ...refs\r\n    });\r\n  };\r\n  const state = ref(buildState(\"load\"));\r\n  if (window) {\r\n    useEventListener(window, \"popstate\", () => state.value = buildState(\"popstate\"), { passive: true });\r\n    useEventListener(window, \"hashchange\", () => state.value = buildState(\"hashchange\"), { passive: true });\r\n  }\r\n  return state;\r\n}\r\n\r\nfunction useCached(refValue, comparator = (a, b) => a === b, watchOptions) {\r\n  const cachedValue = ref(refValue.value);\r\n  watch(() => refValue.value, (value) => {\r\n    if (!comparator(value, cachedValue.value))\r\n      cachedValue.value = value;\r\n  }, watchOptions);\r\n  return cachedValue;\r\n}\r\n\r\nfunction usePermission(permissionDesc, options = {}) {\r\n  const {\r\n    controls = false,\r\n    navigator = defaultNavigator\r\n  } = options;\r\n  const isSupported = useSupported(() => navigator && \"permissions\" in navigator);\r\n  let permissionStatus;\r\n  const desc = typeof permissionDesc === \"string\" ? { name: permissionDesc } : permissionDesc;\r\n  const state = ref();\r\n  const onChange = () => {\r\n    if (permissionStatus)\r\n      state.value = permissionStatus.state;\r\n  };\r\n  const query = createSingletonPromise(async () => {\r\n    if (!isSupported.value)\r\n      return;\r\n    if (!permissionStatus) {\r\n      try {\r\n        permissionStatus = await navigator.permissions.query(desc);\r\n        useEventListener(permissionStatus, \"change\", onChange);\r\n        onChange();\r\n      } catch (e) {\r\n        state.value = \"prompt\";\r\n      }\r\n    }\r\n    return permissionStatus;\r\n  });\r\n  query();\r\n  if (controls) {\r\n    return {\r\n      state,\r\n      isSupported,\r\n      query\r\n    };\r\n  } else {\r\n    return state;\r\n  }\r\n}\r\n\r\nfunction useClipboard(options = {}) {\r\n  const {\r\n    navigator = defaultNavigator,\r\n    read = false,\r\n    source,\r\n    copiedDuring = 1500,\r\n    legacy = false\r\n  } = options;\r\n  const isClipboardApiSupported = useSupported(() => navigator && \"clipboard\" in navigator);\r\n  const permissionRead = usePermission(\"clipboard-read\");\r\n  const permissionWrite = usePermission(\"clipboard-write\");\r\n  const isSupported = computed(() => isClipboardApiSupported.value || legacy);\r\n  const text = ref(\"\");\r\n  const copied = ref(false);\r\n  const timeout = useTimeoutFn(() => copied.value = false, copiedDuring);\r\n  function updateText() {\r\n    if (isClipboardApiSupported.value && isAllowed(permissionRead.value)) {\r\n      navigator.clipboard.readText().then((value) => {\r\n        text.value = value;\r\n      });\r\n    } else {\r\n      text.value = legacyRead();\r\n    }\r\n  }\r\n  if (isSupported.value && read)\r\n    useEventListener([\"copy\", \"cut\"], updateText);\r\n  async function copy(value = toValue(source)) {\r\n    if (isSupported.value && value != null) {\r\n      if (isClipboardApiSupported.value && isAllowed(permissionWrite.value))\r\n        await navigator.clipboard.writeText(value);\r\n      else\r\n        legacyCopy(value);\r\n      text.value = value;\r\n      copied.value = true;\r\n      timeout.start();\r\n    }\r\n  }\r\n  function legacyCopy(value) {\r\n    const ta = document.createElement(\"textarea\");\r\n    ta.value = value != null ? value : \"\";\r\n    ta.style.position = \"absolute\";\r\n    ta.style.opacity = \"0\";\r\n    document.body.appendChild(ta);\r\n    ta.select();\r\n    document.execCommand(\"copy\");\r\n    ta.remove();\r\n  }\r\n  function legacyRead() {\r\n    var _a, _b, _c;\r\n    return (_c = (_b = (_a = document == null ? void 0 : document.getSelection) == null ? void 0 : _a.call(document)) == null ? void 0 : _b.toString()) != null ? _c : \"\";\r\n  }\r\n  function isAllowed(status) {\r\n    return status === \"granted\" || status === \"prompt\";\r\n  }\r\n  return {\r\n    isSupported,\r\n    text,\r\n    copied,\r\n    copy\r\n  };\r\n}\r\n\r\nfunction useClipboardItems(options = {}) {\r\n  const {\r\n    navigator = defaultNavigator,\r\n    read = false,\r\n    source,\r\n    copiedDuring = 1500\r\n  } = options;\r\n  const isSupported = useSupported(() => navigator && \"clipboard\" in navigator);\r\n  const content = ref([]);\r\n  const copied = ref(false);\r\n  const timeout = useTimeoutFn(() => copied.value = false, copiedDuring);\r\n  function updateContent() {\r\n    if (isSupported.value) {\r\n      navigator.clipboard.read().then((items) => {\r\n        content.value = items;\r\n      });\r\n    }\r\n  }\r\n  if (isSupported.value && read)\r\n    useEventListener([\"copy\", \"cut\"], updateContent);\r\n  async function copy(value = toValue(source)) {\r\n    if (isSupported.value && value != null) {\r\n      await navigator.clipboard.write(value);\r\n      content.value = value;\r\n      copied.value = true;\r\n      timeout.start();\r\n    }\r\n  }\r\n  return {\r\n    isSupported,\r\n    content,\r\n    copied,\r\n    copy\r\n  };\r\n}\r\n\r\nfunction cloneFnJSON(source) {\r\n  return JSON.parse(JSON.stringify(source));\r\n}\r\nfunction useCloned(source, options = {}) {\r\n  const cloned = ref({});\r\n  const {\r\n    manual,\r\n    clone = cloneFnJSON,\r\n    // watch options\r\n    deep = true,\r\n    immediate = true\r\n  } = options;\r\n  function sync() {\r\n    cloned.value = clone(toValue(source));\r\n  }\r\n  if (!manual && (isRef(source) || typeof source === \"function\")) {\r\n    watch(source, sync, {\r\n      ...options,\r\n      deep,\r\n      immediate\r\n    });\r\n  } else {\r\n    sync();\r\n  }\r\n  return { cloned, sync };\r\n}\r\n\r\nconst _global = typeof globalThis !== \"undefined\" ? globalThis : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : {};\r\nconst globalKey = \"__vueuse_ssr_handlers__\";\r\nconst handlers = /* @__PURE__ */ getHandlers();\r\nfunction getHandlers() {\r\n  if (!(globalKey in _global))\r\n    _global[globalKey] = _global[globalKey] || {};\r\n  return _global[globalKey];\r\n}\r\nfunction getSSRHandler(key, fallback) {\r\n  return handlers[key] || fallback;\r\n}\r\nfunction setSSRHandler(key, fn) {\r\n  handlers[key] = fn;\r\n}\r\n\r\nfunction guessSerializerType(rawInit) {\r\n  return rawInit == null ? \"any\" : rawInit instanceof Set ? \"set\" : rawInit instanceof Map ? \"map\" : rawInit instanceof Date ? \"date\" : typeof rawInit === \"boolean\" ? \"boolean\" : typeof rawInit === \"string\" ? \"string\" : typeof rawInit === \"object\" ? \"object\" : !Number.isNaN(rawInit) ? \"number\" : \"any\";\r\n}\r\n\r\nconst StorageSerializers = {\r\n  boolean: {\r\n    read: (v) => v === \"true\",\r\n    write: (v) => String(v)\r\n  },\r\n  object: {\r\n    read: (v) => JSON.parse(v),\r\n    write: (v) => JSON.stringify(v)\r\n  },\r\n  number: {\r\n    read: (v) => Number.parseFloat(v),\r\n    write: (v) => String(v)\r\n  },\r\n  any: {\r\n    read: (v) => v,\r\n    write: (v) => String(v)\r\n  },\r\n  string: {\r\n    read: (v) => v,\r\n    write: (v) => String(v)\r\n  },\r\n  map: {\r\n    read: (v) => new Map(JSON.parse(v)),\r\n    write: (v) => JSON.stringify(Array.from(v.entries()))\r\n  },\r\n  set: {\r\n    read: (v) => new Set(JSON.parse(v)),\r\n    write: (v) => JSON.stringify(Array.from(v))\r\n  },\r\n  date: {\r\n    read: (v) => new Date(v),\r\n    write: (v) => v.toISOString()\r\n  }\r\n};\r\nconst customStorageEventName = \"vueuse-storage\";\r\nfunction useStorage(key, defaults, storage, options = {}) {\r\n  var _a;\r\n  const {\r\n    flush = \"pre\",\r\n    deep = true,\r\n    listenToStorageChanges = true,\r\n    writeDefaults = true,\r\n    mergeDefaults = false,\r\n    shallow,\r\n    window = defaultWindow,\r\n    eventFilter,\r\n    onError = (e) => {\r\n      console.error(e);\r\n    },\r\n    initOnMounted\r\n  } = options;\r\n  const data = (shallow ? shallowRef : ref)(typeof defaults === \"function\" ? defaults() : defaults);\r\n  if (!storage) {\r\n    try {\r\n      storage = getSSRHandler(\"getDefaultStorage\", () => {\r\n        var _a2;\r\n        return (_a2 = defaultWindow) == null ? void 0 : _a2.localStorage;\r\n      })();\r\n    } catch (e) {\r\n      onError(e);\r\n    }\r\n  }\r\n  if (!storage)\r\n    return data;\r\n  const rawInit = toValue(defaults);\r\n  const type = guessSerializerType(rawInit);\r\n  const serializer = (_a = options.serializer) != null ? _a : StorageSerializers[type];\r\n  const { pause: pauseWatch, resume: resumeWatch } = pausableWatch(\r\n    data,\r\n    () => write(data.value),\r\n    { flush, deep, eventFilter }\r\n  );\r\n  if (window && listenToStorageChanges) {\r\n    tryOnMounted(() => {\r\n      useEventListener(window, \"storage\", update);\r\n      useEventListener(window, customStorageEventName, updateFromCustomEvent);\r\n      if (initOnMounted)\r\n        update();\r\n    });\r\n  }\r\n  if (!initOnMounted)\r\n    update();\r\n  function dispatchWriteEvent(oldValue, newValue) {\r\n    if (window) {\r\n      window.dispatchEvent(new CustomEvent(customStorageEventName, {\r\n        detail: {\r\n          key,\r\n          oldValue,\r\n          newValue,\r\n          storageArea: storage\r\n        }\r\n      }));\r\n    }\r\n  }\r\n  function write(v) {\r\n    try {\r\n      const oldValue = storage.getItem(key);\r\n      if (v == null) {\r\n        dispatchWriteEvent(oldValue, null);\r\n        storage.removeItem(key);\r\n      } else {\r\n        const serialized = serializer.write(v);\r\n        if (oldValue !== serialized) {\r\n          storage.setItem(key, serialized);\r\n          dispatchWriteEvent(oldValue, serialized);\r\n        }\r\n      }\r\n    } catch (e) {\r\n      onError(e);\r\n    }\r\n  }\r\n  function read(event) {\r\n    const rawValue = event ? event.newValue : storage.getItem(key);\r\n    if (rawValue == null) {\r\n      if (writeDefaults && rawInit != null)\r\n        storage.setItem(key, serializer.write(rawInit));\r\n      return rawInit;\r\n    } else if (!event && mergeDefaults) {\r\n      const value = serializer.read(rawValue);\r\n      if (typeof mergeDefaults === \"function\")\r\n        return mergeDefaults(value, rawInit);\r\n      else if (type === \"object\" && !Array.isArray(value))\r\n        return { ...rawInit, ...value };\r\n      return value;\r\n    } else if (typeof rawValue !== \"string\") {\r\n      return rawValue;\r\n    } else {\r\n      return serializer.read(rawValue);\r\n    }\r\n  }\r\n  function update(event) {\r\n    if (event && event.storageArea !== storage)\r\n      return;\r\n    if (event && event.key == null) {\r\n      data.value = rawInit;\r\n      return;\r\n    }\r\n    if (event && event.key !== key)\r\n      return;\r\n    pauseWatch();\r\n    try {\r\n      if ((event == null ? void 0 : event.newValue) !== serializer.write(data.value))\r\n        data.value = read(event);\r\n    } catch (e) {\r\n      onError(e);\r\n    } finally {\r\n      if (event)\r\n        nextTick(resumeWatch);\r\n      else\r\n        resumeWatch();\r\n    }\r\n  }\r\n  function updateFromCustomEvent(event) {\r\n    update(event.detail);\r\n  }\r\n  return data;\r\n}\r\n\r\nfunction usePreferredDark(options) {\r\n  return useMediaQuery(\"(prefers-color-scheme: dark)\", options);\r\n}\r\n\r\nfunction useColorMode(options = {}) {\r\n  const {\r\n    selector = \"html\",\r\n    attribute = \"class\",\r\n    initialValue = \"auto\",\r\n    window = defaultWindow,\r\n    storage,\r\n    storageKey = \"vueuse-color-scheme\",\r\n    listenToStorageChanges = true,\r\n    storageRef,\r\n    emitAuto,\r\n    disableTransition = true\r\n  } = options;\r\n  const modes = {\r\n    auto: \"\",\r\n    light: \"light\",\r\n    dark: \"dark\",\r\n    ...options.modes || {}\r\n  };\r\n  const preferredDark = usePreferredDark({ window });\r\n  const system = computed(() => preferredDark.value ? \"dark\" : \"light\");\r\n  const store = storageRef || (storageKey == null ? toRef(initialValue) : useStorage(storageKey, initialValue, storage, { window, listenToStorageChanges }));\r\n  const state = computed(() => store.value === \"auto\" ? system.value : store.value);\r\n  const updateHTMLAttrs = getSSRHandler(\r\n    \"updateHTMLAttrs\",\r\n    (selector2, attribute2, value) => {\r\n      const el = typeof selector2 === \"string\" ? window == null ? void 0 : window.document.querySelector(selector2) : unrefElement(selector2);\r\n      if (!el)\r\n        return;\r\n      let style;\r\n      if (disableTransition) {\r\n        style = window.document.createElement(\"style\");\r\n        const styleString = \"*,*::before,*::after{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}\";\r\n        style.appendChild(document.createTextNode(styleString));\r\n        window.document.head.appendChild(style);\r\n      }\r\n      if (attribute2 === \"class\") {\r\n        const current = value.split(/\\s/g);\r\n        Object.values(modes).flatMap((i) => (i || \"\").split(/\\s/g)).filter(Boolean).forEach((v) => {\r\n          if (current.includes(v))\r\n            el.classList.add(v);\r\n          else\r\n            el.classList.remove(v);\r\n        });\r\n      } else {\r\n        el.setAttribute(attribute2, value);\r\n      }\r\n      if (disableTransition) {\r\n        window.getComputedStyle(style).opacity;\r\n        document.head.removeChild(style);\r\n      }\r\n    }\r\n  );\r\n  function defaultOnChanged(mode) {\r\n    var _a;\r\n    updateHTMLAttrs(selector, attribute, (_a = modes[mode]) != null ? _a : mode);\r\n  }\r\n  function onChanged(mode) {\r\n    if (options.onChanged)\r\n      options.onChanged(mode, defaultOnChanged);\r\n    else\r\n      defaultOnChanged(mode);\r\n  }\r\n  watch(state, onChanged, { flush: \"post\", immediate: true });\r\n  tryOnMounted(() => onChanged(state.value));\r\n  const auto = computed({\r\n    get() {\r\n      return emitAuto ? store.value : state.value;\r\n    },\r\n    set(v) {\r\n      store.value = v;\r\n    }\r\n  });\r\n  try {\r\n    return Object.assign(auto, { store, system, state });\r\n  } catch (e) {\r\n    return auto;\r\n  }\r\n}\r\n\r\nfunction useConfirmDialog(revealed = ref(false)) {\r\n  const confirmHook = createEventHook();\r\n  const cancelHook = createEventHook();\r\n  const revealHook = createEventHook();\r\n  let _resolve = noop;\r\n  const reveal = (data) => {\r\n    revealHook.trigger(data);\r\n    revealed.value = true;\r\n    return new Promise((resolve) => {\r\n      _resolve = resolve;\r\n    });\r\n  };\r\n  const confirm = (data) => {\r\n    revealed.value = false;\r\n    confirmHook.trigger(data);\r\n    _resolve({ data, isCanceled: false });\r\n  };\r\n  const cancel = (data) => {\r\n    revealed.value = false;\r\n    cancelHook.trigger(data);\r\n    _resolve({ data, isCanceled: true });\r\n  };\r\n  return {\r\n    isRevealed: computed(() => revealed.value),\r\n    reveal,\r\n    confirm,\r\n    cancel,\r\n    onReveal: revealHook.on,\r\n    onConfirm: confirmHook.on,\r\n    onCancel: cancelHook.on\r\n  };\r\n}\r\n\r\nfunction useMutationObserver(target, callback, options = {}) {\r\n  const { window = defaultWindow, ...mutationOptions } = options;\r\n  let observer;\r\n  const isSupported = useSupported(() => window && \"MutationObserver\" in window);\r\n  const cleanup = () => {\r\n    if (observer) {\r\n      observer.disconnect();\r\n      observer = void 0;\r\n    }\r\n  };\r\n  const targets = computed(() => {\r\n    const value = toValue(target);\r\n    const items = (Array.isArray(value) ? value : [value]).map(unrefElement).filter(notNullish);\r\n    return new Set(items);\r\n  });\r\n  const stopWatch = watch(\r\n    () => targets.value,\r\n    (targets2) => {\r\n      cleanup();\r\n      if (isSupported.value && window && targets2.size) {\r\n        observer = new MutationObserver(callback);\r\n        targets2.forEach((el) => observer.observe(el, mutationOptions));\r\n      }\r\n    },\r\n    { immediate: true, flush: \"post\" }\r\n  );\r\n  const takeRecords = () => {\r\n    return observer == null ? void 0 : observer.takeRecords();\r\n  };\r\n  const stop = () => {\r\n    cleanup();\r\n    stopWatch();\r\n  };\r\n  tryOnScopeDispose(stop);\r\n  return {\r\n    isSupported,\r\n    stop,\r\n    takeRecords\r\n  };\r\n}\r\n\r\nfunction useCssVar(prop, target, options = {}) {\r\n  const { window = defaultWindow, initialValue = \"\", observe = false } = options;\r\n  const variable = ref(initialValue);\r\n  const elRef = computed(() => {\r\n    var _a;\r\n    return unrefElement(target) || ((_a = window == null ? void 0 : window.document) == null ? void 0 : _a.documentElement);\r\n  });\r\n  function updateCssVar() {\r\n    var _a;\r\n    const key = toValue(prop);\r\n    const el = toValue(elRef);\r\n    if (el && window) {\r\n      const value = (_a = window.getComputedStyle(el).getPropertyValue(key)) == null ? void 0 : _a.trim();\r\n      variable.value = value || initialValue;\r\n    }\r\n  }\r\n  if (observe) {\r\n    useMutationObserver(elRef, updateCssVar, {\r\n      attributeFilter: [\"style\", \"class\"],\r\n      window\r\n    });\r\n  }\r\n  watch(\r\n    [elRef, () => toValue(prop)],\r\n    updateCssVar,\r\n    { immediate: true }\r\n  );\r\n  watch(\r\n    variable,\r\n    (val) => {\r\n      var _a;\r\n      if ((_a = elRef.value) == null ? void 0 : _a.style)\r\n        elRef.value.style.setProperty(toValue(prop), val);\r\n    }\r\n  );\r\n  return variable;\r\n}\r\n\r\nfunction useCurrentElement(rootComponent) {\r\n  const vm = getCurrentInstance();\r\n  const currentElement = computedWithControl(\r\n    () => null,\r\n    () => rootComponent ? unrefElement(rootComponent) : vm.proxy.$el\r\n  );\r\n  onUpdated(currentElement.trigger);\r\n  onMounted(currentElement.trigger);\r\n  return currentElement;\r\n}\r\n\r\nfunction useCycleList(list, options) {\r\n  const state = shallowRef(getInitialValue());\r\n  const listRef = toRef(list);\r\n  const index = computed({\r\n    get() {\r\n      var _a;\r\n      const targetList = listRef.value;\r\n      let index2 = (options == null ? void 0 : options.getIndexOf) ? options.getIndexOf(state.value, targetList) : targetList.indexOf(state.value);\r\n      if (index2 < 0)\r\n        index2 = (_a = options == null ? void 0 : options.fallbackIndex) != null ? _a : 0;\r\n      return index2;\r\n    },\r\n    set(v) {\r\n      set(v);\r\n    }\r\n  });\r\n  function set(i) {\r\n    const targetList = listRef.value;\r\n    const length = targetList.length;\r\n    const index2 = (i % length + length) % length;\r\n    const value = targetList[index2];\r\n    state.value = value;\r\n    return value;\r\n  }\r\n  function shift(delta = 1) {\r\n    return set(index.value + delta);\r\n  }\r\n  function next(n = 1) {\r\n    return shift(n);\r\n  }\r\n  function prev(n = 1) {\r\n    return shift(-n);\r\n  }\r\n  function getInitialValue() {\r\n    var _a, _b;\r\n    return (_b = toValue((_a = options == null ? void 0 : options.initialValue) != null ? _a : toValue(list)[0])) != null ? _b : void 0;\r\n  }\r\n  watch(listRef, () => set(index.value));\r\n  return {\r\n    state,\r\n    index,\r\n    next,\r\n    prev,\r\n    go: set\r\n  };\r\n}\r\n\r\nfunction useDark(options = {}) {\r\n  const {\r\n    valueDark = \"dark\",\r\n    valueLight = \"\",\r\n    window = defaultWindow\r\n  } = options;\r\n  const mode = useColorMode({\r\n    ...options,\r\n    onChanged: (mode2, defaultHandler) => {\r\n      var _a;\r\n      if (options.onChanged)\r\n        (_a = options.onChanged) == null ? void 0 : _a.call(options, mode2 === \"dark\", defaultHandler, mode2);\r\n      else\r\n        defaultHandler(mode2);\r\n    },\r\n    modes: {\r\n      dark: valueDark,\r\n      light: valueLight\r\n    }\r\n  });\r\n  const system = computed(() => {\r\n    if (mode.system) {\r\n      return mode.system.value;\r\n    } else {\r\n      const preferredDark = usePreferredDark({ window });\r\n      return preferredDark.value ? \"dark\" : \"light\";\r\n    }\r\n  });\r\n  const isDark = computed({\r\n    get() {\r\n      return mode.value === \"dark\";\r\n    },\r\n    set(v) {\r\n      const modeVal = v ? \"dark\" : \"light\";\r\n      if (system.value === modeVal)\r\n        mode.value = \"auto\";\r\n      else\r\n        mode.value = modeVal;\r\n    }\r\n  });\r\n  return isDark;\r\n}\r\n\r\nfunction fnBypass(v) {\r\n  return v;\r\n}\r\nfunction fnSetSource(source, value) {\r\n  return source.value = value;\r\n}\r\nfunction defaultDump(clone) {\r\n  return clone ? typeof clone === \"function\" ? clone : cloneFnJSON : fnBypass;\r\n}\r\nfunction defaultParse(clone) {\r\n  return clone ? typeof clone === \"function\" ? clone : cloneFnJSON : fnBypass;\r\n}\r\nfunction useManualRefHistory(source, options = {}) {\r\n  const {\r\n    clone = false,\r\n    dump = defaultDump(clone),\r\n    parse = defaultParse(clone),\r\n    setSource = fnSetSource\r\n  } = options;\r\n  function _createHistoryRecord() {\r\n    return markRaw({\r\n      snapshot: dump(source.value),\r\n      timestamp: timestamp()\r\n    });\r\n  }\r\n  const last = ref(_createHistoryRecord());\r\n  const undoStack = ref([]);\r\n  const redoStack = ref([]);\r\n  const _setSource = (record) => {\r\n    setSource(source, parse(record.snapshot));\r\n    last.value = record;\r\n  };\r\n  const commit = () => {\r\n    undoStack.value.unshift(last.value);\r\n    last.value = _createHistoryRecord();\r\n    if (options.capacity && undoStack.value.length > options.capacity)\r\n      undoStack.value.splice(options.capacity, Number.POSITIVE_INFINITY);\r\n    if (redoStack.value.length)\r\n      redoStack.value.splice(0, redoStack.value.length);\r\n  };\r\n  const clear = () => {\r\n    undoStack.value.splice(0, undoStack.value.length);\r\n    redoStack.value.splice(0, redoStack.value.length);\r\n  };\r\n  const undo = () => {\r\n    const state = undoStack.value.shift();\r\n    if (state) {\r\n      redoStack.value.unshift(last.value);\r\n      _setSource(state);\r\n    }\r\n  };\r\n  const redo = () => {\r\n    const state = redoStack.value.shift();\r\n    if (state) {\r\n      undoStack.value.unshift(last.value);\r\n      _setSource(state);\r\n    }\r\n  };\r\n  const reset = () => {\r\n    _setSource(last.value);\r\n  };\r\n  const history = computed(() => [last.value, ...undoStack.value]);\r\n  const canUndo = computed(() => undoStack.value.length > 0);\r\n  const canRedo = computed(() => redoStack.value.length > 0);\r\n  return {\r\n    source,\r\n    undoStack,\r\n    redoStack,\r\n    last,\r\n    history,\r\n    canUndo,\r\n    canRedo,\r\n    clear,\r\n    commit,\r\n    reset,\r\n    undo,\r\n    redo\r\n  };\r\n}\r\n\r\nfunction useRefHistory(source, options = {}) {\r\n  const {\r\n    deep = false,\r\n    flush = \"pre\",\r\n    eventFilter\r\n  } = options;\r\n  const {\r\n    eventFilter: composedFilter,\r\n    pause,\r\n    resume: resumeTracking,\r\n    isActive: isTracking\r\n  } = pausableFilter(eventFilter);\r\n  const {\r\n    ignoreUpdates,\r\n    ignorePrevAsyncUpdates,\r\n    stop\r\n  } = watchIgnorable(\r\n    source,\r\n    commit,\r\n    { deep, flush, eventFilter: composedFilter }\r\n  );\r\n  function setSource(source2, value) {\r\n    ignorePrevAsyncUpdates();\r\n    ignoreUpdates(() => {\r\n      source2.value = value;\r\n    });\r\n  }\r\n  const manualHistory = useManualRefHistory(source, { ...options, clone: options.clone || deep, setSource });\r\n  const { clear, commit: manualCommit } = manualHistory;\r\n  function commit() {\r\n    ignorePrevAsyncUpdates();\r\n    manualCommit();\r\n  }\r\n  function resume(commitNow) {\r\n    resumeTracking();\r\n    if (commitNow)\r\n      commit();\r\n  }\r\n  function batch(fn) {\r\n    let canceled = false;\r\n    const cancel = () => canceled = true;\r\n    ignoreUpdates(() => {\r\n      fn(cancel);\r\n    });\r\n    if (!canceled)\r\n      commit();\r\n  }\r\n  function dispose() {\r\n    stop();\r\n    clear();\r\n  }\r\n  return {\r\n    ...manualHistory,\r\n    isTracking,\r\n    pause,\r\n    resume,\r\n    commit,\r\n    batch,\r\n    dispose\r\n  };\r\n}\r\n\r\nfunction useDebouncedRefHistory(source, options = {}) {\r\n  const filter = options.debounce ? debounceFilter(options.debounce) : void 0;\r\n  const history = useRefHistory(source, { ...options, eventFilter: filter });\r\n  return {\r\n    ...history\r\n  };\r\n}\r\n\r\nfunction useDeviceMotion(options = {}) {\r\n  const {\r\n    window = defaultWindow,\r\n    eventFilter = bypassFilter\r\n  } = options;\r\n  const acceleration = ref({ x: null, y: null, z: null });\r\n  const rotationRate = ref({ alpha: null, beta: null, gamma: null });\r\n  const interval = ref(0);\r\n  const accelerationIncludingGravity = ref({\r\n    x: null,\r\n    y: null,\r\n    z: null\r\n  });\r\n  if (window) {\r\n    const onDeviceMotion = createFilterWrapper(\r\n      eventFilter,\r\n      (event) => {\r\n        acceleration.value = event.acceleration;\r\n        accelerationIncludingGravity.value = event.accelerationIncludingGravity;\r\n        rotationRate.value = event.rotationRate;\r\n        interval.value = event.interval;\r\n      }\r\n    );\r\n    useEventListener(window, \"devicemotion\", onDeviceMotion);\r\n  }\r\n  return {\r\n    acceleration,\r\n    accelerationIncludingGravity,\r\n    rotationRate,\r\n    interval\r\n  };\r\n}\r\n\r\nfunction useDeviceOrientation(options = {}) {\r\n  const { window = defaultWindow } = options;\r\n  const isSupported = useSupported(() => window && \"DeviceOrientationEvent\" in window);\r\n  const isAbsolute = ref(false);\r\n  const alpha = ref(null);\r\n  const beta = ref(null);\r\n  const gamma = ref(null);\r\n  if (window && isSupported.value) {\r\n    useEventListener(window, \"deviceorientation\", (event) => {\r\n      isAbsolute.value = event.absolute;\r\n      alpha.value = event.alpha;\r\n      beta.value = event.beta;\r\n      gamma.value = event.gamma;\r\n    });\r\n  }\r\n  return {\r\n    isSupported,\r\n    isAbsolute,\r\n    alpha,\r\n    beta,\r\n    gamma\r\n  };\r\n}\r\n\r\nfunction useDevicePixelRatio(options = {}) {\r\n  const {\r\n    window = defaultWindow\r\n  } = options;\r\n  const pixelRatio = ref(1);\r\n  if (window) {\r\n    let observe2 = function() {\r\n      pixelRatio.value = window.devicePixelRatio;\r\n      cleanup2();\r\n      media = window.matchMedia(`(resolution: ${pixelRatio.value}dppx)`);\r\n      media.addEventListener(\"change\", observe2, { once: true });\r\n    }, cleanup2 = function() {\r\n      media == null ? void 0 : media.removeEventListener(\"change\", observe2);\r\n    };\r\n    let media;\r\n    observe2();\r\n    tryOnScopeDispose(cleanup2);\r\n  }\r\n  return { pixelRatio };\r\n}\r\n\r\nfunction useDevicesList(options = {}) {\r\n  const {\r\n    navigator = defaultNavigator,\r\n    requestPermissions = false,\r\n    constraints = { audio: true, video: true },\r\n    onUpdated\r\n  } = options;\r\n  const devices = ref([]);\r\n  const videoInputs = computed(() => devices.value.filter((i) => i.kind === \"videoinput\"));\r\n  const audioInputs = computed(() => devices.value.filter((i) => i.kind === \"audioinput\"));\r\n  const audioOutputs = computed(() => devices.value.filter((i) => i.kind === \"audiooutput\"));\r\n  const isSupported = useSupported(() => navigator && navigator.mediaDevices && navigator.mediaDevices.enumerateDevices);\r\n  const permissionGranted = ref(false);\r\n  let stream;\r\n  async function update() {\r\n    if (!isSupported.value)\r\n      return;\r\n    devices.value = await navigator.mediaDevices.enumerateDevices();\r\n    onUpdated == null ? void 0 : onUpdated(devices.value);\r\n    if (stream) {\r\n      stream.getTracks().forEach((t) => t.stop());\r\n      stream = null;\r\n    }\r\n  }\r\n  async function ensurePermissions() {\r\n    if (!isSupported.value)\r\n      return false;\r\n    if (permissionGranted.value)\r\n      return true;\r\n    const { state, query } = usePermission(\"camera\", { controls: true });\r\n    await query();\r\n    if (state.value !== \"granted\") {\r\n      stream = await navigator.mediaDevices.getUserMedia(constraints);\r\n      update();\r\n      permissionGranted.value = true;\r\n    } else {\r\n      permissionGranted.value = true;\r\n    }\r\n    return permissionGranted.value;\r\n  }\r\n  if (isSupported.value) {\r\n    if (requestPermissions)\r\n      ensurePermissions();\r\n    useEventListener(navigator.mediaDevices, \"devicechange\", update);\r\n    update();\r\n  }\r\n  return {\r\n    devices,\r\n    ensurePermissions,\r\n    permissionGranted,\r\n    videoInputs,\r\n    audioInputs,\r\n    audioOutputs,\r\n    isSupported\r\n  };\r\n}\r\n\r\nfunction useDisplayMedia(options = {}) {\r\n  var _a;\r\n  const enabled = ref((_a = options.enabled) != null ? _a : false);\r\n  const video = options.video;\r\n  const audio = options.audio;\r\n  const { navigator = defaultNavigator } = options;\r\n  const isSupported = useSupported(() => {\r\n    var _a2;\r\n    return (_a2 = navigator == null ? void 0 : navigator.mediaDevices) == null ? void 0 : _a2.getDisplayMedia;\r\n  });\r\n  const constraint = { audio, video };\r\n  const stream = shallowRef();\r\n  async function _start() {\r\n    if (!isSupported.value || stream.value)\r\n      return;\r\n    stream.value = await navigator.mediaDevices.getDisplayMedia(constraint);\r\n    return stream.value;\r\n  }\r\n  async function _stop() {\r\n    var _a2;\r\n    (_a2 = stream.value) == null ? void 0 : _a2.getTracks().forEach((t) => t.stop());\r\n    stream.value = void 0;\r\n  }\r\n  function stop() {\r\n    _stop();\r\n    enabled.value = false;\r\n  }\r\n  async function start() {\r\n    await _start();\r\n    if (stream.value)\r\n      enabled.value = true;\r\n    return stream.value;\r\n  }\r\n  watch(\r\n    enabled,\r\n    (v) => {\r\n      if (v)\r\n        _start();\r\n      else\r\n        _stop();\r\n    },\r\n    { immediate: true }\r\n  );\r\n  return {\r\n    isSupported,\r\n    stream,\r\n    start,\r\n    stop,\r\n    enabled\r\n  };\r\n}\r\n\r\nfunction useDocumentVisibility(options = {}) {\r\n  const { document = defaultDocument } = options;\r\n  if (!document)\r\n    return ref(\"visible\");\r\n  const visibility = ref(document.visibilityState);\r\n  useEventListener(document, \"visibilitychange\", () => {\r\n    visibility.value = document.visibilityState;\r\n  });\r\n  return visibility;\r\n}\r\n\r\nfunction useDraggable(target, options = {}) {\r\n  var _a, _b;\r\n  const {\r\n    pointerTypes,\r\n    preventDefault,\r\n    stopPropagation,\r\n    exact,\r\n    onMove,\r\n    onEnd,\r\n    onStart,\r\n    initialValue,\r\n    axis = \"both\",\r\n    draggingElement = defaultWindow,\r\n    containerElement,\r\n    handle: draggingHandle = target\r\n  } = options;\r\n  const position = ref(\r\n    (_a = toValue(initialValue)) != null ? _a : { x: 0, y: 0 }\r\n  );\r\n  const pressedDelta = ref();\r\n  const filterEvent = (e) => {\r\n    if (pointerTypes)\r\n      return pointerTypes.includes(e.pointerType);\r\n    return true;\r\n  };\r\n  const handleEvent = (e) => {\r\n    if (toValue(preventDefault))\r\n      e.preventDefault();\r\n    if (toValue(stopPropagation))\r\n      e.stopPropagation();\r\n  };\r\n  const start = (e) => {\r\n    var _a2;\r\n    if (toValue(options.disabled) || !filterEvent(e))\r\n      return;\r\n    if (toValue(exact) && e.target !== toValue(target))\r\n      return;\r\n    const container = toValue(containerElement);\r\n    const containerRect = (_a2 = container == null ? void 0 : container.getBoundingClientRect) == null ? void 0 : _a2.call(container);\r\n    const targetRect = toValue(target).getBoundingClientRect();\r\n    const pos = {\r\n      x: e.clientX - (container ? targetRect.left - containerRect.left + container.scrollLeft : targetRect.left),\r\n      y: e.clientY - (container ? targetRect.top - containerRect.top + container.scrollTop : targetRect.top)\r\n    };\r\n    if ((onStart == null ? void 0 : onStart(pos, e)) === false)\r\n      return;\r\n    pressedDelta.value = pos;\r\n    handleEvent(e);\r\n  };\r\n  const move = (e) => {\r\n    if (toValue(options.disabled) || !filterEvent(e))\r\n      return;\r\n    if (!pressedDelta.value)\r\n      return;\r\n    const container = toValue(containerElement);\r\n    const targetRect = toValue(target).getBoundingClientRect();\r\n    let { x, y } = position.value;\r\n    if (axis === \"x\" || axis === \"both\") {\r\n      x = e.clientX - pressedDelta.value.x;\r\n      if (container)\r\n        x = Math.min(Math.max(0, x), container.scrollWidth - targetRect.width);\r\n    }\r\n    if (axis === \"y\" || axis === \"both\") {\r\n      y = e.clientY - pressedDelta.value.y;\r\n      if (container)\r\n        y = Math.min(Math.max(0, y), container.scrollHeight - targetRect.height);\r\n    }\r\n    position.value = {\r\n      x,\r\n      y\r\n    };\r\n    onMove == null ? void 0 : onMove(position.value, e);\r\n    handleEvent(e);\r\n  };\r\n  const end = (e) => {\r\n    if (toValue(options.disabled) || !filterEvent(e))\r\n      return;\r\n    if (!pressedDelta.value)\r\n      return;\r\n    pressedDelta.value = void 0;\r\n    onEnd == null ? void 0 : onEnd(position.value, e);\r\n    handleEvent(e);\r\n  };\r\n  if (isClient) {\r\n    const config = { capture: (_b = options.capture) != null ? _b : true };\r\n    useEventListener(draggingHandle, \"pointerdown\", start, config);\r\n    useEventListener(draggingElement, \"pointermove\", move, config);\r\n    useEventListener(draggingElement, \"pointerup\", end, config);\r\n  }\r\n  return {\r\n    ...toRefs(position),\r\n    position,\r\n    isDragging: computed(() => !!pressedDelta.value),\r\n    style: computed(\r\n      () => `left:${position.value.x}px;top:${position.value.y}px;`\r\n    )\r\n  };\r\n}\r\n\r\nfunction useDropZone(target, options = {}) {\r\n  const isOverDropZone = ref(false);\r\n  const files = shallowRef(null);\r\n  let counter = 0;\r\n  let isDataTypeIncluded = true;\r\n  if (isClient) {\r\n    const _options = typeof options === \"function\" ? { onDrop: options } : options;\r\n    const getFiles = (event) => {\r\n      var _a, _b;\r\n      const list = Array.from((_b = (_a = event.dataTransfer) == null ? void 0 : _a.files) != null ? _b : []);\r\n      return files.value = list.length === 0 ? null : list;\r\n    };\r\n    useEventListener(target, \"dragenter\", (event) => {\r\n      var _a, _b;\r\n      const types = Array.from(((_a = event == null ? void 0 : event.dataTransfer) == null ? void 0 : _a.items) || []).map((i) => i.kind === \"file\" ? i.type : null).filter(notNullish);\r\n      if (_options.dataTypes && event.dataTransfer) {\r\n        const dataTypes = unref(_options.dataTypes);\r\n        isDataTypeIncluded = typeof dataTypes === \"function\" ? dataTypes(types) : dataTypes ? dataTypes.some((item) => types.includes(item)) : true;\r\n        if (!isDataTypeIncluded)\r\n          return;\r\n      }\r\n      event.preventDefault();\r\n      counter += 1;\r\n      isOverDropZone.value = true;\r\n      (_b = _options.onEnter) == null ? void 0 : _b.call(_options, getFiles(event), event);\r\n    });\r\n    useEventListener(target, \"dragover\", (event) => {\r\n      var _a;\r\n      if (!isDataTypeIncluded)\r\n        return;\r\n      event.preventDefault();\r\n      (_a = _options.onOver) == null ? void 0 : _a.call(_options, getFiles(event), event);\r\n    });\r\n    useEventListener(target, \"dragleave\", (event) => {\r\n      var _a;\r\n      if (!isDataTypeIncluded)\r\n        return;\r\n      event.preventDefault();\r\n      counter -= 1;\r\n      if (counter === 0)\r\n        isOverDropZone.value = false;\r\n      (_a = _options.onLeave) == null ? void 0 : _a.call(_options, getFiles(event), event);\r\n    });\r\n    useEventListener(target, \"drop\", (event) => {\r\n      var _a;\r\n      event.preventDefault();\r\n      counter = 0;\r\n      isOverDropZone.value = false;\r\n      (_a = _options.onDrop) == null ? void 0 : _a.call(_options, getFiles(event), event);\r\n    });\r\n  }\r\n  return {\r\n    files,\r\n    isOverDropZone\r\n  };\r\n}\r\n\r\nfunction useResizeObserver(target, callback, options = {}) {\r\n  const { window = defaultWindow, ...observerOptions } = options;\r\n  let observer;\r\n  const isSupported = useSupported(() => window && \"ResizeObserver\" in window);\r\n  const cleanup = () => {\r\n    if (observer) {\r\n      observer.disconnect();\r\n      observer = void 0;\r\n    }\r\n  };\r\n  const targets = computed(() => Array.isArray(target) ? target.map((el) => unrefElement(el)) : [unrefElement(target)]);\r\n  const stopWatch = watch(\r\n    targets,\r\n    (els) => {\r\n      cleanup();\r\n      if (isSupported.value && window) {\r\n        observer = new ResizeObserver(callback);\r\n        for (const _el of els)\r\n          _el && observer.observe(_el, observerOptions);\r\n      }\r\n    },\r\n    { immediate: true, flush: \"post\" }\r\n  );\r\n  const stop = () => {\r\n    cleanup();\r\n    stopWatch();\r\n  };\r\n  tryOnScopeDispose(stop);\r\n  return {\r\n    isSupported,\r\n    stop\r\n  };\r\n}\r\n\r\nfunction useElementBounding(target, options = {}) {\r\n  const {\r\n    reset = true,\r\n    windowResize = true,\r\n    windowScroll = true,\r\n    immediate = true\r\n  } = options;\r\n  const height = ref(0);\r\n  const bottom = ref(0);\r\n  const left = ref(0);\r\n  const right = ref(0);\r\n  const top = ref(0);\r\n  const width = ref(0);\r\n  const x = ref(0);\r\n  const y = ref(0);\r\n  function update() {\r\n    const el = unrefElement(target);\r\n    if (!el) {\r\n      if (reset) {\r\n        height.value = 0;\r\n        bottom.value = 0;\r\n        left.value = 0;\r\n        right.value = 0;\r\n        top.value = 0;\r\n        width.value = 0;\r\n        x.value = 0;\r\n        y.value = 0;\r\n      }\r\n      return;\r\n    }\r\n    const rect = el.getBoundingClientRect();\r\n    height.value = rect.height;\r\n    bottom.value = rect.bottom;\r\n    left.value = rect.left;\r\n    right.value = rect.right;\r\n    top.value = rect.top;\r\n    width.value = rect.width;\r\n    x.value = rect.x;\r\n    y.value = rect.y;\r\n  }\r\n  useResizeObserver(target, update);\r\n  watch(() => unrefElement(target), (ele) => !ele && update());\r\n  useMutationObserver(target, update, {\r\n    attributeFilter: [\"style\", \"class\"]\r\n  });\r\n  if (windowScroll)\r\n    useEventListener(\"scroll\", update, { capture: true, passive: true });\r\n  if (windowResize)\r\n    useEventListener(\"resize\", update, { passive: true });\r\n  tryOnMounted(() => {\r\n    if (immediate)\r\n      update();\r\n  });\r\n  return {\r\n    height,\r\n    bottom,\r\n    left,\r\n    right,\r\n    top,\r\n    width,\r\n    x,\r\n    y,\r\n    update\r\n  };\r\n}\r\n\r\nfunction useElementByPoint(options) {\r\n  const {\r\n    x,\r\n    y,\r\n    document = defaultDocument,\r\n    multiple,\r\n    interval = \"requestAnimationFrame\",\r\n    immediate = true\r\n  } = options;\r\n  const isSupported = useSupported(() => {\r\n    if (toValue(multiple))\r\n      return document && \"elementsFromPoint\" in document;\r\n    return document && \"elementFromPoint\" in document;\r\n  });\r\n  const element = ref(null);\r\n  const cb = () => {\r\n    var _a, _b;\r\n    element.value = toValue(multiple) ? (_a = document == null ? void 0 : document.elementsFromPoint(toValue(x), toValue(y))) != null ? _a : [] : (_b = document == null ? void 0 : document.elementFromPoint(toValue(x), toValue(y))) != null ? _b : null;\r\n  };\r\n  const controls = interval === \"requestAnimationFrame\" ? useRafFn(cb, { immediate }) : useIntervalFn(cb, interval, { immediate });\r\n  return {\r\n    isSupported,\r\n    element,\r\n    ...controls\r\n  };\r\n}\r\n\r\nfunction useElementHover(el, options = {}) {\r\n  const {\r\n    delayEnter = 0,\r\n    delayLeave = 0,\r\n    window = defaultWindow\r\n  } = options;\r\n  const isHovered = ref(false);\r\n  let timer;\r\n  const toggle = (entering) => {\r\n    const delay = entering ? delayEnter : delayLeave;\r\n    if (timer) {\r\n      clearTimeout(timer);\r\n      timer = void 0;\r\n    }\r\n    if (delay)\r\n      timer = setTimeout(() => isHovered.value = entering, delay);\r\n    else\r\n      isHovered.value = entering;\r\n  };\r\n  if (!window)\r\n    return isHovered;\r\n  useEventListener(el, \"mouseenter\", () => toggle(true), { passive: true });\r\n  useEventListener(el, \"mouseleave\", () => toggle(false), { passive: true });\r\n  return isHovered;\r\n}\r\n\r\nfunction useElementSize(target, initialSize = { width: 0, height: 0 }, options = {}) {\r\n  const { window = defaultWindow, box = \"content-box\" } = options;\r\n  const isSVG = computed(() => {\r\n    var _a, _b;\r\n    return (_b = (_a = unrefElement(target)) == null ? void 0 : _a.namespaceURI) == null ? void 0 : _b.includes(\"svg\");\r\n  });\r\n  const width = ref(initialSize.width);\r\n  const height = ref(initialSize.height);\r\n  const { stop: stop1 } = useResizeObserver(\r\n    target,\r\n    ([entry]) => {\r\n      const boxSize = box === \"border-box\" ? entry.borderBoxSize : box === \"content-box\" ? entry.contentBoxSize : entry.devicePixelContentBoxSize;\r\n      if (window && isSVG.value) {\r\n        const $elem = unrefElement(target);\r\n        if ($elem) {\r\n          const styles = window.getComputedStyle($elem);\r\n          width.value = Number.parseFloat(styles.width);\r\n          height.value = Number.parseFloat(styles.height);\r\n        }\r\n      } else {\r\n        if (boxSize) {\r\n          const formatBoxSize = Array.isArray(boxSize) ? boxSize : [boxSize];\r\n          width.value = formatBoxSize.reduce((acc, { inlineSize }) => acc + inlineSize, 0);\r\n          height.value = formatBoxSize.reduce((acc, { blockSize }) => acc + blockSize, 0);\r\n        } else {\r\n          width.value = entry.contentRect.width;\r\n          height.value = entry.contentRect.height;\r\n        }\r\n      }\r\n    },\r\n    options\r\n  );\r\n  tryOnMounted(() => {\r\n    const ele = unrefElement(target);\r\n    if (ele) {\r\n      width.value = \"offsetWidth\" in ele ? ele.offsetWidth : initialSize.width;\r\n      height.value = \"offsetHeight\" in ele ? ele.offsetHeight : initialSize.height;\r\n    }\r\n  });\r\n  const stop2 = watch(\r\n    () => unrefElement(target),\r\n    (ele) => {\r\n      width.value = ele ? initialSize.width : 0;\r\n      height.value = ele ? initialSize.height : 0;\r\n    }\r\n  );\r\n  function stop() {\r\n    stop1();\r\n    stop2();\r\n  }\r\n  return {\r\n    width,\r\n    height,\r\n    stop\r\n  };\r\n}\r\n\r\nfunction useIntersectionObserver(target, callback, options = {}) {\r\n  const {\r\n    root,\r\n    rootMargin = \"0px\",\r\n    threshold = 0.1,\r\n    window = defaultWindow,\r\n    immediate = true\r\n  } = options;\r\n  const isSupported = useSupported(() => window && \"IntersectionObserver\" in window);\r\n  const targets = computed(() => {\r\n    const _target = toValue(target);\r\n    return (Array.isArray(_target) ? _target : [_target]).map(unrefElement).filter(notNullish);\r\n  });\r\n  let cleanup = noop;\r\n  const isActive = ref(immediate);\r\n  const stopWatch = isSupported.value ? watch(\r\n    () => [targets.value, unrefElement(root), isActive.value],\r\n    ([targets2, root2]) => {\r\n      cleanup();\r\n      if (!isActive.value)\r\n        return;\r\n      if (!targets2.length)\r\n        return;\r\n      const observer = new IntersectionObserver(\r\n        callback,\r\n        {\r\n          root: unrefElement(root2),\r\n          rootMargin,\r\n          threshold\r\n        }\r\n      );\r\n      targets2.forEach((el) => el && observer.observe(el));\r\n      cleanup = () => {\r\n        observer.disconnect();\r\n        cleanup = noop;\r\n      };\r\n    },\r\n    { immediate, flush: \"post\" }\r\n  ) : noop;\r\n  const stop = () => {\r\n    cleanup();\r\n    stopWatch();\r\n    isActive.value = false;\r\n  };\r\n  tryOnScopeDispose(stop);\r\n  return {\r\n    isSupported,\r\n    isActive,\r\n    pause() {\r\n      cleanup();\r\n      isActive.value = false;\r\n    },\r\n    resume() {\r\n      isActive.value = true;\r\n    },\r\n    stop\r\n  };\r\n}\r\n\r\nfunction useElementVisibility(element, options = {}) {\r\n  const { window = defaultWindow, scrollTarget, threshold = 0 } = options;\r\n  const elementIsVisible = ref(false);\r\n  useIntersectionObserver(\r\n    element,\r\n    (intersectionObserverEntries) => {\r\n      let isIntersecting = elementIsVisible.value;\r\n      let latestTime = 0;\r\n      for (const entry of intersectionObserverEntries) {\r\n        if (entry.time >= latestTime) {\r\n          latestTime = entry.time;\r\n          isIntersecting = entry.isIntersecting;\r\n        }\r\n      }\r\n      elementIsVisible.value = isIntersecting;\r\n    },\r\n    {\r\n      root: scrollTarget,\r\n      window,\r\n      threshold\r\n    }\r\n  );\r\n  return elementIsVisible;\r\n}\r\n\r\nconst events = /* @__PURE__ */ new Map();\r\n\r\nfunction useEventBus(key) {\r\n  const scope = getCurrentScope();\r\n  function on(listener) {\r\n    var _a;\r\n    const listeners = events.get(key) || /* @__PURE__ */ new Set();\r\n    listeners.add(listener);\r\n    events.set(key, listeners);\r\n    const _off = () => off(listener);\r\n    (_a = scope == null ? void 0 : scope.cleanups) == null ? void 0 : _a.push(_off);\r\n    return _off;\r\n  }\r\n  function once(listener) {\r\n    function _listener(...args) {\r\n      off(_listener);\r\n      listener(...args);\r\n    }\r\n    return on(_listener);\r\n  }\r\n  function off(listener) {\r\n    const listeners = events.get(key);\r\n    if (!listeners)\r\n      return;\r\n    listeners.delete(listener);\r\n    if (!listeners.size)\r\n      reset();\r\n  }\r\n  function reset() {\r\n    events.delete(key);\r\n  }\r\n  function emit(event, payload) {\r\n    var _a;\r\n    (_a = events.get(key)) == null ? void 0 : _a.forEach((v) => v(event, payload));\r\n  }\r\n  return { on, once, off, emit, reset };\r\n}\r\n\r\nfunction resolveNestedOptions$1(options) {\r\n  if (options === true)\r\n    return {};\r\n  return options;\r\n}\r\nfunction useEventSource(url, events = [], options = {}) {\r\n  const event = ref(null);\r\n  const data = ref(null);\r\n  const status = ref(\"CONNECTING\");\r\n  const eventSource = ref(null);\r\n  const error = shallowRef(null);\r\n  const urlRef = toRef(url);\r\n  let explicitlyClosed = false;\r\n  let retried = 0;\r\n  const {\r\n    withCredentials = false,\r\n    immediate = true\r\n  } = options;\r\n  const close = () => {\r\n    if (isClient && eventSource.value) {\r\n      eventSource.value.close();\r\n      eventSource.value = null;\r\n      status.value = \"CLOSED\";\r\n      explicitlyClosed = true;\r\n    }\r\n  };\r\n  const _init = () => {\r\n    if (explicitlyClosed || typeof urlRef.value === \"undefined\")\r\n      return;\r\n    const es = new EventSource(urlRef.value, { withCredentials });\r\n    status.value = \"CONNECTING\";\r\n    eventSource.value = es;\r\n    es.onopen = () => {\r\n      status.value = \"OPEN\";\r\n      error.value = null;\r\n    };\r\n    es.onerror = (e) => {\r\n      status.value = \"CLOSED\";\r\n      error.value = e;\r\n      if (es.readyState === 2 && !explicitlyClosed && options.autoReconnect) {\r\n        es.close();\r\n        const {\r\n          retries = -1,\r\n          delay = 1e3,\r\n          onFailed\r\n        } = resolveNestedOptions$1(options.autoReconnect);\r\n        retried += 1;\r\n        if (typeof retries === \"number\" && (retries < 0 || retried < retries))\r\n          setTimeout(_init, delay);\r\n        else if (typeof retries === \"function\" && retries())\r\n          setTimeout(_init, delay);\r\n        else\r\n          onFailed == null ? void 0 : onFailed();\r\n      }\r\n    };\r\n    es.onmessage = (e) => {\r\n      event.value = null;\r\n      data.value = e.data;\r\n    };\r\n    for (const event_name of events) {\r\n      useEventListener(es, event_name, (e) => {\r\n        event.value = event_name;\r\n        data.value = e.data || null;\r\n      });\r\n    }\r\n  };\r\n  const open = () => {\r\n    if (!isClient)\r\n      return;\r\n    close();\r\n    explicitlyClosed = false;\r\n    retried = 0;\r\n    _init();\r\n  };\r\n  if (immediate)\r\n    watch(urlRef, open, { immediate: true });\r\n  tryOnScopeDispose(close);\r\n  return {\r\n    eventSource,\r\n    event,\r\n    data,\r\n    status,\r\n    error,\r\n    open,\r\n    close\r\n  };\r\n}\r\n\r\nfunction useEyeDropper(options = {}) {\r\n  const { initialValue = \"\" } = options;\r\n  const isSupported = useSupported(() => typeof window !== \"undefined\" && \"EyeDropper\" in window);\r\n  const sRGBHex = ref(initialValue);\r\n  async function open(openOptions) {\r\n    if (!isSupported.value)\r\n      return;\r\n    const eyeDropper = new window.EyeDropper();\r\n    const result = await eyeDropper.open(openOptions);\r\n    sRGBHex.value = result.sRGBHex;\r\n    return result;\r\n  }\r\n  return { isSupported, sRGBHex, open };\r\n}\r\n\r\nfunction useFavicon(newIcon = null, options = {}) {\r\n  const {\r\n    baseUrl = \"\",\r\n    rel = \"icon\",\r\n    document = defaultDocument\r\n  } = options;\r\n  const favicon = toRef(newIcon);\r\n  const applyIcon = (icon) => {\r\n    const elements = document == null ? void 0 : document.head.querySelectorAll(`link[rel*=\"${rel}\"]`);\r\n    if (!elements || elements.length === 0) {\r\n      const link = document == null ? void 0 : document.createElement(\"link\");\r\n      if (link) {\r\n        link.rel = rel;\r\n        link.href = `${baseUrl}${icon}`;\r\n        link.type = `image/${icon.split(\".\").pop()}`;\r\n        document == null ? void 0 : document.head.append(link);\r\n      }\r\n      return;\r\n    }\r\n    elements == null ? void 0 : elements.forEach((el) => el.href = `${baseUrl}${icon}`);\r\n  };\r\n  watch(\r\n    favicon,\r\n    (i, o) => {\r\n      if (typeof i === \"string\" && i !== o)\r\n        applyIcon(i);\r\n    },\r\n    { immediate: true }\r\n  );\r\n  return favicon;\r\n}\r\n\r\nconst payloadMapping = {\r\n  json: \"application/json\",\r\n  text: \"text/plain\"\r\n};\r\nfunction isFetchOptions(obj) {\r\n  return obj && containsProp(obj, \"immediate\", \"refetch\", \"initialData\", \"timeout\", \"beforeFetch\", \"afterFetch\", \"onFetchError\", \"fetch\", \"updateDataOnError\");\r\n}\r\nfunction isAbsoluteURL(url) {\r\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\r\n}\r\nfunction headersToObject(headers) {\r\n  if (typeof Headers !== \"undefined\" && headers instanceof Headers)\r\n    return Object.fromEntries(headers.entries());\r\n  return headers;\r\n}\r\nfunction combineCallbacks(combination, ...callbacks) {\r\n  if (combination === \"overwrite\") {\r\n    return async (ctx) => {\r\n      const callback = callbacks[callbacks.length - 1];\r\n      if (callback)\r\n        return { ...ctx, ...await callback(ctx) };\r\n      return ctx;\r\n    };\r\n  } else {\r\n    return async (ctx) => {\r\n      for (const callback of callbacks) {\r\n        if (callback)\r\n          ctx = { ...ctx, ...await callback(ctx) };\r\n      }\r\n      return ctx;\r\n    };\r\n  }\r\n}\r\nfunction createFetch(config = {}) {\r\n  const _combination = config.combination || \"chain\";\r\n  const _options = config.options || {};\r\n  const _fetchOptions = config.fetchOptions || {};\r\n  function useFactoryFetch(url, ...args) {\r\n    const computedUrl = computed(() => {\r\n      const baseUrl = toValue(config.baseUrl);\r\n      const targetUrl = toValue(url);\r\n      return baseUrl && !isAbsoluteURL(targetUrl) ? joinPaths(baseUrl, targetUrl) : targetUrl;\r\n    });\r\n    let options = _options;\r\n    let fetchOptions = _fetchOptions;\r\n    if (args.length > 0) {\r\n      if (isFetchOptions(args[0])) {\r\n        options = {\r\n          ...options,\r\n          ...args[0],\r\n          beforeFetch: combineCallbacks(_combination, _options.beforeFetch, args[0].beforeFetch),\r\n          afterFetch: combineCallbacks(_combination, _options.afterFetch, args[0].afterFetch),\r\n          onFetchError: combineCallbacks(_combination, _options.onFetchError, args[0].onFetchError)\r\n        };\r\n      } else {\r\n        fetchOptions = {\r\n          ...fetchOptions,\r\n          ...args[0],\r\n          headers: {\r\n            ...headersToObject(fetchOptions.headers) || {},\r\n            ...headersToObject(args[0].headers) || {}\r\n          }\r\n        };\r\n      }\r\n    }\r\n    if (args.length > 1 && isFetchOptions(args[1])) {\r\n      options = {\r\n        ...options,\r\n        ...args[1],\r\n        beforeFetch: combineCallbacks(_combination, _options.beforeFetch, args[1].beforeFetch),\r\n        afterFetch: combineCallbacks(_combination, _options.afterFetch, args[1].afterFetch),\r\n        onFetchError: combineCallbacks(_combination, _options.onFetchError, args[1].onFetchError)\r\n      };\r\n    }\r\n    return useFetch(computedUrl, fetchOptions, options);\r\n  }\r\n  return useFactoryFetch;\r\n}\r\nfunction useFetch(url, ...args) {\r\n  var _a;\r\n  const supportsAbort = typeof AbortController === \"function\";\r\n  let fetchOptions = {};\r\n  let options = {\r\n    immediate: true,\r\n    refetch: false,\r\n    timeout: 0,\r\n    updateDataOnError: false\r\n  };\r\n  const config = {\r\n    method: \"GET\",\r\n    type: \"text\",\r\n    payload: void 0\r\n  };\r\n  if (args.length > 0) {\r\n    if (isFetchOptions(args[0]))\r\n      options = { ...options, ...args[0] };\r\n    else\r\n      fetchOptions = args[0];\r\n  }\r\n  if (args.length > 1) {\r\n    if (isFetchOptions(args[1]))\r\n      options = { ...options, ...args[1] };\r\n  }\r\n  const {\r\n    fetch = (_a = defaultWindow) == null ? void 0 : _a.fetch,\r\n    initialData,\r\n    timeout\r\n  } = options;\r\n  const responseEvent = createEventHook();\r\n  const errorEvent = createEventHook();\r\n  const finallyEvent = createEventHook();\r\n  const isFinished = ref(false);\r\n  const isFetching = ref(false);\r\n  const aborted = ref(false);\r\n  const statusCode = ref(null);\r\n  const response = shallowRef(null);\r\n  const error = shallowRef(null);\r\n  const data = shallowRef(initialData || null);\r\n  const canAbort = computed(() => supportsAbort && isFetching.value);\r\n  let controller;\r\n  let timer;\r\n  const abort = () => {\r\n    if (supportsAbort) {\r\n      controller == null ? void 0 : controller.abort();\r\n      controller = new AbortController();\r\n      controller.signal.onabort = () => aborted.value = true;\r\n      fetchOptions = {\r\n        ...fetchOptions,\r\n        signal: controller.signal\r\n      };\r\n    }\r\n  };\r\n  const loading = (isLoading) => {\r\n    isFetching.value = isLoading;\r\n    isFinished.value = !isLoading;\r\n  };\r\n  if (timeout)\r\n    timer = useTimeoutFn(abort, timeout, { immediate: false });\r\n  let executeCounter = 0;\r\n  const execute = async (throwOnFailed = false) => {\r\n    var _a2, _b;\r\n    abort();\r\n    loading(true);\r\n    error.value = null;\r\n    statusCode.value = null;\r\n    aborted.value = false;\r\n    executeCounter += 1;\r\n    const currentExecuteCounter = executeCounter;\r\n    const defaultFetchOptions = {\r\n      method: config.method,\r\n      headers: {}\r\n    };\r\n    if (config.payload) {\r\n      const headers = headersToObject(defaultFetchOptions.headers);\r\n      const payload = toValue(config.payload);\r\n      if (!config.payloadType && payload && Object.getPrototypeOf(payload) === Object.prototype && !(payload instanceof FormData))\r\n        config.payloadType = \"json\";\r\n      if (config.payloadType)\r\n        headers[\"Content-Type\"] = (_a2 = payloadMapping[config.payloadType]) != null ? _a2 : config.payloadType;\r\n      defaultFetchOptions.body = config.payloadType === \"json\" ? JSON.stringify(payload) : payload;\r\n    }\r\n    let isCanceled = false;\r\n    const context = {\r\n      url: toValue(url),\r\n      options: {\r\n        ...defaultFetchOptions,\r\n        ...fetchOptions\r\n      },\r\n      cancel: () => {\r\n        isCanceled = true;\r\n      }\r\n    };\r\n    if (options.beforeFetch)\r\n      Object.assign(context, await options.beforeFetch(context));\r\n    if (isCanceled || !fetch) {\r\n      loading(false);\r\n      return Promise.resolve(null);\r\n    }\r\n    let responseData = null;\r\n    if (timer)\r\n      timer.start();\r\n    return fetch(\r\n      context.url,\r\n      {\r\n        ...defaultFetchOptions,\r\n        ...context.options,\r\n        headers: {\r\n          ...headersToObject(defaultFetchOptions.headers),\r\n          ...headersToObject((_b = context.options) == null ? void 0 : _b.headers)\r\n        }\r\n      }\r\n    ).then(async (fetchResponse) => {\r\n      response.value = fetchResponse;\r\n      statusCode.value = fetchResponse.status;\r\n      responseData = await fetchResponse.clone()[config.type]();\r\n      if (!fetchResponse.ok) {\r\n        data.value = initialData || null;\r\n        throw new Error(fetchResponse.statusText);\r\n      }\r\n      if (options.afterFetch) {\r\n        ({ data: responseData } = await options.afterFetch({\r\n          data: responseData,\r\n          response: fetchResponse\r\n        }));\r\n      }\r\n      data.value = responseData;\r\n      responseEvent.trigger(fetchResponse);\r\n      return fetchResponse;\r\n    }).catch(async (fetchError) => {\r\n      let errorData = fetchError.message || fetchError.name;\r\n      if (options.onFetchError) {\r\n        ({ error: errorData, data: responseData } = await options.onFetchError({\r\n          data: responseData,\r\n          error: fetchError,\r\n          response: response.value\r\n        }));\r\n      }\r\n      error.value = errorData;\r\n      if (options.updateDataOnError)\r\n        data.value = responseData;\r\n      errorEvent.trigger(fetchError);\r\n      if (throwOnFailed)\r\n        throw fetchError;\r\n      return null;\r\n    }).finally(() => {\r\n      if (currentExecuteCounter === executeCounter)\r\n        loading(false);\r\n      if (timer)\r\n        timer.stop();\r\n      finallyEvent.trigger(null);\r\n    });\r\n  };\r\n  const refetch = toRef(options.refetch);\r\n  watch(\r\n    [\r\n      refetch,\r\n      toRef(url)\r\n    ],\r\n    ([refetch2]) => refetch2 && execute(),\r\n    { deep: true }\r\n  );\r\n  const shell = {\r\n    isFinished: readonly(isFinished),\r\n    isFetching: readonly(isFetching),\r\n    statusCode,\r\n    response,\r\n    error,\r\n    data,\r\n    canAbort,\r\n    aborted,\r\n    abort,\r\n    execute,\r\n    onFetchResponse: responseEvent.on,\r\n    onFetchError: errorEvent.on,\r\n    onFetchFinally: finallyEvent.on,\r\n    // method\r\n    get: setMethod(\"GET\"),\r\n    put: setMethod(\"PUT\"),\r\n    post: setMethod(\"POST\"),\r\n    delete: setMethod(\"DELETE\"),\r\n    patch: setMethod(\"PATCH\"),\r\n    head: setMethod(\"HEAD\"),\r\n    options: setMethod(\"OPTIONS\"),\r\n    // type\r\n    json: setType(\"json\"),\r\n    text: setType(\"text\"),\r\n    blob: setType(\"blob\"),\r\n    arrayBuffer: setType(\"arrayBuffer\"),\r\n    formData: setType(\"formData\")\r\n  };\r\n  function setMethod(method) {\r\n    return (payload, payloadType) => {\r\n      if (!isFetching.value) {\r\n        config.method = method;\r\n        config.payload = payload;\r\n        config.payloadType = payloadType;\r\n        if (isRef(config.payload)) {\r\n          watch(\r\n            [\r\n              refetch,\r\n              toRef(config.payload)\r\n            ],\r\n            ([refetch2]) => refetch2 && execute(),\r\n            { deep: true }\r\n          );\r\n        }\r\n        return {\r\n          ...shell,\r\n          then(onFulfilled, onRejected) {\r\n            return waitUntilFinished().then(onFulfilled, onRejected);\r\n          }\r\n        };\r\n      }\r\n      return void 0;\r\n    };\r\n  }\r\n  function waitUntilFinished() {\r\n    return new Promise((resolve, reject) => {\r\n      until(isFinished).toBe(true).then(() => resolve(shell)).catch((error2) => reject(error2));\r\n    });\r\n  }\r\n  function setType(type) {\r\n    return () => {\r\n      if (!isFetching.value) {\r\n        config.type = type;\r\n        return {\r\n          ...shell,\r\n          then(onFulfilled, onRejected) {\r\n            return waitUntilFinished().then(onFulfilled, onRejected);\r\n          }\r\n        };\r\n      }\r\n      return void 0;\r\n    };\r\n  }\r\n  if (options.immediate)\r\n    Promise.resolve().then(() => execute());\r\n  return {\r\n    ...shell,\r\n    then(onFulfilled, onRejected) {\r\n      return waitUntilFinished().then(onFulfilled, onRejected);\r\n    }\r\n  };\r\n}\r\nfunction joinPaths(start, end) {\r\n  if (!start.endsWith(\"/\") && !end.startsWith(\"/\"))\r\n    return `${start}/${end}`;\r\n  return `${start}${end}`;\r\n}\r\n\r\nconst DEFAULT_OPTIONS = {\r\n  multiple: true,\r\n  accept: \"*\",\r\n  reset: false,\r\n  directory: false\r\n};\r\nfunction useFileDialog(options = {}) {\r\n  const {\r\n    document = defaultDocument\r\n  } = options;\r\n  const files = ref(null);\r\n  const { on: onChange, trigger } = createEventHook();\r\n  let input;\r\n  if (document) {\r\n    input = document.createElement(\"input\");\r\n    input.type = \"file\";\r\n    input.onchange = (event) => {\r\n      const result = event.target;\r\n      files.value = result.files;\r\n      trigger(files.value);\r\n    };\r\n  }\r\n  const reset = () => {\r\n    files.value = null;\r\n    if (input) {\r\n      input.value = \"\";\r\n      trigger(null);\r\n    }\r\n  };\r\n  const open = (localOptions) => {\r\n    if (!input)\r\n      return;\r\n    const _options = {\r\n      ...DEFAULT_OPTIONS,\r\n      ...options,\r\n      ...localOptions\r\n    };\r\n    input.multiple = _options.multiple;\r\n    input.accept = _options.accept;\r\n    input.webkitdirectory = _options.directory;\r\n    if (hasOwn(_options, \"capture\"))\r\n      input.capture = _options.capture;\r\n    if (_options.reset)\r\n      reset();\r\n    input.click();\r\n  };\r\n  return {\r\n    files: readonly(files),\r\n    open,\r\n    reset,\r\n    onChange\r\n  };\r\n}\r\n\r\nfunction useFileSystemAccess(options = {}) {\r\n  const {\r\n    window: _window = defaultWindow,\r\n    dataType = \"Text\"\r\n  } = options;\r\n  const window = _window;\r\n  const isSupported = useSupported(() => window && \"showSaveFilePicker\" in window && \"showOpenFilePicker\" in window);\r\n  const fileHandle = ref();\r\n  const data = ref();\r\n  const file = ref();\r\n  const fileName = computed(() => {\r\n    var _a, _b;\r\n    return (_b = (_a = file.value) == null ? void 0 : _a.name) != null ? _b : \"\";\r\n  });\r\n  const fileMIME = computed(() => {\r\n    var _a, _b;\r\n    return (_b = (_a = file.value) == null ? void 0 : _a.type) != null ? _b : \"\";\r\n  });\r\n  const fileSize = computed(() => {\r\n    var _a, _b;\r\n    return (_b = (_a = file.value) == null ? void 0 : _a.size) != null ? _b : 0;\r\n  });\r\n  const fileLastModified = computed(() => {\r\n    var _a, _b;\r\n    return (_b = (_a = file.value) == null ? void 0 : _a.lastModified) != null ? _b : 0;\r\n  });\r\n  async function open(_options = {}) {\r\n    if (!isSupported.value)\r\n      return;\r\n    const [handle] = await window.showOpenFilePicker({ ...toValue(options), ..._options });\r\n    fileHandle.value = handle;\r\n    await updateData();\r\n  }\r\n  async function create(_options = {}) {\r\n    if (!isSupported.value)\r\n      return;\r\n    fileHandle.value = await window.showSaveFilePicker({ ...options, ..._options });\r\n    data.value = void 0;\r\n    await updateData();\r\n  }\r\n  async function save(_options = {}) {\r\n    if (!isSupported.value)\r\n      return;\r\n    if (!fileHandle.value)\r\n      return saveAs(_options);\r\n    if (data.value) {\r\n      const writableStream = await fileHandle.value.createWritable();\r\n      await writableStream.write(data.value);\r\n      await writableStream.close();\r\n    }\r\n    await updateFile();\r\n  }\r\n  async function saveAs(_options = {}) {\r\n    if (!isSupported.value)\r\n      return;\r\n    fileHandle.value = await window.showSaveFilePicker({ ...options, ..._options });\r\n    if (data.value) {\r\n      const writableStream = await fileHandle.value.createWritable();\r\n      await writableStream.write(data.value);\r\n      await writableStream.close();\r\n    }\r\n    await updateFile();\r\n  }\r\n  async function updateFile() {\r\n    var _a;\r\n    file.value = await ((_a = fileHandle.value) == null ? void 0 : _a.getFile());\r\n  }\r\n  async function updateData() {\r\n    var _a, _b;\r\n    await updateFile();\r\n    const type = toValue(dataType);\r\n    if (type === \"Text\")\r\n      data.value = await ((_a = file.value) == null ? void 0 : _a.text());\r\n    else if (type === \"ArrayBuffer\")\r\n      data.value = await ((_b = file.value) == null ? void 0 : _b.arrayBuffer());\r\n    else if (type === \"Blob\")\r\n      data.value = file.value;\r\n  }\r\n  watch(() => toValue(dataType), updateData);\r\n  return {\r\n    isSupported,\r\n    data,\r\n    file,\r\n    fileName,\r\n    fileMIME,\r\n    fileSize,\r\n    fileLastModified,\r\n    open,\r\n    create,\r\n    save,\r\n    saveAs,\r\n    updateData\r\n  };\r\n}\r\n\r\nfunction useFocus(target, options = {}) {\r\n  const { initialValue = false, focusVisible = false } = options;\r\n  const innerFocused = ref(false);\r\n  const targetElement = computed(() => unrefElement(target));\r\n  useEventListener(targetElement, \"focus\", (event) => {\r\n    var _a, _b;\r\n    if (!focusVisible || ((_b = (_a = event.target).matches) == null ? void 0 : _b.call(_a, \":focus-visible\")))\r\n      innerFocused.value = true;\r\n  });\r\n  useEventListener(targetElement, \"blur\", () => innerFocused.value = false);\r\n  const focused = computed({\r\n    get: () => innerFocused.value,\r\n    set(value) {\r\n      var _a, _b;\r\n      if (!value && innerFocused.value)\r\n        (_a = targetElement.value) == null ? void 0 : _a.blur();\r\n      else if (value && !innerFocused.value)\r\n        (_b = targetElement.value) == null ? void 0 : _b.focus();\r\n    }\r\n  });\r\n  watch(\r\n    targetElement,\r\n    () => {\r\n      focused.value = initialValue;\r\n    },\r\n    { immediate: true, flush: \"post\" }\r\n  );\r\n  return { focused };\r\n}\r\n\r\nfunction useFocusWithin(target, options = {}) {\r\n  const activeElement = useActiveElement(options);\r\n  const targetElement = computed(() => unrefElement(target));\r\n  const focused = computed(() => targetElement.value && activeElement.value ? targetElement.value.contains(activeElement.value) : false);\r\n  return { focused };\r\n}\r\n\r\nfunction useFps(options) {\r\n  var _a;\r\n  const fps = ref(0);\r\n  if (typeof performance === \"undefined\")\r\n    return fps;\r\n  const every = (_a = options == null ? void 0 : options.every) != null ? _a : 10;\r\n  let last = performance.now();\r\n  let ticks = 0;\r\n  useRafFn(() => {\r\n    ticks += 1;\r\n    if (ticks >= every) {\r\n      const now = performance.now();\r\n      const diff = now - last;\r\n      fps.value = Math.round(1e3 / (diff / ticks));\r\n      last = now;\r\n      ticks = 0;\r\n    }\r\n  });\r\n  return fps;\r\n}\r\n\r\nconst eventHandlers = [\r\n  \"fullscreenchange\",\r\n  \"webkitfullscreenchange\",\r\n  \"webkitendfullscreen\",\r\n  \"mozfullscreenchange\",\r\n  \"MSFullscreenChange\"\r\n];\r\nfunction useFullscreen(target, options = {}) {\r\n  const {\r\n    document = defaultDocument,\r\n    autoExit = false\r\n  } = options;\r\n  const targetRef = computed(() => {\r\n    var _a;\r\n    return (_a = unrefElement(target)) != null ? _a : document == null ? void 0 : document.querySelector(\"html\");\r\n  });\r\n  const isFullscreen = ref(false);\r\n  const requestMethod = computed(() => {\r\n    return [\r\n      \"requestFullscreen\",\r\n      \"webkitRequestFullscreen\",\r\n      \"webkitEnterFullscreen\",\r\n      \"webkitEnterFullScreen\",\r\n      \"webkitRequestFullScreen\",\r\n      \"mozRequestFullScreen\",\r\n      \"msRequestFullscreen\"\r\n    ].find((m) => document && m in document || targetRef.value && m in targetRef.value);\r\n  });\r\n  const exitMethod = computed(() => {\r\n    return [\r\n      \"exitFullscreen\",\r\n      \"webkitExitFullscreen\",\r\n      \"webkitExitFullScreen\",\r\n      \"webkitCancelFullScreen\",\r\n      \"mozCancelFullScreen\",\r\n      \"msExitFullscreen\"\r\n    ].find((m) => document && m in document || targetRef.value && m in targetRef.value);\r\n  });\r\n  const fullscreenEnabled = computed(() => {\r\n    return [\r\n      \"fullScreen\",\r\n      \"webkitIsFullScreen\",\r\n      \"webkitDisplayingFullscreen\",\r\n      \"mozFullScreen\",\r\n      \"msFullscreenElement\"\r\n    ].find((m) => document && m in document || targetRef.value && m in targetRef.value);\r\n  });\r\n  const fullscreenElementMethod = [\r\n    \"fullscreenElement\",\r\n    \"webkitFullscreenElement\",\r\n    \"mozFullScreenElement\",\r\n    \"msFullscreenElement\"\r\n  ].find((m) => document && m in document);\r\n  const isSupported = useSupported(() => targetRef.value && document && requestMethod.value !== void 0 && exitMethod.value !== void 0 && fullscreenEnabled.value !== void 0);\r\n  const isCurrentElementFullScreen = () => {\r\n    if (fullscreenElementMethod)\r\n      return (document == null ? void 0 : document[fullscreenElementMethod]) === targetRef.value;\r\n    return false;\r\n  };\r\n  const isElementFullScreen = () => {\r\n    if (fullscreenEnabled.value) {\r\n      if (document && document[fullscreenEnabled.value] != null) {\r\n        return document[fullscreenEnabled.value];\r\n      } else {\r\n        const target2 = targetRef.value;\r\n        if ((target2 == null ? void 0 : target2[fullscreenEnabled.value]) != null) {\r\n          return Boolean(target2[fullscreenEnabled.value]);\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  async function exit() {\r\n    if (!isSupported.value || !isFullscreen.value)\r\n      return;\r\n    if (exitMethod.value) {\r\n      if ((document == null ? void 0 : document[exitMethod.value]) != null) {\r\n        await document[exitMethod.value]();\r\n      } else {\r\n        const target2 = targetRef.value;\r\n        if ((target2 == null ? void 0 : target2[exitMethod.value]) != null)\r\n          await target2[exitMethod.value]();\r\n      }\r\n    }\r\n    isFullscreen.value = false;\r\n  }\r\n  async function enter() {\r\n    if (!isSupported.value || isFullscreen.value)\r\n      return;\r\n    if (isElementFullScreen())\r\n      await exit();\r\n    const target2 = targetRef.value;\r\n    if (requestMethod.value && (target2 == null ? void 0 : target2[requestMethod.value]) != null) {\r\n      await target2[requestMethod.value]();\r\n      isFullscreen.value = true;\r\n    }\r\n  }\r\n  async function toggle() {\r\n    await (isFullscreen.value ? exit() : enter());\r\n  }\r\n  const handlerCallback = () => {\r\n    const isElementFullScreenValue = isElementFullScreen();\r\n    if (!isElementFullScreenValue || isElementFullScreenValue && isCurrentElementFullScreen())\r\n      isFullscreen.value = isElementFullScreenValue;\r\n  };\r\n  useEventListener(document, eventHandlers, handlerCallback, false);\r\n  useEventListener(() => unrefElement(targetRef), eventHandlers, handlerCallback, false);\r\n  if (autoExit)\r\n    tryOnScopeDispose(exit);\r\n  return {\r\n    isSupported,\r\n    isFullscreen,\r\n    enter,\r\n    exit,\r\n    toggle\r\n  };\r\n}\r\n\r\nfunction mapGamepadToXbox360Controller(gamepad) {\r\n  return computed(() => {\r\n    if (gamepad.value) {\r\n      return {\r\n        buttons: {\r\n          a: gamepad.value.buttons[0],\r\n          b: gamepad.value.buttons[1],\r\n          x: gamepad.value.buttons[2],\r\n          y: gamepad.value.buttons[3]\r\n        },\r\n        bumper: {\r\n          left: gamepad.value.buttons[4],\r\n          right: gamepad.value.buttons[5]\r\n        },\r\n        triggers: {\r\n          left: gamepad.value.buttons[6],\r\n          right: gamepad.value.buttons[7]\r\n        },\r\n        stick: {\r\n          left: {\r\n            horizontal: gamepad.value.axes[0],\r\n            vertical: gamepad.value.axes[1],\r\n            button: gamepad.value.buttons[10]\r\n          },\r\n          right: {\r\n            horizontal: gamepad.value.axes[2],\r\n            vertical: gamepad.value.axes[3],\r\n            button: gamepad.value.buttons[11]\r\n          }\r\n        },\r\n        dpad: {\r\n          up: gamepad.value.buttons[12],\r\n          down: gamepad.value.buttons[13],\r\n          left: gamepad.value.buttons[14],\r\n          right: gamepad.value.buttons[15]\r\n        },\r\n        back: gamepad.value.buttons[8],\r\n        start: gamepad.value.buttons[9]\r\n      };\r\n    }\r\n    return null;\r\n  });\r\n}\r\nfunction useGamepad(options = {}) {\r\n  const {\r\n    navigator = defaultNavigator\r\n  } = options;\r\n  const isSupported = useSupported(() => navigator && \"getGamepads\" in navigator);\r\n  const gamepads = ref([]);\r\n  const onConnectedHook = createEventHook();\r\n  const onDisconnectedHook = createEventHook();\r\n  const stateFromGamepad = (gamepad) => {\r\n    const hapticActuators = [];\r\n    const vibrationActuator = \"vibrationActuator\" in gamepad ? gamepad.vibrationActuator : null;\r\n    if (vibrationActuator)\r\n      hapticActuators.push(vibrationActuator);\r\n    if (gamepad.hapticActuators)\r\n      hapticActuators.push(...gamepad.hapticActuators);\r\n    return {\r\n      ...gamepad,\r\n      id: gamepad.id,\r\n      hapticActuators,\r\n      axes: gamepad.axes.map((axes) => axes),\r\n      buttons: gamepad.buttons.map((button) => ({ pressed: button.pressed, touched: button.touched, value: button.value })),\r\n      index: gamepad.index\r\n    };\r\n  };\r\n  const updateGamepadState = () => {\r\n    const _gamepads = (navigator == null ? void 0 : navigator.getGamepads()) || [];\r\n    for (const gamepad of _gamepads) {\r\n      if (gamepad && gamepads.value[gamepad.index])\r\n        gamepads.value[gamepad.index] = stateFromGamepad(gamepad);\r\n    }\r\n  };\r\n  const { isActive, pause, resume } = useRafFn(updateGamepadState);\r\n  const onGamepadConnected = (gamepad) => {\r\n    if (!gamepads.value.some(({ index }) => index === gamepad.index)) {\r\n      gamepads.value.push(stateFromGamepad(gamepad));\r\n      onConnectedHook.trigger(gamepad.index);\r\n    }\r\n    resume();\r\n  };\r\n  const onGamepadDisconnected = (gamepad) => {\r\n    gamepads.value = gamepads.value.filter((x) => x.index !== gamepad.index);\r\n    onDisconnectedHook.trigger(gamepad.index);\r\n  };\r\n  useEventListener(\"gamepadconnected\", (e) => onGamepadConnected(e.gamepad));\r\n  useEventListener(\"gamepaddisconnected\", (e) => onGamepadDisconnected(e.gamepad));\r\n  tryOnMounted(() => {\r\n    const _gamepads = (navigator == null ? void 0 : navigator.getGamepads()) || [];\r\n    for (const gamepad of _gamepads) {\r\n      if (gamepad && gamepads.value[gamepad.index])\r\n        onGamepadConnected(gamepad);\r\n    }\r\n  });\r\n  pause();\r\n  return {\r\n    isSupported,\r\n    onConnected: onConnectedHook.on,\r\n    onDisconnected: onDisconnectedHook.on,\r\n    gamepads,\r\n    pause,\r\n    resume,\r\n    isActive\r\n  };\r\n}\r\n\r\nfunction useGeolocation(options = {}) {\r\n  const {\r\n    enableHighAccuracy = true,\r\n    maximumAge = 3e4,\r\n    timeout = 27e3,\r\n    navigator = defaultNavigator,\r\n    immediate = true\r\n  } = options;\r\n  const isSupported = useSupported(() => navigator && \"geolocation\" in navigator);\r\n  const locatedAt = ref(null);\r\n  const error = shallowRef(null);\r\n  const coords = ref({\r\n    accuracy: 0,\r\n    latitude: Number.POSITIVE_INFINITY,\r\n    longitude: Number.POSITIVE_INFINITY,\r\n    altitude: null,\r\n    altitudeAccuracy: null,\r\n    heading: null,\r\n    speed: null\r\n  });\r\n  function updatePosition(position) {\r\n    locatedAt.value = position.timestamp;\r\n    coords.value = position.coords;\r\n    error.value = null;\r\n  }\r\n  let watcher;\r\n  function resume() {\r\n    if (isSupported.value) {\r\n      watcher = navigator.geolocation.watchPosition(\r\n        updatePosition,\r\n        (err) => error.value = err,\r\n        {\r\n          enableHighAccuracy,\r\n          maximumAge,\r\n          timeout\r\n        }\r\n      );\r\n    }\r\n  }\r\n  if (immediate)\r\n    resume();\r\n  function pause() {\r\n    if (watcher && navigator)\r\n      navigator.geolocation.clearWatch(watcher);\r\n  }\r\n  tryOnScopeDispose(() => {\r\n    pause();\r\n  });\r\n  return {\r\n    isSupported,\r\n    coords,\r\n    locatedAt,\r\n    error,\r\n    resume,\r\n    pause\r\n  };\r\n}\r\n\r\nconst defaultEvents$1 = [\"mousemove\", \"mousedown\", \"resize\", \"keydown\", \"touchstart\", \"wheel\"];\r\nconst oneMinute = 6e4;\r\nfunction useIdle(timeout = oneMinute, options = {}) {\r\n  const {\r\n    initialState = false,\r\n    listenForVisibilityChange = true,\r\n    events = defaultEvents$1,\r\n    window = defaultWindow,\r\n    eventFilter = throttleFilter(50)\r\n  } = options;\r\n  const idle = ref(initialState);\r\n  const lastActive = ref(timestamp());\r\n  let timer;\r\n  const reset = () => {\r\n    idle.value = false;\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => idle.value = true, timeout);\r\n  };\r\n  const onEvent = createFilterWrapper(\r\n    eventFilter,\r\n    () => {\r\n      lastActive.value = timestamp();\r\n      reset();\r\n    }\r\n  );\r\n  if (window) {\r\n    const document = window.document;\r\n    for (const event of events)\r\n      useEventListener(window, event, onEvent, { passive: true });\r\n    if (listenForVisibilityChange) {\r\n      useEventListener(document, \"visibilitychange\", () => {\r\n        if (!document.hidden)\r\n          onEvent();\r\n      });\r\n    }\r\n    reset();\r\n  }\r\n  return {\r\n    idle,\r\n    lastActive,\r\n    reset\r\n  };\r\n}\r\n\r\nasync function loadImage(options) {\r\n  return new Promise((resolve, reject) => {\r\n    const img = new Image();\r\n    const { src, srcset, sizes, class: clazz, loading, crossorigin, referrerPolicy } = options;\r\n    img.src = src;\r\n    if (srcset)\r\n      img.srcset = srcset;\r\n    if (sizes)\r\n      img.sizes = sizes;\r\n    if (clazz)\r\n      img.className = clazz;\r\n    if (loading)\r\n      img.loading = loading;\r\n    if (crossorigin)\r\n      img.crossOrigin = crossorigin;\r\n    if (referrerPolicy)\r\n      img.referrerPolicy = referrerPolicy;\r\n    img.onload = () => resolve(img);\r\n    img.onerror = reject;\r\n  });\r\n}\r\nfunction useImage(options, asyncStateOptions = {}) {\r\n  const state = useAsyncState(\r\n    () => loadImage(toValue(options)),\r\n    void 0,\r\n    {\r\n      resetOnExecute: true,\r\n      ...asyncStateOptions\r\n    }\r\n  );\r\n  watch(\r\n    () => toValue(options),\r\n    () => state.execute(asyncStateOptions.delay),\r\n    { deep: true }\r\n  );\r\n  return state;\r\n}\r\n\r\nconst ARRIVED_STATE_THRESHOLD_PIXELS = 1;\r\nfunction useScroll(element, options = {}) {\r\n  const {\r\n    throttle = 0,\r\n    idle = 200,\r\n    onStop = noop,\r\n    onScroll = noop,\r\n    offset = {\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0\r\n    },\r\n    eventListenerOptions = {\r\n      capture: false,\r\n      passive: true\r\n    },\r\n    behavior = \"auto\",\r\n    window = defaultWindow,\r\n    onError = (e) => {\r\n      console.error(e);\r\n    }\r\n  } = options;\r\n  const internalX = ref(0);\r\n  const internalY = ref(0);\r\n  const x = computed({\r\n    get() {\r\n      return internalX.value;\r\n    },\r\n    set(x2) {\r\n      scrollTo(x2, void 0);\r\n    }\r\n  });\r\n  const y = computed({\r\n    get() {\r\n      return internalY.value;\r\n    },\r\n    set(y2) {\r\n      scrollTo(void 0, y2);\r\n    }\r\n  });\r\n  function scrollTo(_x, _y) {\r\n    var _a, _b, _c;\r\n    if (!window)\r\n      return;\r\n    const _element = toValue(element);\r\n    if (!_element)\r\n      return;\r\n    (_c = _element instanceof Document ? window.document.body : _element) == null ? void 0 : _c.scrollTo({\r\n      top: (_a = toValue(_y)) != null ? _a : y.value,\r\n      left: (_b = toValue(_x)) != null ? _b : x.value,\r\n      behavior: toValue(behavior)\r\n    });\r\n  }\r\n  const isScrolling = ref(false);\r\n  const arrivedState = reactive({\r\n    left: true,\r\n    right: false,\r\n    top: true,\r\n    bottom: false\r\n  });\r\n  const directions = reactive({\r\n    left: false,\r\n    right: false,\r\n    top: false,\r\n    bottom: false\r\n  });\r\n  const onScrollEnd = (e) => {\r\n    if (!isScrolling.value)\r\n      return;\r\n    isScrolling.value = false;\r\n    directions.left = false;\r\n    directions.right = false;\r\n    directions.top = false;\r\n    directions.bottom = false;\r\n    onStop(e);\r\n  };\r\n  const onScrollEndDebounced = useDebounceFn(onScrollEnd, throttle + idle);\r\n  const setArrivedState = (target) => {\r\n    var _a;\r\n    if (!window)\r\n      return;\r\n    const el = ((_a = target == null ? void 0 : target.document) == null ? void 0 : _a.documentElement) || (target == null ? void 0 : target.documentElement) || unrefElement(target);\r\n    const { display, flexDirection } = getComputedStyle(el);\r\n    const scrollLeft = el.scrollLeft;\r\n    directions.left = scrollLeft < internalX.value;\r\n    directions.right = scrollLeft > internalX.value;\r\n    const left = Math.abs(scrollLeft) <= (offset.left || 0);\r\n    const right = Math.abs(scrollLeft) + el.clientWidth >= el.scrollWidth - (offset.right || 0) - ARRIVED_STATE_THRESHOLD_PIXELS;\r\n    if (display === \"flex\" && flexDirection === \"row-reverse\") {\r\n      arrivedState.left = right;\r\n      arrivedState.right = left;\r\n    } else {\r\n      arrivedState.left = left;\r\n      arrivedState.right = right;\r\n    }\r\n    internalX.value = scrollLeft;\r\n    let scrollTop = el.scrollTop;\r\n    if (target === window.document && !scrollTop)\r\n      scrollTop = window.document.body.scrollTop;\r\n    directions.top = scrollTop < internalY.value;\r\n    directions.bottom = scrollTop > internalY.value;\r\n    const top = Math.abs(scrollTop) <= (offset.top || 0);\r\n    const bottom = Math.abs(scrollTop) + el.clientHeight >= el.scrollHeight - (offset.bottom || 0) - ARRIVED_STATE_THRESHOLD_PIXELS;\r\n    if (display === \"flex\" && flexDirection === \"column-reverse\") {\r\n      arrivedState.top = bottom;\r\n      arrivedState.bottom = top;\r\n    } else {\r\n      arrivedState.top = top;\r\n      arrivedState.bottom = bottom;\r\n    }\r\n    internalY.value = scrollTop;\r\n  };\r\n  const onScrollHandler = (e) => {\r\n    var _a;\r\n    if (!window)\r\n      return;\r\n    const eventTarget = (_a = e.target.documentElement) != null ? _a : e.target;\r\n    setArrivedState(eventTarget);\r\n    isScrolling.value = true;\r\n    onScrollEndDebounced(e);\r\n    onScroll(e);\r\n  };\r\n  useEventListener(\r\n    element,\r\n    \"scroll\",\r\n    throttle ? useThrottleFn(onScrollHandler, throttle, true, false) : onScrollHandler,\r\n    eventListenerOptions\r\n  );\r\n  tryOnMounted(() => {\r\n    try {\r\n      const _element = toValue(element);\r\n      if (!_element)\r\n        return;\r\n      setArrivedState(_element);\r\n    } catch (e) {\r\n      onError(e);\r\n    }\r\n  });\r\n  useEventListener(\r\n    element,\r\n    \"scrollend\",\r\n    onScrollEnd,\r\n    eventListenerOptions\r\n  );\r\n  return {\r\n    x,\r\n    y,\r\n    isScrolling,\r\n    arrivedState,\r\n    directions,\r\n    measure() {\r\n      const _element = toValue(element);\r\n      if (window && _element)\r\n        setArrivedState(_element);\r\n    }\r\n  };\r\n}\r\n\r\nfunction resolveElement(el) {\r\n  if (typeof Window !== \"undefined\" && el instanceof Window)\r\n    return el.document.documentElement;\r\n  if (typeof Document !== \"undefined\" && el instanceof Document)\r\n    return el.documentElement;\r\n  return el;\r\n}\r\n\r\nfunction useInfiniteScroll(element, onLoadMore, options = {}) {\r\n  var _a;\r\n  const {\r\n    direction = \"bottom\",\r\n    interval = 100,\r\n    canLoadMore = () => true\r\n  } = options;\r\n  const state = reactive(useScroll(\r\n    element,\r\n    {\r\n      ...options,\r\n      offset: {\r\n        [direction]: (_a = options.distance) != null ? _a : 0,\r\n        ...options.offset\r\n      }\r\n    }\r\n  ));\r\n  const promise = ref();\r\n  const isLoading = computed(() => !!promise.value);\r\n  const observedElement = computed(() => {\r\n    return resolveElement(toValue(element));\r\n  });\r\n  const isElementVisible = useElementVisibility(observedElement);\r\n  function checkAndLoad() {\r\n    state.measure();\r\n    if (!observedElement.value || !isElementVisible.value || !canLoadMore(observedElement.value))\r\n      return;\r\n    const { scrollHeight, clientHeight, scrollWidth, clientWidth } = observedElement.value;\r\n    const isNarrower = direction === \"bottom\" || direction === \"top\" ? scrollHeight <= clientHeight : scrollWidth <= clientWidth;\r\n    if (state.arrivedState[direction] || isNarrower) {\r\n      if (!promise.value) {\r\n        promise.value = Promise.all([\r\n          onLoadMore(state),\r\n          new Promise((resolve) => setTimeout(resolve, interval))\r\n        ]).finally(() => {\r\n          promise.value = null;\r\n          nextTick(() => checkAndLoad());\r\n        });\r\n      }\r\n    }\r\n  }\r\n  watch(\r\n    () => [state.arrivedState[direction], isElementVisible.value],\r\n    checkAndLoad,\r\n    { immediate: true }\r\n  );\r\n  return {\r\n    isLoading\r\n  };\r\n}\r\n\r\nconst defaultEvents = [\"mousedown\", \"mouseup\", \"keydown\", \"keyup\"];\r\nfunction useKeyModifier(modifier, options = {}) {\r\n  const {\r\n    events = defaultEvents,\r\n    document = defaultDocument,\r\n    initial = null\r\n  } = options;\r\n  const state = ref(initial);\r\n  if (document) {\r\n    events.forEach((listenerEvent) => {\r\n      useEventListener(document, listenerEvent, (evt) => {\r\n        if (typeof evt.getModifierState === \"function\")\r\n          state.value = evt.getModifierState(modifier);\r\n      });\r\n    });\r\n  }\r\n  return state;\r\n}\r\n\r\nfunction useLocalStorage(key, initialValue, options = {}) {\r\n  const { window = defaultWindow } = options;\r\n  return useStorage(key, initialValue, window == null ? void 0 : window.localStorage, options);\r\n}\r\n\r\nconst DefaultMagicKeysAliasMap = {\r\n  ctrl: \"control\",\r\n  command: \"meta\",\r\n  cmd: \"meta\",\r\n  option: \"alt\",\r\n  up: \"arrowup\",\r\n  down: \"arrowdown\",\r\n  left: \"arrowleft\",\r\n  right: \"arrowright\"\r\n};\r\n\r\nfunction useMagicKeys(options = {}) {\r\n  const {\r\n    reactive: useReactive = false,\r\n    target = defaultWindow,\r\n    aliasMap = DefaultMagicKeysAliasMap,\r\n    passive = true,\r\n    onEventFired = noop\r\n  } = options;\r\n  const current = reactive(/* @__PURE__ */ new Set());\r\n  const obj = {\r\n    toJSON() {\r\n      return {};\r\n    },\r\n    current\r\n  };\r\n  const refs = useReactive ? reactive(obj) : obj;\r\n  const metaDeps = /* @__PURE__ */ new Set();\r\n  const usedKeys = /* @__PURE__ */ new Set();\r\n  function setRefs(key, value) {\r\n    if (key in refs) {\r\n      if (useReactive)\r\n        refs[key] = value;\r\n      else\r\n        refs[key].value = value;\r\n    }\r\n  }\r\n  function reset() {\r\n    current.clear();\r\n    for (const key of usedKeys)\r\n      setRefs(key, false);\r\n  }\r\n  function updateRefs(e, value) {\r\n    var _a, _b;\r\n    const key = (_a = e.key) == null ? void 0 : _a.toLowerCase();\r\n    const code = (_b = e.code) == null ? void 0 : _b.toLowerCase();\r\n    const values = [code, key].filter(Boolean);\r\n    if (key) {\r\n      if (value)\r\n        current.add(key);\r\n      else\r\n        current.delete(key);\r\n    }\r\n    for (const key2 of values) {\r\n      usedKeys.add(key2);\r\n      setRefs(key2, value);\r\n    }\r\n    if (key === \"meta\" && !value) {\r\n      metaDeps.forEach((key2) => {\r\n        current.delete(key2);\r\n        setRefs(key2, false);\r\n      });\r\n      metaDeps.clear();\r\n    } else if (typeof e.getModifierState === \"function\" && e.getModifierState(\"Meta\") && value) {\r\n      [...current, ...values].forEach((key2) => metaDeps.add(key2));\r\n    }\r\n  }\r\n  useEventListener(target, \"keydown\", (e) => {\r\n    updateRefs(e, true);\r\n    return onEventFired(e);\r\n  }, { passive });\r\n  useEventListener(target, \"keyup\", (e) => {\r\n    updateRefs(e, false);\r\n    return onEventFired(e);\r\n  }, { passive });\r\n  useEventListener(\"blur\", reset, { passive: true });\r\n  useEventListener(\"focus\", reset, { passive: true });\r\n  const proxy = new Proxy(\r\n    refs,\r\n    {\r\n      get(target2, prop, rec) {\r\n        if (typeof prop !== \"string\")\r\n          return Reflect.get(target2, prop, rec);\r\n        prop = prop.toLowerCase();\r\n        if (prop in aliasMap)\r\n          prop = aliasMap[prop];\r\n        if (!(prop in refs)) {\r\n          if (/[+_-]/.test(prop)) {\r\n            const keys = prop.split(/[+_-]/g).map((i) => i.trim());\r\n            refs[prop] = computed(() => keys.every((key) => toValue(proxy[key])));\r\n          } else {\r\n            refs[prop] = ref(false);\r\n          }\r\n        }\r\n        const r = Reflect.get(target2, prop, rec);\r\n        return useReactive ? toValue(r) : r;\r\n      }\r\n    }\r\n  );\r\n  return proxy;\r\n}\r\n\r\nfunction usingElRef(source, cb) {\r\n  if (toValue(source))\r\n    cb(toValue(source));\r\n}\r\nfunction timeRangeToArray(timeRanges) {\r\n  let ranges = [];\r\n  for (let i = 0; i < timeRanges.length; ++i)\r\n    ranges = [...ranges, [timeRanges.start(i), timeRanges.end(i)]];\r\n  return ranges;\r\n}\r\nfunction tracksToArray(tracks) {\r\n  return Array.from(tracks).map(({ label, kind, language, mode, activeCues, cues, inBandMetadataTrackDispatchType }, id) => ({ id, label, kind, language, mode, activeCues, cues, inBandMetadataTrackDispatchType }));\r\n}\r\nconst defaultOptions = {\r\n  src: \"\",\r\n  tracks: []\r\n};\r\nfunction useMediaControls(target, options = {}) {\r\n  options = {\r\n    ...defaultOptions,\r\n    ...options\r\n  };\r\n  const {\r\n    document = defaultDocument\r\n  } = options;\r\n  const currentTime = ref(0);\r\n  const duration = ref(0);\r\n  const seeking = ref(false);\r\n  const volume = ref(1);\r\n  const waiting = ref(false);\r\n  const ended = ref(false);\r\n  const playing = ref(false);\r\n  const rate = ref(1);\r\n  const stalled = ref(false);\r\n  const buffered = ref([]);\r\n  const tracks = ref([]);\r\n  const selectedTrack = ref(-1);\r\n  const isPictureInPicture = ref(false);\r\n  const muted = ref(false);\r\n  const supportsPictureInPicture = document && \"pictureInPictureEnabled\" in document;\r\n  const sourceErrorEvent = createEventHook();\r\n  const disableTrack = (track) => {\r\n    usingElRef(target, (el) => {\r\n      if (track) {\r\n        const id = typeof track === \"number\" ? track : track.id;\r\n        el.textTracks[id].mode = \"disabled\";\r\n      } else {\r\n        for (let i = 0; i < el.textTracks.length; ++i)\r\n          el.textTracks[i].mode = \"disabled\";\r\n      }\r\n      selectedTrack.value = -1;\r\n    });\r\n  };\r\n  const enableTrack = (track, disableTracks = true) => {\r\n    usingElRef(target, (el) => {\r\n      const id = typeof track === \"number\" ? track : track.id;\r\n      if (disableTracks)\r\n        disableTrack();\r\n      el.textTracks[id].mode = \"showing\";\r\n      selectedTrack.value = id;\r\n    });\r\n  };\r\n  const togglePictureInPicture = () => {\r\n    return new Promise((resolve, reject) => {\r\n      usingElRef(target, async (el) => {\r\n        if (supportsPictureInPicture) {\r\n          if (!isPictureInPicture.value) {\r\n            el.requestPictureInPicture().then(resolve).catch(reject);\r\n          } else {\r\n            document.exitPictureInPicture().then(resolve).catch(reject);\r\n          }\r\n        }\r\n      });\r\n    });\r\n  };\r\n  watchEffect(() => {\r\n    if (!document)\r\n      return;\r\n    const el = toValue(target);\r\n    if (!el)\r\n      return;\r\n    const src = toValue(options.src);\r\n    let sources = [];\r\n    if (!src)\r\n      return;\r\n    if (typeof src === \"string\")\r\n      sources = [{ src }];\r\n    else if (Array.isArray(src))\r\n      sources = src;\r\n    else if (isObject(src))\r\n      sources = [src];\r\n    el.querySelectorAll(\"source\").forEach((e) => {\r\n      e.removeEventListener(\"error\", sourceErrorEvent.trigger);\r\n      e.remove();\r\n    });\r\n    sources.forEach(({ src: src2, type }) => {\r\n      const source = document.createElement(\"source\");\r\n      source.setAttribute(\"src\", src2);\r\n      source.setAttribute(\"type\", type || \"\");\r\n      source.addEventListener(\"error\", sourceErrorEvent.trigger);\r\n      el.appendChild(source);\r\n    });\r\n    el.load();\r\n  });\r\n  tryOnScopeDispose(() => {\r\n    const el = toValue(target);\r\n    if (!el)\r\n      return;\r\n    el.querySelectorAll(\"source\").forEach((e) => e.removeEventListener(\"error\", sourceErrorEvent.trigger));\r\n  });\r\n  watch([target, volume], () => {\r\n    const el = toValue(target);\r\n    if (!el)\r\n      return;\r\n    el.volume = volume.value;\r\n  });\r\n  watch([target, muted], () => {\r\n    const el = toValue(target);\r\n    if (!el)\r\n      return;\r\n    el.muted = muted.value;\r\n  });\r\n  watch([target, rate], () => {\r\n    const el = toValue(target);\r\n    if (!el)\r\n      return;\r\n    el.playbackRate = rate.value;\r\n  });\r\n  watchEffect(() => {\r\n    if (!document)\r\n      return;\r\n    const textTracks = toValue(options.tracks);\r\n    const el = toValue(target);\r\n    if (!textTracks || !textTracks.length || !el)\r\n      return;\r\n    el.querySelectorAll(\"track\").forEach((e) => e.remove());\r\n    textTracks.forEach(({ default: isDefault, kind, label, src, srcLang }, i) => {\r\n      const track = document.createElement(\"track\");\r\n      track.default = isDefault || false;\r\n      track.kind = kind;\r\n      track.label = label;\r\n      track.src = src;\r\n      track.srclang = srcLang;\r\n      if (track.default)\r\n        selectedTrack.value = i;\r\n      el.appendChild(track);\r\n    });\r\n  });\r\n  const { ignoreUpdates: ignoreCurrentTimeUpdates } = watchIgnorable(currentTime, (time) => {\r\n    const el = toValue(target);\r\n    if (!el)\r\n      return;\r\n    el.currentTime = time;\r\n  });\r\n  const { ignoreUpdates: ignorePlayingUpdates } = watchIgnorable(playing, (isPlaying) => {\r\n    const el = toValue(target);\r\n    if (!el)\r\n      return;\r\n    isPlaying ? el.play() : el.pause();\r\n  });\r\n  useEventListener(target, \"timeupdate\", () => ignoreCurrentTimeUpdates(() => currentTime.value = toValue(target).currentTime));\r\n  useEventListener(target, \"durationchange\", () => duration.value = toValue(target).duration);\r\n  useEventListener(target, \"progress\", () => buffered.value = timeRangeToArray(toValue(target).buffered));\r\n  useEventListener(target, \"seeking\", () => seeking.value = true);\r\n  useEventListener(target, \"seeked\", () => seeking.value = false);\r\n  useEventListener(target, [\"waiting\", \"loadstart\"], () => {\r\n    waiting.value = true;\r\n    ignorePlayingUpdates(() => playing.value = false);\r\n  });\r\n  useEventListener(target, \"loadeddata\", () => waiting.value = false);\r\n  useEventListener(target, \"playing\", () => {\r\n    waiting.value = false;\r\n    ended.value = false;\r\n    ignorePlayingUpdates(() => playing.value = true);\r\n  });\r\n  useEventListener(target, \"ratechange\", () => rate.value = toValue(target).playbackRate);\r\n  useEventListener(target, \"stalled\", () => stalled.value = true);\r\n  useEventListener(target, \"ended\", () => ended.value = true);\r\n  useEventListener(target, \"pause\", () => ignorePlayingUpdates(() => playing.value = false));\r\n  useEventListener(target, \"play\", () => ignorePlayingUpdates(() => playing.value = true));\r\n  useEventListener(target, \"enterpictureinpicture\", () => isPictureInPicture.value = true);\r\n  useEventListener(target, \"leavepictureinpicture\", () => isPictureInPicture.value = false);\r\n  useEventListener(target, \"volumechange\", () => {\r\n    const el = toValue(target);\r\n    if (!el)\r\n      return;\r\n    volume.value = el.volume;\r\n    muted.value = el.muted;\r\n  });\r\n  const listeners = [];\r\n  const stop = watch([target], () => {\r\n    const el = toValue(target);\r\n    if (!el)\r\n      return;\r\n    stop();\r\n    listeners[0] = useEventListener(el.textTracks, \"addtrack\", () => tracks.value = tracksToArray(el.textTracks));\r\n    listeners[1] = useEventListener(el.textTracks, \"removetrack\", () => tracks.value = tracksToArray(el.textTracks));\r\n    listeners[2] = useEventListener(el.textTracks, \"change\", () => tracks.value = tracksToArray(el.textTracks));\r\n  });\r\n  tryOnScopeDispose(() => listeners.forEach((listener) => listener()));\r\n  return {\r\n    currentTime,\r\n    duration,\r\n    waiting,\r\n    seeking,\r\n    ended,\r\n    stalled,\r\n    buffered,\r\n    playing,\r\n    rate,\r\n    // Volume\r\n    volume,\r\n    muted,\r\n    // Tracks\r\n    tracks,\r\n    selectedTrack,\r\n    enableTrack,\r\n    disableTrack,\r\n    // Picture in Picture\r\n    supportsPictureInPicture,\r\n    togglePictureInPicture,\r\n    isPictureInPicture,\r\n    // Events\r\n    onSourceError: sourceErrorEvent.on\r\n  };\r\n}\r\n\r\nfunction getMapVue2Compat() {\r\n  const data = shallowReactive({});\r\n  return {\r\n    get: (key) => data[key],\r\n    set: (key, value) => set(data, key, value),\r\n    has: (key) => hasOwn(data, key),\r\n    delete: (key) => del(data, key),\r\n    clear: () => {\r\n      Object.keys(data).forEach((key) => {\r\n        del(data, key);\r\n      });\r\n    }\r\n  };\r\n}\r\nfunction useMemoize(resolver, options) {\r\n  const initCache = () => {\r\n    if (options == null ? void 0 : options.cache)\r\n      return shallowReactive(options.cache);\r\n    if (isVue2)\r\n      return getMapVue2Compat();\r\n    return shallowReactive(/* @__PURE__ */ new Map());\r\n  };\r\n  const cache = initCache();\r\n  const generateKey = (...args) => (options == null ? void 0 : options.getKey) ? options.getKey(...args) : JSON.stringify(args);\r\n  const _loadData = (key, ...args) => {\r\n    cache.set(key, resolver(...args));\r\n    return cache.get(key);\r\n  };\r\n  const loadData = (...args) => _loadData(generateKey(...args), ...args);\r\n  const deleteData = (...args) => {\r\n    cache.delete(generateKey(...args));\r\n  };\r\n  const clearData = () => {\r\n    cache.clear();\r\n  };\r\n  const memoized = (...args) => {\r\n    const key = generateKey(...args);\r\n    if (cache.has(key))\r\n      return cache.get(key);\r\n    return _loadData(key, ...args);\r\n  };\r\n  memoized.load = loadData;\r\n  memoized.delete = deleteData;\r\n  memoized.clear = clearData;\r\n  memoized.generateKey = generateKey;\r\n  memoized.cache = cache;\r\n  return memoized;\r\n}\r\n\r\nfunction useMemory(options = {}) {\r\n  const memory = ref();\r\n  const isSupported = useSupported(() => typeof performance !== \"undefined\" && \"memory\" in performance);\r\n  if (isSupported.value) {\r\n    const { interval = 1e3 } = options;\r\n    useIntervalFn(() => {\r\n      memory.value = performance.memory;\r\n    }, interval, { immediate: options.immediate, immediateCallback: options.immediateCallback });\r\n  }\r\n  return { isSupported, memory };\r\n}\r\n\r\nconst UseMouseBuiltinExtractors = {\r\n  page: (event) => [event.pageX, event.pageY],\r\n  client: (event) => [event.clientX, event.clientY],\r\n  screen: (event) => [event.screenX, event.screenY],\r\n  movement: (event) => event instanceof Touch ? null : [event.movementX, event.movementY]\r\n};\r\nfunction useMouse(options = {}) {\r\n  const {\r\n    type = \"page\",\r\n    touch = true,\r\n    resetOnTouchEnds = false,\r\n    initialValue = { x: 0, y: 0 },\r\n    window = defaultWindow,\r\n    target = window,\r\n    scroll = true,\r\n    eventFilter\r\n  } = options;\r\n  let _prevMouseEvent = null;\r\n  const x = ref(initialValue.x);\r\n  const y = ref(initialValue.y);\r\n  const sourceType = ref(null);\r\n  const extractor = typeof type === \"function\" ? type : UseMouseBuiltinExtractors[type];\r\n  const mouseHandler = (event) => {\r\n    const result = extractor(event);\r\n    _prevMouseEvent = event;\r\n    if (result) {\r\n      [x.value, y.value] = result;\r\n      sourceType.value = \"mouse\";\r\n    }\r\n  };\r\n  const touchHandler = (event) => {\r\n    if (event.touches.length > 0) {\r\n      const result = extractor(event.touches[0]);\r\n      if (result) {\r\n        [x.value, y.value] = result;\r\n        sourceType.value = \"touch\";\r\n      }\r\n    }\r\n  };\r\n  const scrollHandler = () => {\r\n    if (!_prevMouseEvent || !window)\r\n      return;\r\n    const pos = extractor(_prevMouseEvent);\r\n    if (_prevMouseEvent instanceof MouseEvent && pos) {\r\n      x.value = pos[0] + window.scrollX;\r\n      y.value = pos[1] + window.scrollY;\r\n    }\r\n  };\r\n  const reset = () => {\r\n    x.value = initialValue.x;\r\n    y.value = initialValue.y;\r\n  };\r\n  const mouseHandlerWrapper = eventFilter ? (event) => eventFilter(() => mouseHandler(event), {}) : (event) => mouseHandler(event);\r\n  const touchHandlerWrapper = eventFilter ? (event) => eventFilter(() => touchHandler(event), {}) : (event) => touchHandler(event);\r\n  const scrollHandlerWrapper = eventFilter ? () => eventFilter(() => scrollHandler(), {}) : () => scrollHandler();\r\n  if (target) {\r\n    const listenerOptions = { passive: true };\r\n    useEventListener(target, [\"mousemove\", \"dragover\"], mouseHandlerWrapper, listenerOptions);\r\n    if (touch && type !== \"movement\") {\r\n      useEventListener(target, [\"touchstart\", \"touchmove\"], touchHandlerWrapper, listenerOptions);\r\n      if (resetOnTouchEnds)\r\n        useEventListener(target, \"touchend\", reset, listenerOptions);\r\n    }\r\n    if (scroll && type === \"page\")\r\n      useEventListener(window, \"scroll\", scrollHandlerWrapper, { passive: true });\r\n  }\r\n  return {\r\n    x,\r\n    y,\r\n    sourceType\r\n  };\r\n}\r\n\r\nfunction useMouseInElement(target, options = {}) {\r\n  const {\r\n    handleOutside = true,\r\n    window = defaultWindow\r\n  } = options;\r\n  const type = options.type || \"page\";\r\n  const { x, y, sourceType } = useMouse(options);\r\n  const targetRef = ref(target != null ? target : window == null ? void 0 : window.document.body);\r\n  const elementX = ref(0);\r\n  const elementY = ref(0);\r\n  const elementPositionX = ref(0);\r\n  const elementPositionY = ref(0);\r\n  const elementHeight = ref(0);\r\n  const elementWidth = ref(0);\r\n  const isOutside = ref(true);\r\n  let stop = () => {\r\n  };\r\n  if (window) {\r\n    stop = watch(\r\n      [targetRef, x, y],\r\n      () => {\r\n        const el = unrefElement(targetRef);\r\n        if (!el)\r\n          return;\r\n        const {\r\n          left,\r\n          top,\r\n          width,\r\n          height\r\n        } = el.getBoundingClientRect();\r\n        elementPositionX.value = left + (type === \"page\" ? window.pageXOffset : 0);\r\n        elementPositionY.value = top + (type === \"page\" ? window.pageYOffset : 0);\r\n        elementHeight.value = height;\r\n        elementWidth.value = width;\r\n        const elX = x.value - elementPositionX.value;\r\n        const elY = y.value - elementPositionY.value;\r\n        isOutside.value = width === 0 || height === 0 || elX < 0 || elY < 0 || elX > width || elY > height;\r\n        if (handleOutside || !isOutside.value) {\r\n          elementX.value = elX;\r\n          elementY.value = elY;\r\n        }\r\n      },\r\n      { immediate: true }\r\n    );\r\n    useEventListener(document, \"mouseleave\", () => {\r\n      isOutside.value = true;\r\n    });\r\n  }\r\n  return {\r\n    x,\r\n    y,\r\n    sourceType,\r\n    elementX,\r\n    elementY,\r\n    elementPositionX,\r\n    elementPositionY,\r\n    elementHeight,\r\n    elementWidth,\r\n    isOutside,\r\n    stop\r\n  };\r\n}\r\n\r\nfunction useMousePressed(options = {}) {\r\n  const {\r\n    touch = true,\r\n    drag = true,\r\n    capture = false,\r\n    initialValue = false,\r\n    window = defaultWindow\r\n  } = options;\r\n  const pressed = ref(initialValue);\r\n  const sourceType = ref(null);\r\n  if (!window) {\r\n    return {\r\n      pressed,\r\n      sourceType\r\n    };\r\n  }\r\n  const onPressed = (srcType) => () => {\r\n    pressed.value = true;\r\n    sourceType.value = srcType;\r\n  };\r\n  const onReleased = () => {\r\n    pressed.value = false;\r\n    sourceType.value = null;\r\n  };\r\n  const target = computed(() => unrefElement(options.target) || window);\r\n  useEventListener(target, \"mousedown\", onPressed(\"mouse\"), { passive: true, capture });\r\n  useEventListener(window, \"mouseleave\", onReleased, { passive: true, capture });\r\n  useEventListener(window, \"mouseup\", onReleased, { passive: true, capture });\r\n  if (drag) {\r\n    useEventListener(target, \"dragstart\", onPressed(\"mouse\"), { passive: true, capture });\r\n    useEventListener(window, \"drop\", onReleased, { passive: true, capture });\r\n    useEventListener(window, \"dragend\", onReleased, { passive: true, capture });\r\n  }\r\n  if (touch) {\r\n    useEventListener(target, \"touchstart\", onPressed(\"touch\"), { passive: true, capture });\r\n    useEventListener(window, \"touchend\", onReleased, { passive: true, capture });\r\n    useEventListener(window, \"touchcancel\", onReleased, { passive: true, capture });\r\n  }\r\n  return {\r\n    pressed,\r\n    sourceType\r\n  };\r\n}\r\n\r\nfunction useNavigatorLanguage(options = {}) {\r\n  const { window = defaultWindow } = options;\r\n  const navigator = window == null ? void 0 : window.navigator;\r\n  const isSupported = useSupported(() => navigator && \"language\" in navigator);\r\n  const language = ref(navigator == null ? void 0 : navigator.language);\r\n  useEventListener(window, \"languagechange\", () => {\r\n    if (navigator)\r\n      language.value = navigator.language;\r\n  });\r\n  return {\r\n    isSupported,\r\n    language\r\n  };\r\n}\r\n\r\nfunction useNetwork(options = {}) {\r\n  const { window = defaultWindow } = options;\r\n  const navigator = window == null ? void 0 : window.navigator;\r\n  const isSupported = useSupported(() => navigator && \"connection\" in navigator);\r\n  const isOnline = ref(true);\r\n  const saveData = ref(false);\r\n  const offlineAt = ref(void 0);\r\n  const onlineAt = ref(void 0);\r\n  const downlink = ref(void 0);\r\n  const downlinkMax = ref(void 0);\r\n  const rtt = ref(void 0);\r\n  const effectiveType = ref(void 0);\r\n  const type = ref(\"unknown\");\r\n  const connection = isSupported.value && navigator.connection;\r\n  function updateNetworkInformation() {\r\n    if (!navigator)\r\n      return;\r\n    isOnline.value = navigator.onLine;\r\n    offlineAt.value = isOnline.value ? void 0 : Date.now();\r\n    onlineAt.value = isOnline.value ? Date.now() : void 0;\r\n    if (connection) {\r\n      downlink.value = connection.downlink;\r\n      downlinkMax.value = connection.downlinkMax;\r\n      effectiveType.value = connection.effectiveType;\r\n      rtt.value = connection.rtt;\r\n      saveData.value = connection.saveData;\r\n      type.value = connection.type;\r\n    }\r\n  }\r\n  if (window) {\r\n    useEventListener(window, \"offline\", () => {\r\n      isOnline.value = false;\r\n      offlineAt.value = Date.now();\r\n    });\r\n    useEventListener(window, \"online\", () => {\r\n      isOnline.value = true;\r\n      onlineAt.value = Date.now();\r\n    });\r\n  }\r\n  if (connection)\r\n    useEventListener(connection, \"change\", updateNetworkInformation, false);\r\n  updateNetworkInformation();\r\n  return {\r\n    isSupported,\r\n    isOnline,\r\n    saveData,\r\n    offlineAt,\r\n    onlineAt,\r\n    downlink,\r\n    downlinkMax,\r\n    effectiveType,\r\n    rtt,\r\n    type\r\n  };\r\n}\r\n\r\nfunction useNow(options = {}) {\r\n  const {\r\n    controls: exposeControls = false,\r\n    interval = \"requestAnimationFrame\"\r\n  } = options;\r\n  const now = ref(/* @__PURE__ */ new Date());\r\n  const update = () => now.value = /* @__PURE__ */ new Date();\r\n  const controls = interval === \"requestAnimationFrame\" ? useRafFn(update, { immediate: true }) : useIntervalFn(update, interval, { immediate: true });\r\n  if (exposeControls) {\r\n    return {\r\n      now,\r\n      ...controls\r\n    };\r\n  } else {\r\n    return now;\r\n  }\r\n}\r\n\r\nfunction useObjectUrl(object) {\r\n  const url = ref();\r\n  const release = () => {\r\n    if (url.value)\r\n      URL.revokeObjectURL(url.value);\r\n    url.value = void 0;\r\n  };\r\n  watch(\r\n    () => toValue(object),\r\n    (newObject) => {\r\n      release();\r\n      if (newObject)\r\n        url.value = URL.createObjectURL(newObject);\r\n    },\r\n    { immediate: true }\r\n  );\r\n  tryOnScopeDispose(release);\r\n  return readonly(url);\r\n}\r\n\r\nfunction useClamp(value, min, max) {\r\n  if (typeof value === \"function\" || isReadonly(value))\r\n    return computed(() => clamp(toValue(value), toValue(min), toValue(max)));\r\n  const _value = ref(value);\r\n  return computed({\r\n    get() {\r\n      return _value.value = clamp(_value.value, toValue(min), toValue(max));\r\n    },\r\n    set(value2) {\r\n      _value.value = clamp(value2, toValue(min), toValue(max));\r\n    }\r\n  });\r\n}\r\n\r\nfunction useOffsetPagination(options) {\r\n  const {\r\n    total = Number.POSITIVE_INFINITY,\r\n    pageSize = 10,\r\n    page = 1,\r\n    onPageChange = noop,\r\n    onPageSizeChange = noop,\r\n    onPageCountChange = noop\r\n  } = options;\r\n  const currentPageSize = useClamp(pageSize, 1, Number.POSITIVE_INFINITY);\r\n  const pageCount = computed(() => Math.max(\r\n    1,\r\n    Math.ceil(toValue(total) / toValue(currentPageSize))\r\n  ));\r\n  const currentPage = useClamp(page, 1, pageCount);\r\n  const isFirstPage = computed(() => currentPage.value === 1);\r\n  const isLastPage = computed(() => currentPage.value === pageCount.value);\r\n  if (isRef(page)) {\r\n    syncRef(page, currentPage, {\r\n      direction: isReadonly(page) ? \"ltr\" : \"both\"\r\n    });\r\n  }\r\n  if (isRef(pageSize)) {\r\n    syncRef(pageSize, currentPageSize, {\r\n      direction: isReadonly(pageSize) ? \"ltr\" : \"both\"\r\n    });\r\n  }\r\n  function prev() {\r\n    currentPage.value--;\r\n  }\r\n  function next() {\r\n    currentPage.value++;\r\n  }\r\n  const returnValue = {\r\n    currentPage,\r\n    currentPageSize,\r\n    pageCount,\r\n    isFirstPage,\r\n    isLastPage,\r\n    prev,\r\n    next\r\n  };\r\n  watch(currentPage, () => {\r\n    onPageChange(reactive(returnValue));\r\n  });\r\n  watch(currentPageSize, () => {\r\n    onPageSizeChange(reactive(returnValue));\r\n  });\r\n  watch(pageCount, () => {\r\n    onPageCountChange(reactive(returnValue));\r\n  });\r\n  return returnValue;\r\n}\r\n\r\nfunction useOnline(options = {}) {\r\n  const { isOnline } = useNetwork(options);\r\n  return isOnline;\r\n}\r\n\r\nfunction usePageLeave(options = {}) {\r\n  const { window = defaultWindow } = options;\r\n  const isLeft = ref(false);\r\n  const handler = (event) => {\r\n    if (!window)\r\n      return;\r\n    event = event || window.event;\r\n    const from = event.relatedTarget || event.toElement;\r\n    isLeft.value = !from;\r\n  };\r\n  if (window) {\r\n    useEventListener(window, \"mouseout\", handler, { passive: true });\r\n    useEventListener(window.document, \"mouseleave\", handler, { passive: true });\r\n    useEventListener(window.document, \"mouseenter\", handler, { passive: true });\r\n  }\r\n  return isLeft;\r\n}\r\n\r\nfunction useScreenOrientation(options = {}) {\r\n  const {\r\n    window = defaultWindow\r\n  } = options;\r\n  const isSupported = useSupported(() => window && \"screen\" in window && \"orientation\" in window.screen);\r\n  const screenOrientation = isSupported.value ? window.screen.orientation : {};\r\n  const orientation = ref(screenOrientation.type);\r\n  const angle = ref(screenOrientation.angle || 0);\r\n  if (isSupported.value) {\r\n    useEventListener(window, \"orientationchange\", () => {\r\n      orientation.value = screenOrientation.type;\r\n      angle.value = screenOrientation.angle;\r\n    });\r\n  }\r\n  const lockOrientation = (type) => {\r\n    if (isSupported.value && typeof screenOrientation.lock === \"function\")\r\n      return screenOrientation.lock(type);\r\n    return Promise.reject(new Error(\"Not supported\"));\r\n  };\r\n  const unlockOrientation = () => {\r\n    if (isSupported.value && typeof screenOrientation.unlock === \"function\")\r\n      screenOrientation.unlock();\r\n  };\r\n  return {\r\n    isSupported,\r\n    orientation,\r\n    angle,\r\n    lockOrientation,\r\n    unlockOrientation\r\n  };\r\n}\r\n\r\nfunction useParallax(target, options = {}) {\r\n  const {\r\n    deviceOrientationTiltAdjust = (i) => i,\r\n    deviceOrientationRollAdjust = (i) => i,\r\n    mouseTiltAdjust = (i) => i,\r\n    mouseRollAdjust = (i) => i,\r\n    window = defaultWindow\r\n  } = options;\r\n  const orientation = reactive(useDeviceOrientation({ window }));\r\n  const screenOrientation = reactive(useScreenOrientation({ window }));\r\n  const {\r\n    elementX: x,\r\n    elementY: y,\r\n    elementWidth: width,\r\n    elementHeight: height\r\n  } = useMouseInElement(target, { handleOutside: false, window });\r\n  const source = computed(() => {\r\n    if (orientation.isSupported && (orientation.alpha != null && orientation.alpha !== 0 || orientation.gamma != null && orientation.gamma !== 0))\r\n      return \"deviceOrientation\";\r\n    return \"mouse\";\r\n  });\r\n  const roll = computed(() => {\r\n    if (source.value === \"deviceOrientation\") {\r\n      let value;\r\n      switch (screenOrientation.orientation) {\r\n        case \"landscape-primary\":\r\n          value = orientation.gamma / 90;\r\n          break;\r\n        case \"landscape-secondary\":\r\n          value = -orientation.gamma / 90;\r\n          break;\r\n        case \"portrait-primary\":\r\n          value = -orientation.beta / 90;\r\n          break;\r\n        case \"portrait-secondary\":\r\n          value = orientation.beta / 90;\r\n          break;\r\n        default:\r\n          value = -orientation.beta / 90;\r\n      }\r\n      return deviceOrientationRollAdjust(value);\r\n    } else {\r\n      const value = -(y.value - height.value / 2) / height.value;\r\n      return mouseRollAdjust(value);\r\n    }\r\n  });\r\n  const tilt = computed(() => {\r\n    if (source.value === \"deviceOrientation\") {\r\n      let value;\r\n      switch (screenOrientation.orientation) {\r\n        case \"landscape-primary\":\r\n          value = orientation.beta / 90;\r\n          break;\r\n        case \"landscape-secondary\":\r\n          value = -orientation.beta / 90;\r\n          break;\r\n        case \"portrait-primary\":\r\n          value = orientation.gamma / 90;\r\n          break;\r\n        case \"portrait-secondary\":\r\n          value = -orientation.gamma / 90;\r\n          break;\r\n        default:\r\n          value = orientation.gamma / 90;\r\n      }\r\n      return deviceOrientationTiltAdjust(value);\r\n    } else {\r\n      const value = (x.value - width.value / 2) / width.value;\r\n      return mouseTiltAdjust(value);\r\n    }\r\n  });\r\n  return { roll, tilt, source };\r\n}\r\n\r\nfunction useParentElement(element = useCurrentElement()) {\r\n  const parentElement = shallowRef();\r\n  const update = () => {\r\n    const el = unrefElement(element);\r\n    if (el)\r\n      parentElement.value = el.parentElement;\r\n  };\r\n  tryOnMounted(update);\r\n  watch(() => toValue(element), update);\r\n  return parentElement;\r\n}\r\n\r\nfunction usePerformanceObserver(options, callback) {\r\n  const {\r\n    window = defaultWindow,\r\n    immediate = true,\r\n    ...performanceOptions\r\n  } = options;\r\n  const isSupported = useSupported(() => window && \"PerformanceObserver\" in window);\r\n  let observer;\r\n  const stop = () => {\r\n    observer == null ? void 0 : observer.disconnect();\r\n  };\r\n  const start = () => {\r\n    if (isSupported.value) {\r\n      stop();\r\n      observer = new PerformanceObserver(callback);\r\n      observer.observe(performanceOptions);\r\n    }\r\n  };\r\n  tryOnScopeDispose(stop);\r\n  if (immediate)\r\n    start();\r\n  return {\r\n    isSupported,\r\n    start,\r\n    stop\r\n  };\r\n}\r\n\r\nconst defaultState = {\r\n  x: 0,\r\n  y: 0,\r\n  pointerId: 0,\r\n  pressure: 0,\r\n  tiltX: 0,\r\n  tiltY: 0,\r\n  width: 0,\r\n  height: 0,\r\n  twist: 0,\r\n  pointerType: null\r\n};\r\nconst keys = /* @__PURE__ */ Object.keys(defaultState);\r\nfunction usePointer(options = {}) {\r\n  const {\r\n    target = defaultWindow\r\n  } = options;\r\n  const isInside = ref(false);\r\n  const state = ref(options.initialValue || {});\r\n  Object.assign(state.value, defaultState, state.value);\r\n  const handler = (event) => {\r\n    isInside.value = true;\r\n    if (options.pointerTypes && !options.pointerTypes.includes(event.pointerType))\r\n      return;\r\n    state.value = objectPick(event, keys, false);\r\n  };\r\n  if (target) {\r\n    const listenerOptions = { passive: true };\r\n    useEventListener(target, [\"pointerdown\", \"pointermove\", \"pointerup\"], handler, listenerOptions);\r\n    useEventListener(target, \"pointerleave\", () => isInside.value = false, listenerOptions);\r\n  }\r\n  return {\r\n    ...toRefs(state),\r\n    isInside\r\n  };\r\n}\r\n\r\nfunction usePointerLock(target, options = {}) {\r\n  const { document = defaultDocument } = options;\r\n  const isSupported = useSupported(() => document && \"pointerLockElement\" in document);\r\n  const element = ref();\r\n  const triggerElement = ref();\r\n  let targetElement;\r\n  if (isSupported.value) {\r\n    useEventListener(document, \"pointerlockchange\", () => {\r\n      var _a;\r\n      const currentElement = (_a = document.pointerLockElement) != null ? _a : element.value;\r\n      if (targetElement && currentElement === targetElement) {\r\n        element.value = document.pointerLockElement;\r\n        if (!element.value)\r\n          targetElement = triggerElement.value = null;\r\n      }\r\n    });\r\n    useEventListener(document, \"pointerlockerror\", () => {\r\n      var _a;\r\n      const currentElement = (_a = document.pointerLockElement) != null ? _a : element.value;\r\n      if (targetElement && currentElement === targetElement) {\r\n        const action = document.pointerLockElement ? \"release\" : \"acquire\";\r\n        throw new Error(`Failed to ${action} pointer lock.`);\r\n      }\r\n    });\r\n  }\r\n  async function lock(e) {\r\n    var _a;\r\n    if (!isSupported.value)\r\n      throw new Error(\"Pointer Lock API is not supported by your browser.\");\r\n    triggerElement.value = e instanceof Event ? e.currentTarget : null;\r\n    targetElement = e instanceof Event ? (_a = unrefElement(target)) != null ? _a : triggerElement.value : unrefElement(e);\r\n    if (!targetElement)\r\n      throw new Error(\"Target element undefined.\");\r\n    targetElement.requestPointerLock();\r\n    return await until(element).toBe(targetElement);\r\n  }\r\n  async function unlock() {\r\n    if (!element.value)\r\n      return false;\r\n    document.exitPointerLock();\r\n    await until(element).toBeNull();\r\n    return true;\r\n  }\r\n  return {\r\n    isSupported,\r\n    element,\r\n    triggerElement,\r\n    lock,\r\n    unlock\r\n  };\r\n}\r\n\r\nfunction usePointerSwipe(target, options = {}) {\r\n  const targetRef = toRef(target);\r\n  const {\r\n    threshold = 50,\r\n    onSwipe,\r\n    onSwipeEnd,\r\n    onSwipeStart,\r\n    disableTextSelect = false\r\n  } = options;\r\n  const posStart = reactive({ x: 0, y: 0 });\r\n  const updatePosStart = (x, y) => {\r\n    posStart.x = x;\r\n    posStart.y = y;\r\n  };\r\n  const posEnd = reactive({ x: 0, y: 0 });\r\n  const updatePosEnd = (x, y) => {\r\n    posEnd.x = x;\r\n    posEnd.y = y;\r\n  };\r\n  const distanceX = computed(() => posStart.x - posEnd.x);\r\n  const distanceY = computed(() => posStart.y - posEnd.y);\r\n  const { max, abs } = Math;\r\n  const isThresholdExceeded = computed(() => max(abs(distanceX.value), abs(distanceY.value)) >= threshold);\r\n  const isSwiping = ref(false);\r\n  const isPointerDown = ref(false);\r\n  const direction = computed(() => {\r\n    if (!isThresholdExceeded.value)\r\n      return \"none\";\r\n    if (abs(distanceX.value) > abs(distanceY.value)) {\r\n      return distanceX.value > 0 ? \"left\" : \"right\";\r\n    } else {\r\n      return distanceY.value > 0 ? \"up\" : \"down\";\r\n    }\r\n  });\r\n  const eventIsAllowed = (e) => {\r\n    var _a, _b, _c;\r\n    const isReleasingButton = e.buttons === 0;\r\n    const isPrimaryButton = e.buttons === 1;\r\n    return (_c = (_b = (_a = options.pointerTypes) == null ? void 0 : _a.includes(e.pointerType)) != null ? _b : isReleasingButton || isPrimaryButton) != null ? _c : true;\r\n  };\r\n  const stops = [\r\n    useEventListener(target, \"pointerdown\", (e) => {\r\n      if (!eventIsAllowed(e))\r\n        return;\r\n      isPointerDown.value = true;\r\n      const eventTarget = e.target;\r\n      eventTarget == null ? void 0 : eventTarget.setPointerCapture(e.pointerId);\r\n      const { clientX: x, clientY: y } = e;\r\n      updatePosStart(x, y);\r\n      updatePosEnd(x, y);\r\n      onSwipeStart == null ? void 0 : onSwipeStart(e);\r\n    }),\r\n    useEventListener(target, \"pointermove\", (e) => {\r\n      if (!eventIsAllowed(e))\r\n        return;\r\n      if (!isPointerDown.value)\r\n        return;\r\n      const { clientX: x, clientY: y } = e;\r\n      updatePosEnd(x, y);\r\n      if (!isSwiping.value && isThresholdExceeded.value)\r\n        isSwiping.value = true;\r\n      if (isSwiping.value)\r\n        onSwipe == null ? void 0 : onSwipe(e);\r\n    }),\r\n    useEventListener(target, \"pointerup\", (e) => {\r\n      if (!eventIsAllowed(e))\r\n        return;\r\n      if (isSwiping.value)\r\n        onSwipeEnd == null ? void 0 : onSwipeEnd(e, direction.value);\r\n      isPointerDown.value = false;\r\n      isSwiping.value = false;\r\n    })\r\n  ];\r\n  tryOnMounted(() => {\r\n    var _a, _b, _c, _d, _e, _f, _g, _h;\r\n    (_b = (_a = targetRef.value) == null ? void 0 : _a.style) == null ? void 0 : _b.setProperty(\"touch-action\", \"none\");\r\n    if (disableTextSelect) {\r\n      (_d = (_c = targetRef.value) == null ? void 0 : _c.style) == null ? void 0 : _d.setProperty(\"-webkit-user-select\", \"none\");\r\n      (_f = (_e = targetRef.value) == null ? void 0 : _e.style) == null ? void 0 : _f.setProperty(\"-ms-user-select\", \"none\");\r\n      (_h = (_g = targetRef.value) == null ? void 0 : _g.style) == null ? void 0 : _h.setProperty(\"user-select\", \"none\");\r\n    }\r\n  });\r\n  const stop = () => stops.forEach((s) => s());\r\n  return {\r\n    isSwiping: readonly(isSwiping),\r\n    direction: readonly(direction),\r\n    posStart: readonly(posStart),\r\n    posEnd: readonly(posEnd),\r\n    distanceX,\r\n    distanceY,\r\n    stop\r\n  };\r\n}\r\n\r\nfunction usePreferredColorScheme(options) {\r\n  const isLight = useMediaQuery(\"(prefers-color-scheme: light)\", options);\r\n  const isDark = useMediaQuery(\"(prefers-color-scheme: dark)\", options);\r\n  return computed(() => {\r\n    if (isDark.value)\r\n      return \"dark\";\r\n    if (isLight.value)\r\n      return \"light\";\r\n    return \"no-preference\";\r\n  });\r\n}\r\n\r\nfunction usePreferredContrast(options) {\r\n  const isMore = useMediaQuery(\"(prefers-contrast: more)\", options);\r\n  const isLess = useMediaQuery(\"(prefers-contrast: less)\", options);\r\n  const isCustom = useMediaQuery(\"(prefers-contrast: custom)\", options);\r\n  return computed(() => {\r\n    if (isMore.value)\r\n      return \"more\";\r\n    if (isLess.value)\r\n      return \"less\";\r\n    if (isCustom.value)\r\n      return \"custom\";\r\n    return \"no-preference\";\r\n  });\r\n}\r\n\r\nfunction usePreferredLanguages(options = {}) {\r\n  const { window = defaultWindow } = options;\r\n  if (!window)\r\n    return ref([\"en\"]);\r\n  const navigator = window.navigator;\r\n  const value = ref(navigator.languages);\r\n  useEventListener(window, \"languagechange\", () => {\r\n    value.value = navigator.languages;\r\n  });\r\n  return value;\r\n}\r\n\r\nfunction usePreferredReducedMotion(options) {\r\n  const isReduced = useMediaQuery(\"(prefers-reduced-motion: reduce)\", options);\r\n  return computed(() => {\r\n    if (isReduced.value)\r\n      return \"reduce\";\r\n    return \"no-preference\";\r\n  });\r\n}\r\n\r\nfunction usePrevious(value, initialValue) {\r\n  const previous = shallowRef(initialValue);\r\n  watch(\r\n    toRef(value),\r\n    (_, oldValue) => {\r\n      previous.value = oldValue;\r\n    },\r\n    { flush: \"sync\" }\r\n  );\r\n  return readonly(previous);\r\n}\r\n\r\nconst topVarName = \"--vueuse-safe-area-top\";\r\nconst rightVarName = \"--vueuse-safe-area-right\";\r\nconst bottomVarName = \"--vueuse-safe-area-bottom\";\r\nconst leftVarName = \"--vueuse-safe-area-left\";\r\nfunction useScreenSafeArea() {\r\n  const top = ref(\"\");\r\n  const right = ref(\"\");\r\n  const bottom = ref(\"\");\r\n  const left = ref(\"\");\r\n  if (isClient) {\r\n    const topCssVar = useCssVar(topVarName);\r\n    const rightCssVar = useCssVar(rightVarName);\r\n    const bottomCssVar = useCssVar(bottomVarName);\r\n    const leftCssVar = useCssVar(leftVarName);\r\n    topCssVar.value = \"env(safe-area-inset-top, 0px)\";\r\n    rightCssVar.value = \"env(safe-area-inset-right, 0px)\";\r\n    bottomCssVar.value = \"env(safe-area-inset-bottom, 0px)\";\r\n    leftCssVar.value = \"env(safe-area-inset-left, 0px)\";\r\n    update();\r\n    useEventListener(\"resize\", useDebounceFn(update));\r\n  }\r\n  function update() {\r\n    top.value = getValue(topVarName);\r\n    right.value = getValue(rightVarName);\r\n    bottom.value = getValue(bottomVarName);\r\n    left.value = getValue(leftVarName);\r\n  }\r\n  return {\r\n    top,\r\n    right,\r\n    bottom,\r\n    left,\r\n    update\r\n  };\r\n}\r\nfunction getValue(position) {\r\n  return getComputedStyle(document.documentElement).getPropertyValue(position);\r\n}\r\n\r\nfunction useScriptTag(src, onLoaded = noop, options = {}) {\r\n  const {\r\n    immediate = true,\r\n    manual = false,\r\n    type = \"text/javascript\",\r\n    async = true,\r\n    crossOrigin,\r\n    referrerPolicy,\r\n    noModule,\r\n    defer,\r\n    document = defaultDocument,\r\n    attrs = {}\r\n  } = options;\r\n  const scriptTag = ref(null);\r\n  let _promise = null;\r\n  const loadScript = (waitForScriptLoad) => new Promise((resolve, reject) => {\r\n    const resolveWithElement = (el2) => {\r\n      scriptTag.value = el2;\r\n      resolve(el2);\r\n      return el2;\r\n    };\r\n    if (!document) {\r\n      resolve(false);\r\n      return;\r\n    }\r\n    let shouldAppend = false;\r\n    let el = document.querySelector(`script[src=\"${toValue(src)}\"]`);\r\n    if (!el) {\r\n      el = document.createElement(\"script\");\r\n      el.type = type;\r\n      el.async = async;\r\n      el.src = toValue(src);\r\n      if (defer)\r\n        el.defer = defer;\r\n      if (crossOrigin)\r\n        el.crossOrigin = crossOrigin;\r\n      if (noModule)\r\n        el.noModule = noModule;\r\n      if (referrerPolicy)\r\n        el.referrerPolicy = referrerPolicy;\r\n      Object.entries(attrs).forEach(([name, value]) => el == null ? void 0 : el.setAttribute(name, value));\r\n      shouldAppend = true;\r\n    } else if (el.hasAttribute(\"data-loaded\")) {\r\n      resolveWithElement(el);\r\n    }\r\n    el.addEventListener(\"error\", (event) => reject(event));\r\n    el.addEventListener(\"abort\", (event) => reject(event));\r\n    el.addEventListener(\"load\", () => {\r\n      el.setAttribute(\"data-loaded\", \"true\");\r\n      onLoaded(el);\r\n      resolveWithElement(el);\r\n    });\r\n    if (shouldAppend)\r\n      el = document.head.appendChild(el);\r\n    if (!waitForScriptLoad)\r\n      resolveWithElement(el);\r\n  });\r\n  const load = (waitForScriptLoad = true) => {\r\n    if (!_promise)\r\n      _promise = loadScript(waitForScriptLoad);\r\n    return _promise;\r\n  };\r\n  const unload = () => {\r\n    if (!document)\r\n      return;\r\n    _promise = null;\r\n    if (scriptTag.value)\r\n      scriptTag.value = null;\r\n    const el = document.querySelector(`script[src=\"${toValue(src)}\"]`);\r\n    if (el)\r\n      document.head.removeChild(el);\r\n  };\r\n  if (immediate && !manual)\r\n    tryOnMounted(load);\r\n  if (!manual)\r\n    tryOnUnmounted(unload);\r\n  return { scriptTag, load, unload };\r\n}\r\n\r\nfunction checkOverflowScroll(ele) {\r\n  const style = window.getComputedStyle(ele);\r\n  if (style.overflowX === \"scroll\" || style.overflowY === \"scroll\" || style.overflowX === \"auto\" && ele.clientWidth < ele.scrollWidth || style.overflowY === \"auto\" && ele.clientHeight < ele.scrollHeight) {\r\n    return true;\r\n  } else {\r\n    const parent = ele.parentNode;\r\n    if (!parent || parent.tagName === \"BODY\")\r\n      return false;\r\n    return checkOverflowScroll(parent);\r\n  }\r\n}\r\nfunction preventDefault(rawEvent) {\r\n  const e = rawEvent || window.event;\r\n  const _target = e.target;\r\n  if (checkOverflowScroll(_target))\r\n    return false;\r\n  if (e.touches.length > 1)\r\n    return true;\r\n  if (e.preventDefault)\r\n    e.preventDefault();\r\n  return false;\r\n}\r\nconst elInitialOverflow = /* @__PURE__ */ new WeakMap();\r\nfunction useScrollLock(element, initialState = false) {\r\n  const isLocked = ref(initialState);\r\n  let stopTouchMoveListener = null;\r\n  watch(toRef(element), (el) => {\r\n    const target = resolveElement(toValue(el));\r\n    if (target) {\r\n      const ele = target;\r\n      if (!elInitialOverflow.get(ele))\r\n        elInitialOverflow.set(ele, ele.style.overflow);\r\n      if (isLocked.value)\r\n        ele.style.overflow = \"hidden\";\r\n    }\r\n  }, {\r\n    immediate: true\r\n  });\r\n  const lock = () => {\r\n    const el = resolveElement(toValue(element));\r\n    if (!el || isLocked.value)\r\n      return;\r\n    if (isIOS) {\r\n      stopTouchMoveListener = useEventListener(\r\n        el,\r\n        \"touchmove\",\r\n        (e) => {\r\n          preventDefault(e);\r\n        },\r\n        { passive: false }\r\n      );\r\n    }\r\n    el.style.overflow = \"hidden\";\r\n    isLocked.value = true;\r\n  };\r\n  const unlock = () => {\r\n    var _a;\r\n    const el = resolveElement(toValue(element));\r\n    if (!el || !isLocked.value)\r\n      return;\r\n    isIOS && (stopTouchMoveListener == null ? void 0 : stopTouchMoveListener());\r\n    el.style.overflow = (_a = elInitialOverflow.get(el)) != null ? _a : \"\";\r\n    elInitialOverflow.delete(el);\r\n    isLocked.value = false;\r\n  };\r\n  tryOnScopeDispose(unlock);\r\n  return computed({\r\n    get() {\r\n      return isLocked.value;\r\n    },\r\n    set(v) {\r\n      if (v)\r\n        lock();\r\n      else\r\n        unlock();\r\n    }\r\n  });\r\n}\r\n\r\nfunction useSessionStorage(key, initialValue, options = {}) {\r\n  const { window = defaultWindow } = options;\r\n  return useStorage(key, initialValue, window == null ? void 0 : window.sessionStorage, options);\r\n}\r\n\r\nfunction useShare(shareOptions = {}, options = {}) {\r\n  const { navigator = defaultNavigator } = options;\r\n  const _navigator = navigator;\r\n  const isSupported = useSupported(() => _navigator && \"canShare\" in _navigator);\r\n  const share = async (overrideOptions = {}) => {\r\n    if (isSupported.value) {\r\n      const data = {\r\n        ...toValue(shareOptions),\r\n        ...toValue(overrideOptions)\r\n      };\r\n      let granted = true;\r\n      if (data.files && _navigator.canShare)\r\n        granted = _navigator.canShare({ files: data.files });\r\n      if (granted)\r\n        return _navigator.share(data);\r\n    }\r\n  };\r\n  return {\r\n    isSupported,\r\n    share\r\n  };\r\n}\r\n\r\nconst defaultSortFn = (source, compareFn) => source.sort(compareFn);\r\nconst defaultCompare = (a, b) => a - b;\r\nfunction useSorted(...args) {\r\n  var _a, _b, _c, _d;\r\n  const [source] = args;\r\n  let compareFn = defaultCompare;\r\n  let options = {};\r\n  if (args.length === 2) {\r\n    if (typeof args[1] === \"object\") {\r\n      options = args[1];\r\n      compareFn = (_a = options.compareFn) != null ? _a : defaultCompare;\r\n    } else {\r\n      compareFn = (_b = args[1]) != null ? _b : defaultCompare;\r\n    }\r\n  } else if (args.length > 2) {\r\n    compareFn = (_c = args[1]) != null ? _c : defaultCompare;\r\n    options = (_d = args[2]) != null ? _d : {};\r\n  }\r\n  const {\r\n    dirty = false,\r\n    sortFn = defaultSortFn\r\n  } = options;\r\n  if (!dirty)\r\n    return computed(() => sortFn([...toValue(source)], compareFn));\r\n  watchEffect(() => {\r\n    const result = sortFn(toValue(source), compareFn);\r\n    if (isRef(source))\r\n      source.value = result;\r\n    else\r\n      source.splice(0, source.length, ...result);\r\n  });\r\n  return source;\r\n}\r\n\r\nfunction useSpeechRecognition(options = {}) {\r\n  const {\r\n    interimResults = true,\r\n    continuous = true,\r\n    window = defaultWindow\r\n  } = options;\r\n  const lang = toRef(options.lang || \"en-US\");\r\n  const isListening = ref(false);\r\n  const isFinal = ref(false);\r\n  const result = ref(\"\");\r\n  const error = shallowRef(void 0);\r\n  const toggle = (value = !isListening.value) => {\r\n    isListening.value = value;\r\n  };\r\n  const start = () => {\r\n    isListening.value = true;\r\n  };\r\n  const stop = () => {\r\n    isListening.value = false;\r\n  };\r\n  const SpeechRecognition = window && (window.SpeechRecognition || window.webkitSpeechRecognition);\r\n  const isSupported = useSupported(() => SpeechRecognition);\r\n  let recognition;\r\n  if (isSupported.value) {\r\n    recognition = new SpeechRecognition();\r\n    recognition.continuous = continuous;\r\n    recognition.interimResults = interimResults;\r\n    recognition.lang = toValue(lang);\r\n    recognition.onstart = () => {\r\n      isFinal.value = false;\r\n    };\r\n    watch(lang, (lang2) => {\r\n      if (recognition && !isListening.value)\r\n        recognition.lang = lang2;\r\n    });\r\n    recognition.onresult = (event) => {\r\n      const transcript = Array.from(event.results).map((result2) => {\r\n        isFinal.value = result2.isFinal;\r\n        return result2[0];\r\n      }).map((result2) => result2.transcript).join(\"\");\r\n      result.value = transcript;\r\n      error.value = void 0;\r\n    };\r\n    recognition.onerror = (event) => {\r\n      error.value = event;\r\n    };\r\n    recognition.onend = () => {\r\n      isListening.value = false;\r\n      recognition.lang = toValue(lang);\r\n    };\r\n    watch(isListening, () => {\r\n      if (isListening.value)\r\n        recognition.start();\r\n      else\r\n        recognition.stop();\r\n    });\r\n  }\r\n  tryOnScopeDispose(() => {\r\n    isListening.value = false;\r\n  });\r\n  return {\r\n    isSupported,\r\n    isListening,\r\n    isFinal,\r\n    recognition,\r\n    result,\r\n    error,\r\n    toggle,\r\n    start,\r\n    stop\r\n  };\r\n}\r\n\r\nfunction useSpeechSynthesis(text, options = {}) {\r\n  const {\r\n    pitch = 1,\r\n    rate = 1,\r\n    volume = 1,\r\n    window = defaultWindow\r\n  } = options;\r\n  const synth = window && window.speechSynthesis;\r\n  const isSupported = useSupported(() => synth);\r\n  const isPlaying = ref(false);\r\n  const status = ref(\"init\");\r\n  const spokenText = toRef(text || \"\");\r\n  const lang = toRef(options.lang || \"en-US\");\r\n  const error = shallowRef(void 0);\r\n  const toggle = (value = !isPlaying.value) => {\r\n    isPlaying.value = value;\r\n  };\r\n  const bindEventsForUtterance = (utterance2) => {\r\n    utterance2.lang = toValue(lang);\r\n    utterance2.voice = toValue(options.voice) || null;\r\n    utterance2.pitch = toValue(pitch);\r\n    utterance2.rate = toValue(rate);\r\n    utterance2.volume = volume;\r\n    utterance2.onstart = () => {\r\n      isPlaying.value = true;\r\n      status.value = \"play\";\r\n    };\r\n    utterance2.onpause = () => {\r\n      isPlaying.value = false;\r\n      status.value = \"pause\";\r\n    };\r\n    utterance2.onresume = () => {\r\n      isPlaying.value = true;\r\n      status.value = \"play\";\r\n    };\r\n    utterance2.onend = () => {\r\n      isPlaying.value = false;\r\n      status.value = \"end\";\r\n    };\r\n    utterance2.onerror = (event) => {\r\n      error.value = event;\r\n    };\r\n  };\r\n  const utterance = computed(() => {\r\n    isPlaying.value = false;\r\n    status.value = \"init\";\r\n    const newUtterance = new SpeechSynthesisUtterance(spokenText.value);\r\n    bindEventsForUtterance(newUtterance);\r\n    return newUtterance;\r\n  });\r\n  const speak = () => {\r\n    synth.cancel();\r\n    utterance && synth.speak(utterance.value);\r\n  };\r\n  const stop = () => {\r\n    synth.cancel();\r\n    isPlaying.value = false;\r\n  };\r\n  if (isSupported.value) {\r\n    bindEventsForUtterance(utterance.value);\r\n    watch(lang, (lang2) => {\r\n      if (utterance.value && !isPlaying.value)\r\n        utterance.value.lang = lang2;\r\n    });\r\n    if (options.voice) {\r\n      watch(options.voice, () => {\r\n        synth.cancel();\r\n      });\r\n    }\r\n    watch(isPlaying, () => {\r\n      if (isPlaying.value)\r\n        synth.resume();\r\n      else\r\n        synth.pause();\r\n    });\r\n  }\r\n  tryOnScopeDispose(() => {\r\n    isPlaying.value = false;\r\n  });\r\n  return {\r\n    isSupported,\r\n    isPlaying,\r\n    status,\r\n    utterance,\r\n    error,\r\n    stop,\r\n    toggle,\r\n    speak\r\n  };\r\n}\r\n\r\nfunction useStepper(steps, initialStep) {\r\n  const stepsRef = ref(steps);\r\n  const stepNames = computed(() => Array.isArray(stepsRef.value) ? stepsRef.value : Object.keys(stepsRef.value));\r\n  const index = ref(stepNames.value.indexOf(initialStep != null ? initialStep : stepNames.value[0]));\r\n  const current = computed(() => at(index.value));\r\n  const isFirst = computed(() => index.value === 0);\r\n  const isLast = computed(() => index.value === stepNames.value.length - 1);\r\n  const next = computed(() => stepNames.value[index.value + 1]);\r\n  const previous = computed(() => stepNames.value[index.value - 1]);\r\n  function at(index2) {\r\n    if (Array.isArray(stepsRef.value))\r\n      return stepsRef.value[index2];\r\n    return stepsRef.value[stepNames.value[index2]];\r\n  }\r\n  function get(step) {\r\n    if (!stepNames.value.includes(step))\r\n      return;\r\n    return at(stepNames.value.indexOf(step));\r\n  }\r\n  function goTo(step) {\r\n    if (stepNames.value.includes(step))\r\n      index.value = stepNames.value.indexOf(step);\r\n  }\r\n  function goToNext() {\r\n    if (isLast.value)\r\n      return;\r\n    index.value++;\r\n  }\r\n  function goToPrevious() {\r\n    if (isFirst.value)\r\n      return;\r\n    index.value--;\r\n  }\r\n  function goBackTo(step) {\r\n    if (isAfter(step))\r\n      goTo(step);\r\n  }\r\n  function isNext(step) {\r\n    return stepNames.value.indexOf(step) === index.value + 1;\r\n  }\r\n  function isPrevious(step) {\r\n    return stepNames.value.indexOf(step) === index.value - 1;\r\n  }\r\n  function isCurrent(step) {\r\n    return stepNames.value.indexOf(step) === index.value;\r\n  }\r\n  function isBefore(step) {\r\n    return index.value < stepNames.value.indexOf(step);\r\n  }\r\n  function isAfter(step) {\r\n    return index.value > stepNames.value.indexOf(step);\r\n  }\r\n  return {\r\n    steps: stepsRef,\r\n    stepNames,\r\n    index,\r\n    current,\r\n    next,\r\n    previous,\r\n    isFirst,\r\n    isLast,\r\n    at,\r\n    get,\r\n    goTo,\r\n    goToNext,\r\n    goToPrevious,\r\n    goBackTo,\r\n    isNext,\r\n    isPrevious,\r\n    isCurrent,\r\n    isBefore,\r\n    isAfter\r\n  };\r\n}\r\n\r\nfunction useStorageAsync(key, initialValue, storage, options = {}) {\r\n  var _a;\r\n  const {\r\n    flush = \"pre\",\r\n    deep = true,\r\n    listenToStorageChanges = true,\r\n    writeDefaults = true,\r\n    mergeDefaults = false,\r\n    shallow,\r\n    window = defaultWindow,\r\n    eventFilter,\r\n    onError = (e) => {\r\n      console.error(e);\r\n    }\r\n  } = options;\r\n  const rawInit = toValue(initialValue);\r\n  const type = guessSerializerType(rawInit);\r\n  const data = (shallow ? shallowRef : ref)(initialValue);\r\n  const serializer = (_a = options.serializer) != null ? _a : StorageSerializers[type];\r\n  if (!storage) {\r\n    try {\r\n      storage = getSSRHandler(\"getDefaultStorageAsync\", () => {\r\n        var _a2;\r\n        return (_a2 = defaultWindow) == null ? void 0 : _a2.localStorage;\r\n      })();\r\n    } catch (e) {\r\n      onError(e);\r\n    }\r\n  }\r\n  async function read(event) {\r\n    if (!storage || event && event.key !== key)\r\n      return;\r\n    try {\r\n      const rawValue = event ? event.newValue : await storage.getItem(key);\r\n      if (rawValue == null) {\r\n        data.value = rawInit;\r\n        if (writeDefaults && rawInit !== null)\r\n          await storage.setItem(key, await serializer.write(rawInit));\r\n      } else if (mergeDefaults) {\r\n        const value = await serializer.read(rawValue);\r\n        if (typeof mergeDefaults === \"function\")\r\n          data.value = mergeDefaults(value, rawInit);\r\n        else if (type === \"object\" && !Array.isArray(value))\r\n          data.value = { ...rawInit, ...value };\r\n        else\r\n          data.value = value;\r\n      } else {\r\n        data.value = await serializer.read(rawValue);\r\n      }\r\n    } catch (e) {\r\n      onError(e);\r\n    }\r\n  }\r\n  read();\r\n  if (window && listenToStorageChanges)\r\n    useEventListener(window, \"storage\", (e) => Promise.resolve().then(() => read(e)));\r\n  if (storage) {\r\n    watchWithFilter(\r\n      data,\r\n      async () => {\r\n        try {\r\n          if (data.value == null)\r\n            await storage.removeItem(key);\r\n          else\r\n            await storage.setItem(key, await serializer.write(data.value));\r\n        } catch (e) {\r\n          onError(e);\r\n        }\r\n      },\r\n      {\r\n        flush,\r\n        deep,\r\n        eventFilter\r\n      }\r\n    );\r\n  }\r\n  return data;\r\n}\r\n\r\nlet _id = 0;\r\nfunction useStyleTag(css, options = {}) {\r\n  const isLoaded = ref(false);\r\n  const {\r\n    document = defaultDocument,\r\n    immediate = true,\r\n    manual = false,\r\n    id = `vueuse_styletag_${++_id}`\r\n  } = options;\r\n  const cssRef = ref(css);\r\n  let stop = () => {\r\n  };\r\n  const load = () => {\r\n    if (!document)\r\n      return;\r\n    const el = document.getElementById(id) || document.createElement(\"style\");\r\n    if (!el.isConnected) {\r\n      el.id = id;\r\n      if (options.media)\r\n        el.media = options.media;\r\n      document.head.appendChild(el);\r\n    }\r\n    if (isLoaded.value)\r\n      return;\r\n    stop = watch(\r\n      cssRef,\r\n      (value) => {\r\n        el.textContent = value;\r\n      },\r\n      { immediate: true }\r\n    );\r\n    isLoaded.value = true;\r\n  };\r\n  const unload = () => {\r\n    if (!document || !isLoaded.value)\r\n      return;\r\n    stop();\r\n    document.head.removeChild(document.getElementById(id));\r\n    isLoaded.value = false;\r\n  };\r\n  if (immediate && !manual)\r\n    tryOnMounted(load);\r\n  if (!manual)\r\n    tryOnScopeDispose(unload);\r\n  return {\r\n    id,\r\n    css: cssRef,\r\n    unload,\r\n    load,\r\n    isLoaded: readonly(isLoaded)\r\n  };\r\n}\r\n\r\nfunction useSwipe(target, options = {}) {\r\n  const {\r\n    threshold = 50,\r\n    onSwipe,\r\n    onSwipeEnd,\r\n    onSwipeStart,\r\n    passive = true,\r\n    window = defaultWindow\r\n  } = options;\r\n  const coordsStart = reactive({ x: 0, y: 0 });\r\n  const coordsEnd = reactive({ x: 0, y: 0 });\r\n  const diffX = computed(() => coordsStart.x - coordsEnd.x);\r\n  const diffY = computed(() => coordsStart.y - coordsEnd.y);\r\n  const { max, abs } = Math;\r\n  const isThresholdExceeded = computed(() => max(abs(diffX.value), abs(diffY.value)) >= threshold);\r\n  const isSwiping = ref(false);\r\n  const direction = computed(() => {\r\n    if (!isThresholdExceeded.value)\r\n      return \"none\";\r\n    if (abs(diffX.value) > abs(diffY.value)) {\r\n      return diffX.value > 0 ? \"left\" : \"right\";\r\n    } else {\r\n      return diffY.value > 0 ? \"up\" : \"down\";\r\n    }\r\n  });\r\n  const getTouchEventCoords = (e) => [e.touches[0].clientX, e.touches[0].clientY];\r\n  const updateCoordsStart = (x, y) => {\r\n    coordsStart.x = x;\r\n    coordsStart.y = y;\r\n  };\r\n  const updateCoordsEnd = (x, y) => {\r\n    coordsEnd.x = x;\r\n    coordsEnd.y = y;\r\n  };\r\n  let listenerOptions;\r\n  const isPassiveEventSupported = checkPassiveEventSupport(window == null ? void 0 : window.document);\r\n  if (!passive)\r\n    listenerOptions = isPassiveEventSupported ? { passive: false, capture: true } : { capture: true };\r\n  else\r\n    listenerOptions = isPassiveEventSupported ? { passive: true } : { capture: false };\r\n  const onTouchEnd = (e) => {\r\n    if (isSwiping.value)\r\n      onSwipeEnd == null ? void 0 : onSwipeEnd(e, direction.value);\r\n    isSwiping.value = false;\r\n  };\r\n  const stops = [\r\n    useEventListener(target, \"touchstart\", (e) => {\r\n      if (e.touches.length !== 1)\r\n        return;\r\n      if (listenerOptions.capture && !listenerOptions.passive)\r\n        e.preventDefault();\r\n      const [x, y] = getTouchEventCoords(e);\r\n      updateCoordsStart(x, y);\r\n      updateCoordsEnd(x, y);\r\n      onSwipeStart == null ? void 0 : onSwipeStart(e);\r\n    }, listenerOptions),\r\n    useEventListener(target, \"touchmove\", (e) => {\r\n      if (e.touches.length !== 1)\r\n        return;\r\n      const [x, y] = getTouchEventCoords(e);\r\n      updateCoordsEnd(x, y);\r\n      if (!isSwiping.value && isThresholdExceeded.value)\r\n        isSwiping.value = true;\r\n      if (isSwiping.value)\r\n        onSwipe == null ? void 0 : onSwipe(e);\r\n    }, listenerOptions),\r\n    useEventListener(target, [\"touchend\", \"touchcancel\"], onTouchEnd, listenerOptions)\r\n  ];\r\n  const stop = () => stops.forEach((s) => s());\r\n  return {\r\n    isPassiveEventSupported,\r\n    isSwiping,\r\n    direction,\r\n    coordsStart,\r\n    coordsEnd,\r\n    lengthX: diffX,\r\n    lengthY: diffY,\r\n    stop\r\n  };\r\n}\r\nfunction checkPassiveEventSupport(document) {\r\n  if (!document)\r\n    return false;\r\n  let supportsPassive = false;\r\n  const optionsBlock = {\r\n    get passive() {\r\n      supportsPassive = true;\r\n      return false;\r\n    }\r\n  };\r\n  document.addEventListener(\"x\", noop, optionsBlock);\r\n  document.removeEventListener(\"x\", noop);\r\n  return supportsPassive;\r\n}\r\n\r\nfunction useTemplateRefsList() {\r\n  const refs = ref([]);\r\n  refs.value.set = (el) => {\r\n    if (el)\r\n      refs.value.push(el);\r\n  };\r\n  onBeforeUpdate(() => {\r\n    refs.value.length = 0;\r\n  });\r\n  return refs;\r\n}\r\n\r\nfunction useTextDirection(options = {}) {\r\n  const {\r\n    document = defaultDocument,\r\n    selector = \"html\",\r\n    observe = false,\r\n    initialValue = \"ltr\"\r\n  } = options;\r\n  function getValue() {\r\n    var _a, _b;\r\n    return (_b = (_a = document == null ? void 0 : document.querySelector(selector)) == null ? void 0 : _a.getAttribute(\"dir\")) != null ? _b : initialValue;\r\n  }\r\n  const dir = ref(getValue());\r\n  tryOnMounted(() => dir.value = getValue());\r\n  if (observe && document) {\r\n    useMutationObserver(\r\n      document.querySelector(selector),\r\n      () => dir.value = getValue(),\r\n      { attributes: true }\r\n    );\r\n  }\r\n  return computed({\r\n    get() {\r\n      return dir.value;\r\n    },\r\n    set(v) {\r\n      var _a, _b;\r\n      dir.value = v;\r\n      if (!document)\r\n        return;\r\n      if (dir.value)\r\n        (_a = document.querySelector(selector)) == null ? void 0 : _a.setAttribute(\"dir\", dir.value);\r\n      else\r\n        (_b = document.querySelector(selector)) == null ? void 0 : _b.removeAttribute(\"dir\");\r\n    }\r\n  });\r\n}\r\n\r\nfunction getRangesFromSelection(selection) {\r\n  var _a;\r\n  const rangeCount = (_a = selection.rangeCount) != null ? _a : 0;\r\n  return Array.from({ length: rangeCount }, (_, i) => selection.getRangeAt(i));\r\n}\r\nfunction useTextSelection(options = {}) {\r\n  const {\r\n    window = defaultWindow\r\n  } = options;\r\n  const selection = ref(null);\r\n  const text = computed(() => {\r\n    var _a, _b;\r\n    return (_b = (_a = selection.value) == null ? void 0 : _a.toString()) != null ? _b : \"\";\r\n  });\r\n  const ranges = computed(() => selection.value ? getRangesFromSelection(selection.value) : []);\r\n  const rects = computed(() => ranges.value.map((range) => range.getBoundingClientRect()));\r\n  function onSelectionChange() {\r\n    selection.value = null;\r\n    if (window)\r\n      selection.value = window.getSelection();\r\n  }\r\n  if (window)\r\n    useEventListener(window.document, \"selectionchange\", onSelectionChange);\r\n  return {\r\n    text,\r\n    rects,\r\n    ranges,\r\n    selection\r\n  };\r\n}\r\n\r\nfunction useTextareaAutosize(options) {\r\n  var _a;\r\n  const textarea = ref(options == null ? void 0 : options.element);\r\n  const input = ref(options == null ? void 0 : options.input);\r\n  const styleProp = (_a = options == null ? void 0 : options.styleProp) != null ? _a : \"height\";\r\n  const textareaScrollHeight = ref(1);\r\n  function triggerResize() {\r\n    var _a2, _b;\r\n    if (!textarea.value)\r\n      return;\r\n    let height = \"\";\r\n    textarea.value.style[styleProp] = \"1px\";\r\n    textareaScrollHeight.value = (_a2 = textarea.value) == null ? void 0 : _a2.scrollHeight;\r\n    if (options == null ? void 0 : options.styleTarget)\r\n      toValue(options.styleTarget).style[styleProp] = `${textareaScrollHeight.value}px`;\r\n    else\r\n      height = `${textareaScrollHeight.value}px`;\r\n    textarea.value.style[styleProp] = height;\r\n    (_b = options == null ? void 0 : options.onResize) == null ? void 0 : _b.call(options);\r\n  }\r\n  watch([input, textarea], () => nextTick(triggerResize), { immediate: true });\r\n  useResizeObserver(textarea, () => triggerResize());\r\n  if (options == null ? void 0 : options.watch)\r\n    watch(options.watch, triggerResize, { immediate: true, deep: true });\r\n  return {\r\n    textarea,\r\n    input,\r\n    triggerResize\r\n  };\r\n}\r\n\r\nfunction useThrottledRefHistory(source, options = {}) {\r\n  const { throttle = 200, trailing = true } = options;\r\n  const filter = throttleFilter(throttle, trailing);\r\n  const history = useRefHistory(source, { ...options, eventFilter: filter });\r\n  return {\r\n    ...history\r\n  };\r\n}\r\n\r\nconst DEFAULT_UNITS = [\r\n  { max: 6e4, value: 1e3, name: \"second\" },\r\n  { max: 276e4, value: 6e4, name: \"minute\" },\r\n  { max: 72e6, value: 36e5, name: \"hour\" },\r\n  { max: 5184e5, value: 864e5, name: \"day\" },\r\n  { max: 24192e5, value: 6048e5, name: \"week\" },\r\n  { max: 28512e6, value: 2592e6, name: \"month\" },\r\n  { max: Number.POSITIVE_INFINITY, value: 31536e6, name: \"year\" }\r\n];\r\nconst DEFAULT_MESSAGES = {\r\n  justNow: \"just now\",\r\n  past: (n) => n.match(/\\d/) ? `${n} ago` : n,\r\n  future: (n) => n.match(/\\d/) ? `in ${n}` : n,\r\n  month: (n, past) => n === 1 ? past ? \"last month\" : \"next month\" : `${n} month${n > 1 ? \"s\" : \"\"}`,\r\n  year: (n, past) => n === 1 ? past ? \"last year\" : \"next year\" : `${n} year${n > 1 ? \"s\" : \"\"}`,\r\n  day: (n, past) => n === 1 ? past ? \"yesterday\" : \"tomorrow\" : `${n} day${n > 1 ? \"s\" : \"\"}`,\r\n  week: (n, past) => n === 1 ? past ? \"last week\" : \"next week\" : `${n} week${n > 1 ? \"s\" : \"\"}`,\r\n  hour: (n) => `${n} hour${n > 1 ? \"s\" : \"\"}`,\r\n  minute: (n) => `${n} minute${n > 1 ? \"s\" : \"\"}`,\r\n  second: (n) => `${n} second${n > 1 ? \"s\" : \"\"}`,\r\n  invalid: \"\"\r\n};\r\nfunction DEFAULT_FORMATTER(date) {\r\n  return date.toISOString().slice(0, 10);\r\n}\r\nfunction useTimeAgo(time, options = {}) {\r\n  const {\r\n    controls: exposeControls = false,\r\n    updateInterval = 3e4\r\n  } = options;\r\n  const { now, ...controls } = useNow({ interval: updateInterval, controls: true });\r\n  const timeAgo = computed(() => formatTimeAgo(new Date(toValue(time)), options, toValue(now)));\r\n  if (exposeControls) {\r\n    return {\r\n      timeAgo,\r\n      ...controls\r\n    };\r\n  } else {\r\n    return timeAgo;\r\n  }\r\n}\r\nfunction formatTimeAgo(from, options = {}, now = Date.now()) {\r\n  var _a;\r\n  const {\r\n    max,\r\n    messages = DEFAULT_MESSAGES,\r\n    fullDateFormatter = DEFAULT_FORMATTER,\r\n    units = DEFAULT_UNITS,\r\n    showSecond = false,\r\n    rounding = \"round\"\r\n  } = options;\r\n  const roundFn = typeof rounding === \"number\" ? (n) => +n.toFixed(rounding) : Math[rounding];\r\n  const diff = +now - +from;\r\n  const absDiff = Math.abs(diff);\r\n  function getValue(diff2, unit) {\r\n    return roundFn(Math.abs(diff2) / unit.value);\r\n  }\r\n  function format(diff2, unit) {\r\n    const val = getValue(diff2, unit);\r\n    const past = diff2 > 0;\r\n    const str = applyFormat(unit.name, val, past);\r\n    return applyFormat(past ? \"past\" : \"future\", str, past);\r\n  }\r\n  function applyFormat(name, val, isPast) {\r\n    const formatter = messages[name];\r\n    if (typeof formatter === \"function\")\r\n      return formatter(val, isPast);\r\n    return formatter.replace(\"{0}\", val.toString());\r\n  }\r\n  if (absDiff < 6e4 && !showSecond)\r\n    return messages.justNow;\r\n  if (typeof max === \"number\" && absDiff > max)\r\n    return fullDateFormatter(new Date(from));\r\n  if (typeof max === \"string\") {\r\n    const unitMax = (_a = units.find((i) => i.name === max)) == null ? void 0 : _a.max;\r\n    if (unitMax && absDiff > unitMax)\r\n      return fullDateFormatter(new Date(from));\r\n  }\r\n  for (const [idx, unit] of units.entries()) {\r\n    const val = getValue(diff, unit);\r\n    if (val <= 0 && units[idx - 1])\r\n      return format(diff, units[idx - 1]);\r\n    if (absDiff < unit.max)\r\n      return format(diff, unit);\r\n  }\r\n  return messages.invalid;\r\n}\r\n\r\nfunction useTimeoutPoll(fn, interval, timeoutPollOptions) {\r\n  const { start } = useTimeoutFn(loop, interval, { immediate: false });\r\n  const isActive = ref(false);\r\n  async function loop() {\r\n    if (!isActive.value)\r\n      return;\r\n    await fn();\r\n    start();\r\n  }\r\n  function resume() {\r\n    if (!isActive.value) {\r\n      isActive.value = true;\r\n      loop();\r\n    }\r\n  }\r\n  function pause() {\r\n    isActive.value = false;\r\n  }\r\n  if (timeoutPollOptions == null ? void 0 : timeoutPollOptions.immediate)\r\n    resume();\r\n  tryOnScopeDispose(pause);\r\n  return {\r\n    isActive,\r\n    pause,\r\n    resume\r\n  };\r\n}\r\n\r\nfunction useTimestamp(options = {}) {\r\n  const {\r\n    controls: exposeControls = false,\r\n    offset = 0,\r\n    immediate = true,\r\n    interval = \"requestAnimationFrame\",\r\n    callback\r\n  } = options;\r\n  const ts = ref(timestamp() + offset);\r\n  const update = () => ts.value = timestamp() + offset;\r\n  const cb = callback ? () => {\r\n    update();\r\n    callback(ts.value);\r\n  } : update;\r\n  const controls = interval === \"requestAnimationFrame\" ? useRafFn(cb, { immediate }) : useIntervalFn(cb, interval, { immediate });\r\n  if (exposeControls) {\r\n    return {\r\n      timestamp: ts,\r\n      ...controls\r\n    };\r\n  } else {\r\n    return ts;\r\n  }\r\n}\r\n\r\nfunction useTitle(newTitle = null, options = {}) {\r\n  var _a, _b, _c;\r\n  const {\r\n    document = defaultDocument,\r\n    restoreOnUnmount = (t) => t\r\n  } = options;\r\n  const originalTitle = (_a = document == null ? void 0 : document.title) != null ? _a : \"\";\r\n  const title = toRef((_b = newTitle != null ? newTitle : document == null ? void 0 : document.title) != null ? _b : null);\r\n  const isReadonly = newTitle && typeof newTitle === \"function\";\r\n  function format(t) {\r\n    if (!(\"titleTemplate\" in options))\r\n      return t;\r\n    const template = options.titleTemplate || \"%s\";\r\n    return typeof template === \"function\" ? template(t) : toValue(template).replace(/%s/g, t);\r\n  }\r\n  watch(\r\n    title,\r\n    (t, o) => {\r\n      if (t !== o && document)\r\n        document.title = format(typeof t === \"string\" ? t : \"\");\r\n    },\r\n    { immediate: true }\r\n  );\r\n  if (options.observe && !options.titleTemplate && document && !isReadonly) {\r\n    useMutationObserver(\r\n      (_c = document.head) == null ? void 0 : _c.querySelector(\"title\"),\r\n      () => {\r\n        if (document && document.title !== title.value)\r\n          title.value = format(document.title);\r\n      },\r\n      { childList: true }\r\n    );\r\n  }\r\n  tryOnBeforeUnmount(() => {\r\n    if (restoreOnUnmount) {\r\n      const restoredTitle = restoreOnUnmount(originalTitle, title.value || \"\");\r\n      if (restoredTitle != null && document)\r\n        document.title = restoredTitle;\r\n    }\r\n  });\r\n  return title;\r\n}\r\n\r\nconst _TransitionPresets = {\r\n  easeInSine: [0.12, 0, 0.39, 0],\r\n  easeOutSine: [0.61, 1, 0.88, 1],\r\n  easeInOutSine: [0.37, 0, 0.63, 1],\r\n  easeInQuad: [0.11, 0, 0.5, 0],\r\n  easeOutQuad: [0.5, 1, 0.89, 1],\r\n  easeInOutQuad: [0.45, 0, 0.55, 1],\r\n  easeInCubic: [0.32, 0, 0.67, 0],\r\n  easeOutCubic: [0.33, 1, 0.68, 1],\r\n  easeInOutCubic: [0.65, 0, 0.35, 1],\r\n  easeInQuart: [0.5, 0, 0.75, 0],\r\n  easeOutQuart: [0.25, 1, 0.5, 1],\r\n  easeInOutQuart: [0.76, 0, 0.24, 1],\r\n  easeInQuint: [0.64, 0, 0.78, 0],\r\n  easeOutQuint: [0.22, 1, 0.36, 1],\r\n  easeInOutQuint: [0.83, 0, 0.17, 1],\r\n  easeInExpo: [0.7, 0, 0.84, 0],\r\n  easeOutExpo: [0.16, 1, 0.3, 1],\r\n  easeInOutExpo: [0.87, 0, 0.13, 1],\r\n  easeInCirc: [0.55, 0, 1, 0.45],\r\n  easeOutCirc: [0, 0.55, 0.45, 1],\r\n  easeInOutCirc: [0.85, 0, 0.15, 1],\r\n  easeInBack: [0.36, 0, 0.66, -0.56],\r\n  easeOutBack: [0.34, 1.56, 0.64, 1],\r\n  easeInOutBack: [0.68, -0.6, 0.32, 1.6]\r\n};\r\nconst TransitionPresets = /* @__PURE__ */ Object.assign({}, { linear: identity }, _TransitionPresets);\r\nfunction createEasingFunction([p0, p1, p2, p3]) {\r\n  const a = (a1, a2) => 1 - 3 * a2 + 3 * a1;\r\n  const b = (a1, a2) => 3 * a2 - 6 * a1;\r\n  const c = (a1) => 3 * a1;\r\n  const calcBezier = (t, a1, a2) => ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\r\n  const getSlope = (t, a1, a2) => 3 * a(a1, a2) * t * t + 2 * b(a1, a2) * t + c(a1);\r\n  const getTforX = (x) => {\r\n    let aGuessT = x;\r\n    for (let i = 0; i < 4; ++i) {\r\n      const currentSlope = getSlope(aGuessT, p0, p2);\r\n      if (currentSlope === 0)\r\n        return aGuessT;\r\n      const currentX = calcBezier(aGuessT, p0, p2) - x;\r\n      aGuessT -= currentX / currentSlope;\r\n    }\r\n    return aGuessT;\r\n  };\r\n  return (x) => p0 === p1 && p2 === p3 ? x : calcBezier(getTforX(x), p1, p3);\r\n}\r\nfunction lerp(a, b, alpha) {\r\n  return a + alpha * (b - a);\r\n}\r\nfunction toVec(t) {\r\n  return (typeof t === \"number\" ? [t] : t) || [];\r\n}\r\nfunction executeTransition(source, from, to, options = {}) {\r\n  var _a, _b;\r\n  const fromVal = toValue(from);\r\n  const toVal = toValue(to);\r\n  const v1 = toVec(fromVal);\r\n  const v2 = toVec(toVal);\r\n  const duration = (_a = toValue(options.duration)) != null ? _a : 1e3;\r\n  const startedAt = Date.now();\r\n  const endAt = Date.now() + duration;\r\n  const trans = typeof options.transition === \"function\" ? options.transition : (_b = toValue(options.transition)) != null ? _b : identity;\r\n  const ease = typeof trans === \"function\" ? trans : createEasingFunction(trans);\r\n  return new Promise((resolve) => {\r\n    source.value = fromVal;\r\n    const tick = () => {\r\n      var _a2;\r\n      if ((_a2 = options.abort) == null ? void 0 : _a2.call(options)) {\r\n        resolve();\r\n        return;\r\n      }\r\n      const now = Date.now();\r\n      const alpha = ease((now - startedAt) / duration);\r\n      const arr = toVec(source.value).map((n, i) => lerp(v1[i], v2[i], alpha));\r\n      if (Array.isArray(source.value))\r\n        source.value = arr.map((n, i) => {\r\n          var _a3, _b2;\r\n          return lerp((_a3 = v1[i]) != null ? _a3 : 0, (_b2 = v2[i]) != null ? _b2 : 0, alpha);\r\n        });\r\n      else if (typeof source.value === \"number\")\r\n        source.value = arr[0];\r\n      if (now < endAt) {\r\n        requestAnimationFrame(tick);\r\n      } else {\r\n        source.value = toVal;\r\n        resolve();\r\n      }\r\n    };\r\n    tick();\r\n  });\r\n}\r\nfunction useTransition(source, options = {}) {\r\n  let currentId = 0;\r\n  const sourceVal = () => {\r\n    const v = toValue(source);\r\n    return typeof v === \"number\" ? v : v.map(toValue);\r\n  };\r\n  const outputRef = ref(sourceVal());\r\n  watch(sourceVal, async (to) => {\r\n    var _a, _b;\r\n    if (toValue(options.disabled))\r\n      return;\r\n    const id = ++currentId;\r\n    if (options.delay)\r\n      await promiseTimeout(toValue(options.delay));\r\n    if (id !== currentId)\r\n      return;\r\n    const toVal = Array.isArray(to) ? to.map(toValue) : toValue(to);\r\n    (_a = options.onStarted) == null ? void 0 : _a.call(options);\r\n    await executeTransition(outputRef, outputRef.value, toVal, {\r\n      ...options,\r\n      abort: () => {\r\n        var _a2;\r\n        return id !== currentId || ((_a2 = options.abort) == null ? void 0 : _a2.call(options));\r\n      }\r\n    });\r\n    (_b = options.onFinished) == null ? void 0 : _b.call(options);\r\n  }, { deep: true });\r\n  watch(() => toValue(options.disabled), (disabled) => {\r\n    if (disabled) {\r\n      currentId++;\r\n      outputRef.value = sourceVal();\r\n    }\r\n  });\r\n  tryOnScopeDispose(() => {\r\n    currentId++;\r\n  });\r\n  return computed(() => toValue(options.disabled) ? sourceVal() : outputRef.value);\r\n}\r\n\r\nfunction useUrlSearchParams(mode = \"history\", options = {}) {\r\n  const {\r\n    initialValue = {},\r\n    removeNullishValues = true,\r\n    removeFalsyValues = false,\r\n    write: enableWrite = true,\r\n    window = defaultWindow\r\n  } = options;\r\n  if (!window)\r\n    return reactive(initialValue);\r\n  const state = reactive({});\r\n  function getRawParams() {\r\n    if (mode === \"history\") {\r\n      return window.location.search || \"\";\r\n    } else if (mode === \"hash\") {\r\n      const hash = window.location.hash || \"\";\r\n      const index = hash.indexOf(\"?\");\r\n      return index > 0 ? hash.slice(index) : \"\";\r\n    } else {\r\n      return (window.location.hash || \"\").replace(/^#/, \"\");\r\n    }\r\n  }\r\n  function constructQuery(params) {\r\n    const stringified = params.toString();\r\n    if (mode === \"history\")\r\n      return `${stringified ? `?${stringified}` : \"\"}${window.location.hash || \"\"}`;\r\n    if (mode === \"hash-params\")\r\n      return `${window.location.search || \"\"}${stringified ? `#${stringified}` : \"\"}`;\r\n    const hash = window.location.hash || \"#\";\r\n    const index = hash.indexOf(\"?\");\r\n    if (index > 0)\r\n      return `${hash.slice(0, index)}${stringified ? `?${stringified}` : \"\"}`;\r\n    return `${hash}${stringified ? `?${stringified}` : \"\"}`;\r\n  }\r\n  function read() {\r\n    return new URLSearchParams(getRawParams());\r\n  }\r\n  function updateState(params) {\r\n    const unusedKeys = new Set(Object.keys(state));\r\n    for (const key of params.keys()) {\r\n      const paramsForKey = params.getAll(key);\r\n      state[key] = paramsForKey.length > 1 ? paramsForKey : params.get(key) || \"\";\r\n      unusedKeys.delete(key);\r\n    }\r\n    Array.from(unusedKeys).forEach((key) => delete state[key]);\r\n  }\r\n  const { pause, resume } = pausableWatch(\r\n    state,\r\n    () => {\r\n      const params = new URLSearchParams(\"\");\r\n      Object.keys(state).forEach((key) => {\r\n        const mapEntry = state[key];\r\n        if (Array.isArray(mapEntry))\r\n          mapEntry.forEach((value) => params.append(key, value));\r\n        else if (removeNullishValues && mapEntry == null)\r\n          params.delete(key);\r\n        else if (removeFalsyValues && !mapEntry)\r\n          params.delete(key);\r\n        else\r\n          params.set(key, mapEntry);\r\n      });\r\n      write(params);\r\n    },\r\n    { deep: true }\r\n  );\r\n  function write(params, shouldUpdate) {\r\n    pause();\r\n    if (shouldUpdate)\r\n      updateState(params);\r\n    window.history.replaceState(\r\n      window.history.state,\r\n      window.document.title,\r\n      window.location.pathname + constructQuery(params)\r\n    );\r\n    resume();\r\n  }\r\n  function onChanged() {\r\n    if (!enableWrite)\r\n      return;\r\n    write(read(), true);\r\n  }\r\n  useEventListener(window, \"popstate\", onChanged, false);\r\n  if (mode !== \"history\")\r\n    useEventListener(window, \"hashchange\", onChanged, false);\r\n  const initial = read();\r\n  if (initial.keys().next().value)\r\n    updateState(initial);\r\n  else\r\n    Object.assign(state, initialValue);\r\n  return state;\r\n}\r\n\r\nfunction useUserMedia(options = {}) {\r\n  var _a, _b;\r\n  const enabled = ref((_a = options.enabled) != null ? _a : false);\r\n  const autoSwitch = ref((_b = options.autoSwitch) != null ? _b : true);\r\n  const constraints = ref(options.constraints);\r\n  const { navigator = defaultNavigator } = options;\r\n  const isSupported = useSupported(() => {\r\n    var _a2;\r\n    return (_a2 = navigator == null ? void 0 : navigator.mediaDevices) == null ? void 0 : _a2.getUserMedia;\r\n  });\r\n  const stream = shallowRef();\r\n  function getDeviceOptions(type) {\r\n    switch (type) {\r\n      case \"video\": {\r\n        if (constraints.value)\r\n          return constraints.value.video || false;\r\n        break;\r\n      }\r\n      case \"audio\": {\r\n        if (constraints.value)\r\n          return constraints.value.audio || false;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  async function _start() {\r\n    if (!isSupported.value || stream.value)\r\n      return;\r\n    stream.value = await navigator.mediaDevices.getUserMedia({\r\n      video: getDeviceOptions(\"video\"),\r\n      audio: getDeviceOptions(\"audio\")\r\n    });\r\n    return stream.value;\r\n  }\r\n  function _stop() {\r\n    var _a2;\r\n    (_a2 = stream.value) == null ? void 0 : _a2.getTracks().forEach((t) => t.stop());\r\n    stream.value = void 0;\r\n  }\r\n  function stop() {\r\n    _stop();\r\n    enabled.value = false;\r\n  }\r\n  async function start() {\r\n    await _start();\r\n    if (stream.value)\r\n      enabled.value = true;\r\n    return stream.value;\r\n  }\r\n  async function restart() {\r\n    _stop();\r\n    return await start();\r\n  }\r\n  watch(\r\n    enabled,\r\n    (v) => {\r\n      if (v)\r\n        _start();\r\n      else\r\n        _stop();\r\n    },\r\n    { immediate: true }\r\n  );\r\n  watch(\r\n    constraints,\r\n    () => {\r\n      if (autoSwitch.value && stream.value)\r\n        restart();\r\n    },\r\n    { immediate: true }\r\n  );\r\n  tryOnScopeDispose(() => {\r\n    stop();\r\n  });\r\n  return {\r\n    isSupported,\r\n    stream,\r\n    start,\r\n    stop,\r\n    restart,\r\n    constraints,\r\n    enabled,\r\n    autoSwitch\r\n  };\r\n}\r\n\r\nfunction useVModel(props, key, emit, options = {}) {\r\n  var _a, _b, _c, _d, _e;\r\n  const {\r\n    clone = false,\r\n    passive = false,\r\n    eventName,\r\n    deep = false,\r\n    defaultValue,\r\n    shouldEmit\r\n  } = options;\r\n  const vm = getCurrentInstance();\r\n  const _emit = emit || (vm == null ? void 0 : vm.emit) || ((_a = vm == null ? void 0 : vm.$emit) == null ? void 0 : _a.bind(vm)) || ((_c = (_b = vm == null ? void 0 : vm.proxy) == null ? void 0 : _b.$emit) == null ? void 0 : _c.bind(vm == null ? void 0 : vm.proxy));\r\n  let event = eventName;\r\n  if (!key) {\r\n    if (isVue2) {\r\n      const modelOptions = (_e = (_d = vm == null ? void 0 : vm.proxy) == null ? void 0 : _d.$options) == null ? void 0 : _e.model;\r\n      key = (modelOptions == null ? void 0 : modelOptions.value) || \"value\";\r\n      if (!eventName)\r\n        event = (modelOptions == null ? void 0 : modelOptions.event) || \"input\";\r\n    } else {\r\n      key = \"modelValue\";\r\n    }\r\n  }\r\n  event = event || `update:${key.toString()}`;\r\n  const cloneFn = (val) => !clone ? val : typeof clone === \"function\" ? clone(val) : cloneFnJSON(val);\r\n  const getValue = () => isDef(props[key]) ? cloneFn(props[key]) : defaultValue;\r\n  const triggerEmit = (value) => {\r\n    if (shouldEmit) {\r\n      if (shouldEmit(value))\r\n        _emit(event, value);\r\n    } else {\r\n      _emit(event, value);\r\n    }\r\n  };\r\n  if (passive) {\r\n    const initialValue = getValue();\r\n    const proxy = ref(initialValue);\r\n    let isUpdating = false;\r\n    watch(\r\n      () => props[key],\r\n      (v) => {\r\n        if (!isUpdating) {\r\n          isUpdating = true;\r\n          proxy.value = cloneFn(v);\r\n          nextTick(() => isUpdating = false);\r\n        }\r\n      }\r\n    );\r\n    watch(\r\n      proxy,\r\n      (v) => {\r\n        if (!isUpdating && (v !== props[key] || deep))\r\n          triggerEmit(v);\r\n      },\r\n      { deep }\r\n    );\r\n    return proxy;\r\n  } else {\r\n    return computed({\r\n      get() {\r\n        return getValue();\r\n      },\r\n      set(value) {\r\n        triggerEmit(value);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction useVModels(props, emit, options = {}) {\r\n  const ret = {};\r\n  for (const key in props) {\r\n    ret[key] = useVModel(\r\n      props,\r\n      key,\r\n      emit,\r\n      options\r\n    );\r\n  }\r\n  return ret;\r\n}\r\n\r\nfunction useVibrate(options) {\r\n  const {\r\n    pattern = [],\r\n    interval = 0,\r\n    navigator = defaultNavigator\r\n  } = options || {};\r\n  const isSupported = useSupported(() => typeof navigator !== \"undefined\" && \"vibrate\" in navigator);\r\n  const patternRef = toRef(pattern);\r\n  let intervalControls;\r\n  const vibrate = (pattern2 = patternRef.value) => {\r\n    if (isSupported.value)\r\n      navigator.vibrate(pattern2);\r\n  };\r\n  const stop = () => {\r\n    if (isSupported.value)\r\n      navigator.vibrate(0);\r\n    intervalControls == null ? void 0 : intervalControls.pause();\r\n  };\r\n  if (interval > 0) {\r\n    intervalControls = useIntervalFn(\r\n      vibrate,\r\n      interval,\r\n      {\r\n        immediate: false,\r\n        immediateCallback: false\r\n      }\r\n    );\r\n  }\r\n  return {\r\n    isSupported,\r\n    pattern,\r\n    intervalControls,\r\n    vibrate,\r\n    stop\r\n  };\r\n}\r\n\r\nfunction useVirtualList(list, options) {\r\n  const { containerStyle, wrapperProps, scrollTo, calculateRange, currentList, containerRef } = \"itemHeight\" in options ? useVerticalVirtualList(options, list) : useHorizontalVirtualList(options, list);\r\n  return {\r\n    list: currentList,\r\n    scrollTo,\r\n    containerProps: {\r\n      ref: containerRef,\r\n      onScroll: () => {\r\n        calculateRange();\r\n      },\r\n      style: containerStyle\r\n    },\r\n    wrapperProps\r\n  };\r\n}\r\nfunction useVirtualListResources(list) {\r\n  const containerRef = ref(null);\r\n  const size = useElementSize(containerRef);\r\n  const currentList = ref([]);\r\n  const source = shallowRef(list);\r\n  const state = ref({ start: 0, end: 10 });\r\n  return { state, source, currentList, size, containerRef };\r\n}\r\nfunction createGetViewCapacity(state, source, itemSize) {\r\n  return (containerSize) => {\r\n    if (typeof itemSize === \"number\")\r\n      return Math.ceil(containerSize / itemSize);\r\n    const { start = 0 } = state.value;\r\n    let sum = 0;\r\n    let capacity = 0;\r\n    for (let i = start; i < source.value.length; i++) {\r\n      const size = itemSize(i);\r\n      sum += size;\r\n      capacity = i;\r\n      if (sum > containerSize)\r\n        break;\r\n    }\r\n    return capacity - start;\r\n  };\r\n}\r\nfunction createGetOffset(source, itemSize) {\r\n  return (scrollDirection) => {\r\n    if (typeof itemSize === \"number\")\r\n      return Math.floor(scrollDirection / itemSize) + 1;\r\n    let sum = 0;\r\n    let offset = 0;\r\n    for (let i = 0; i < source.value.length; i++) {\r\n      const size = itemSize(i);\r\n      sum += size;\r\n      if (sum >= scrollDirection) {\r\n        offset = i;\r\n        break;\r\n      }\r\n    }\r\n    return offset + 1;\r\n  };\r\n}\r\nfunction createCalculateRange(type, overscan, getOffset, getViewCapacity, { containerRef, state, currentList, source }) {\r\n  return () => {\r\n    const element = containerRef.value;\r\n    if (element) {\r\n      const offset = getOffset(type === \"vertical\" ? element.scrollTop : element.scrollLeft);\r\n      const viewCapacity = getViewCapacity(type === \"vertical\" ? element.clientHeight : element.clientWidth);\r\n      const from = offset - overscan;\r\n      const to = offset + viewCapacity + overscan;\r\n      state.value = {\r\n        start: from < 0 ? 0 : from,\r\n        end: to > source.value.length ? source.value.length : to\r\n      };\r\n      currentList.value = source.value.slice(state.value.start, state.value.end).map((ele, index) => ({\r\n        data: ele,\r\n        index: index + state.value.start\r\n      }));\r\n    }\r\n  };\r\n}\r\nfunction createGetDistance(itemSize, source) {\r\n  return (index) => {\r\n    if (typeof itemSize === \"number\") {\r\n      const size2 = index * itemSize;\r\n      return size2;\r\n    }\r\n    const size = source.value.slice(0, index).reduce((sum, _, i) => sum + itemSize(i), 0);\r\n    return size;\r\n  };\r\n}\r\nfunction useWatchForSizes(size, list, calculateRange) {\r\n  watch([size.width, size.height, list], () => {\r\n    calculateRange();\r\n  });\r\n}\r\nfunction createComputedTotalSize(itemSize, source) {\r\n  return computed(() => {\r\n    if (typeof itemSize === \"number\")\r\n      return source.value.length * itemSize;\r\n    return source.value.reduce((sum, _, index) => sum + itemSize(index), 0);\r\n  });\r\n}\r\nconst scrollToDictionaryForElementScrollKey = {\r\n  horizontal: \"scrollLeft\",\r\n  vertical: \"scrollTop\"\r\n};\r\nfunction createScrollTo(type, calculateRange, getDistance, containerRef) {\r\n  return (index) => {\r\n    if (containerRef.value) {\r\n      containerRef.value[scrollToDictionaryForElementScrollKey[type]] = getDistance(index);\r\n      calculateRange();\r\n    }\r\n  };\r\n}\r\nfunction useHorizontalVirtualList(options, list) {\r\n  const resources = useVirtualListResources(list);\r\n  const { state, source, currentList, size, containerRef } = resources;\r\n  const containerStyle = { overflowX: \"auto\" };\r\n  const { itemWidth, overscan = 5 } = options;\r\n  const getViewCapacity = createGetViewCapacity(state, source, itemWidth);\r\n  const getOffset = createGetOffset(source, itemWidth);\r\n  const calculateRange = createCalculateRange(\"horizontal\", overscan, getOffset, getViewCapacity, resources);\r\n  const getDistanceLeft = createGetDistance(itemWidth, source);\r\n  const offsetLeft = computed(() => getDistanceLeft(state.value.start));\r\n  const totalWidth = createComputedTotalSize(itemWidth, source);\r\n  useWatchForSizes(size, list, calculateRange);\r\n  const scrollTo = createScrollTo(\"horizontal\", calculateRange, getDistanceLeft, containerRef);\r\n  const wrapperProps = computed(() => {\r\n    return {\r\n      style: {\r\n        height: \"100%\",\r\n        width: `${totalWidth.value - offsetLeft.value}px`,\r\n        marginLeft: `${offsetLeft.value}px`,\r\n        display: \"flex\"\r\n      }\r\n    };\r\n  });\r\n  return {\r\n    scrollTo,\r\n    calculateRange,\r\n    wrapperProps,\r\n    containerStyle,\r\n    currentList,\r\n    containerRef\r\n  };\r\n}\r\nfunction useVerticalVirtualList(options, list) {\r\n  const resources = useVirtualListResources(list);\r\n  const { state, source, currentList, size, containerRef } = resources;\r\n  const containerStyle = { overflowY: \"auto\" };\r\n  const { itemHeight, overscan = 5 } = options;\r\n  const getViewCapacity = createGetViewCapacity(state, source, itemHeight);\r\n  const getOffset = createGetOffset(source, itemHeight);\r\n  const calculateRange = createCalculateRange(\"vertical\", overscan, getOffset, getViewCapacity, resources);\r\n  const getDistanceTop = createGetDistance(itemHeight, source);\r\n  const offsetTop = computed(() => getDistanceTop(state.value.start));\r\n  const totalHeight = createComputedTotalSize(itemHeight, source);\r\n  useWatchForSizes(size, list, calculateRange);\r\n  const scrollTo = createScrollTo(\"vertical\", calculateRange, getDistanceTop, containerRef);\r\n  const wrapperProps = computed(() => {\r\n    return {\r\n      style: {\r\n        width: \"100%\",\r\n        height: `${totalHeight.value - offsetTop.value}px`,\r\n        marginTop: `${offsetTop.value}px`\r\n      }\r\n    };\r\n  });\r\n  return {\r\n    calculateRange,\r\n    scrollTo,\r\n    containerStyle,\r\n    wrapperProps,\r\n    currentList,\r\n    containerRef\r\n  };\r\n}\r\n\r\nfunction useWakeLock(options = {}) {\r\n  const {\r\n    navigator = defaultNavigator,\r\n    document = defaultDocument\r\n  } = options;\r\n  let wakeLock;\r\n  const isSupported = useSupported(() => navigator && \"wakeLock\" in navigator);\r\n  const isActive = ref(false);\r\n  async function onVisibilityChange() {\r\n    if (!isSupported.value || !wakeLock)\r\n      return;\r\n    if (document && document.visibilityState === \"visible\")\r\n      wakeLock = await navigator.wakeLock.request(\"screen\");\r\n    isActive.value = !wakeLock.released;\r\n  }\r\n  if (document)\r\n    useEventListener(document, \"visibilitychange\", onVisibilityChange, { passive: true });\r\n  async function request(type) {\r\n    if (!isSupported.value)\r\n      return;\r\n    wakeLock = await navigator.wakeLock.request(type);\r\n    isActive.value = !wakeLock.released;\r\n  }\r\n  async function release() {\r\n    if (!isSupported.value || !wakeLock)\r\n      return;\r\n    await wakeLock.release();\r\n    isActive.value = !wakeLock.released;\r\n    wakeLock = null;\r\n  }\r\n  return {\r\n    isSupported,\r\n    isActive,\r\n    request,\r\n    release\r\n  };\r\n}\r\n\r\nfunction useWebNotification(options = {}) {\r\n  const {\r\n    window = defaultWindow,\r\n    requestPermissions: _requestForPermissions = true\r\n  } = options;\r\n  const defaultWebNotificationOptions = options;\r\n  const isSupported = useSupported(() => !!window && \"Notification\" in window);\r\n  const permissionGranted = ref(isSupported.value && \"permission\" in Notification && Notification.permission === \"granted\");\r\n  const notification = ref(null);\r\n  const ensurePermissions = async () => {\r\n    if (!isSupported.value)\r\n      return;\r\n    if (!permissionGranted.value && Notification.permission !== \"denied\") {\r\n      const result = await Notification.requestPermission();\r\n      if (result === \"granted\")\r\n        permissionGranted.value = true;\r\n    }\r\n    return permissionGranted.value;\r\n  };\r\n  const { on: onClick, trigger: clickTrigger } = createEventHook();\r\n  const { on: onShow, trigger: showTrigger } = createEventHook();\r\n  const { on: onError, trigger: errorTrigger } = createEventHook();\r\n  const { on: onClose, trigger: closeTrigger } = createEventHook();\r\n  const show = async (overrides) => {\r\n    if (!isSupported.value || !permissionGranted.value)\r\n      return;\r\n    const options2 = Object.assign({}, defaultWebNotificationOptions, overrides);\r\n    notification.value = new Notification(options2.title || \"\", options2);\r\n    notification.value.onclick = clickTrigger;\r\n    notification.value.onshow = showTrigger;\r\n    notification.value.onerror = errorTrigger;\r\n    notification.value.onclose = closeTrigger;\r\n    return notification.value;\r\n  };\r\n  const close = () => {\r\n    if (notification.value)\r\n      notification.value.close();\r\n    notification.value = null;\r\n  };\r\n  if (_requestForPermissions)\r\n    tryOnMounted(ensurePermissions);\r\n  tryOnScopeDispose(close);\r\n  if (isSupported.value && window) {\r\n    const document = window.document;\r\n    useEventListener(document, \"visibilitychange\", (e) => {\r\n      e.preventDefault();\r\n      if (document.visibilityState === \"visible\") {\r\n        close();\r\n      }\r\n    });\r\n  }\r\n  return {\r\n    isSupported,\r\n    notification,\r\n    ensurePermissions,\r\n    permissionGranted,\r\n    show,\r\n    close,\r\n    onClick,\r\n    onShow,\r\n    onError,\r\n    onClose\r\n  };\r\n}\r\n\r\nconst DEFAULT_PING_MESSAGE = \"ping\";\r\nfunction resolveNestedOptions(options) {\r\n  if (options === true)\r\n    return {};\r\n  return options;\r\n}\r\nfunction useWebSocket(url, options = {}) {\r\n  const {\r\n    onConnected,\r\n    onDisconnected,\r\n    onError,\r\n    onMessage,\r\n    immediate = true,\r\n    autoClose = true,\r\n    protocols = []\r\n  } = options;\r\n  const data = ref(null);\r\n  const status = ref(\"CLOSED\");\r\n  const wsRef = ref();\r\n  const urlRef = toRef(url);\r\n  let heartbeatPause;\r\n  let heartbeatResume;\r\n  let explicitlyClosed = false;\r\n  let retried = 0;\r\n  let bufferedData = [];\r\n  let pongTimeoutWait;\r\n  const _sendBuffer = () => {\r\n    if (bufferedData.length && wsRef.value && status.value === \"OPEN\") {\r\n      for (const buffer of bufferedData)\r\n        wsRef.value.send(buffer);\r\n      bufferedData = [];\r\n    }\r\n  };\r\n  const resetHeartbeat = () => {\r\n    clearTimeout(pongTimeoutWait);\r\n    pongTimeoutWait = void 0;\r\n  };\r\n  const close = (code = 1e3, reason) => {\r\n    if (!isClient || !wsRef.value)\r\n      return;\r\n    explicitlyClosed = true;\r\n    resetHeartbeat();\r\n    heartbeatPause == null ? void 0 : heartbeatPause();\r\n    wsRef.value.close(code, reason);\r\n    wsRef.value = void 0;\r\n  };\r\n  const send = (data2, useBuffer = true) => {\r\n    if (!wsRef.value || status.value !== \"OPEN\") {\r\n      if (useBuffer)\r\n        bufferedData.push(data2);\r\n      return false;\r\n    }\r\n    _sendBuffer();\r\n    wsRef.value.send(data2);\r\n    return true;\r\n  };\r\n  const _init = () => {\r\n    if (explicitlyClosed || typeof urlRef.value === \"undefined\")\r\n      return;\r\n    const ws = new WebSocket(urlRef.value, protocols);\r\n    wsRef.value = ws;\r\n    status.value = \"CONNECTING\";\r\n    ws.onopen = () => {\r\n      status.value = \"OPEN\";\r\n      onConnected == null ? void 0 : onConnected(ws);\r\n      heartbeatResume == null ? void 0 : heartbeatResume();\r\n      _sendBuffer();\r\n    };\r\n    ws.onclose = (ev) => {\r\n      status.value = \"CLOSED\";\r\n      onDisconnected == null ? void 0 : onDisconnected(ws, ev);\r\n      if (!explicitlyClosed && options.autoReconnect) {\r\n        const {\r\n          retries = -1,\r\n          delay = 1e3,\r\n          onFailed\r\n        } = resolveNestedOptions(options.autoReconnect);\r\n        retried += 1;\r\n        if (typeof retries === \"number\" && (retries < 0 || retried < retries))\r\n          setTimeout(_init, delay);\r\n        else if (typeof retries === \"function\" && retries())\r\n          setTimeout(_init, delay);\r\n        else\r\n          onFailed == null ? void 0 : onFailed();\r\n      }\r\n    };\r\n    ws.onerror = (e) => {\r\n      onError == null ? void 0 : onError(ws, e);\r\n    };\r\n    ws.onmessage = (e) => {\r\n      if (options.heartbeat) {\r\n        resetHeartbeat();\r\n        const {\r\n          message = DEFAULT_PING_MESSAGE\r\n        } = resolveNestedOptions(options.heartbeat);\r\n        if (e.data === message)\r\n          return;\r\n      }\r\n      data.value = e.data;\r\n      onMessage == null ? void 0 : onMessage(ws, e);\r\n    };\r\n  };\r\n  if (options.heartbeat) {\r\n    const {\r\n      message = DEFAULT_PING_MESSAGE,\r\n      interval = 1e3,\r\n      pongTimeout = 1e3\r\n    } = resolveNestedOptions(options.heartbeat);\r\n    const { pause, resume } = useIntervalFn(\r\n      () => {\r\n        send(message, false);\r\n        if (pongTimeoutWait != null)\r\n          return;\r\n        pongTimeoutWait = setTimeout(() => {\r\n          close();\r\n          explicitlyClosed = false;\r\n        }, pongTimeout);\r\n      },\r\n      interval,\r\n      { immediate: false }\r\n    );\r\n    heartbeatPause = pause;\r\n    heartbeatResume = resume;\r\n  }\r\n  if (autoClose) {\r\n    if (isClient)\r\n      useEventListener(\"beforeunload\", () => close());\r\n    tryOnScopeDispose(close);\r\n  }\r\n  const open = () => {\r\n    if (!isClient && !isWorker)\r\n      return;\r\n    close();\r\n    explicitlyClosed = false;\r\n    retried = 0;\r\n    _init();\r\n  };\r\n  if (immediate)\r\n    open();\r\n  return {\r\n    data,\r\n    status,\r\n    close,\r\n    send,\r\n    open,\r\n    ws: wsRef\r\n  };\r\n}\r\n\r\nfunction useWebWorker(arg0, workerOptions, options) {\r\n  const {\r\n    window = defaultWindow\r\n  } = options != null ? options : {};\r\n  const data = ref(null);\r\n  const worker = shallowRef();\r\n  const post = (...args) => {\r\n    if (!worker.value)\r\n      return;\r\n    worker.value.postMessage(...args);\r\n  };\r\n  const terminate = function terminate2() {\r\n    if (!worker.value)\r\n      return;\r\n    worker.value.terminate();\r\n  };\r\n  if (window) {\r\n    if (typeof arg0 === \"string\")\r\n      worker.value = new Worker(arg0, workerOptions);\r\n    else if (typeof arg0 === \"function\")\r\n      worker.value = arg0();\r\n    else\r\n      worker.value = arg0;\r\n    worker.value.onmessage = (e) => {\r\n      data.value = e.data;\r\n    };\r\n    tryOnScopeDispose(() => {\r\n      if (worker.value)\r\n        worker.value.terminate();\r\n    });\r\n  }\r\n  return {\r\n    data,\r\n    post,\r\n    terminate,\r\n    worker\r\n  };\r\n}\r\n\r\nfunction jobRunner(userFunc) {\r\n  return (e) => {\r\n    const userFuncArgs = e.data[0];\r\n    return Promise.resolve(userFunc.apply(void 0, userFuncArgs)).then((result) => {\r\n      postMessage([\"SUCCESS\", result]);\r\n    }).catch((error) => {\r\n      postMessage([\"ERROR\", error]);\r\n    });\r\n  };\r\n}\r\n\r\nfunction depsParser(deps) {\r\n  if (deps.length === 0)\r\n    return \"\";\r\n  const depsString = deps.map((dep) => `'${dep}'`).toString();\r\n  return `importScripts(${depsString})`;\r\n}\r\n\r\nfunction createWorkerBlobUrl(fn, deps) {\r\n  const blobCode = `${depsParser(deps)}; onmessage=(${jobRunner})(${fn})`;\r\n  const blob = new Blob([blobCode], { type: \"text/javascript\" });\r\n  const url = URL.createObjectURL(blob);\r\n  return url;\r\n}\r\n\r\nfunction useWebWorkerFn(fn, options = {}) {\r\n  const {\r\n    dependencies = [],\r\n    timeout,\r\n    window = defaultWindow\r\n  } = options;\r\n  const worker = ref();\r\n  const workerStatus = ref(\"PENDING\");\r\n  const promise = ref({});\r\n  const timeoutId = ref();\r\n  const workerTerminate = (status = \"PENDING\") => {\r\n    if (worker.value && worker.value._url && window) {\r\n      worker.value.terminate();\r\n      URL.revokeObjectURL(worker.value._url);\r\n      promise.value = {};\r\n      worker.value = void 0;\r\n      window.clearTimeout(timeoutId.value);\r\n      workerStatus.value = status;\r\n    }\r\n  };\r\n  workerTerminate();\r\n  tryOnScopeDispose(workerTerminate);\r\n  const generateWorker = () => {\r\n    const blobUrl = createWorkerBlobUrl(fn, dependencies);\r\n    const newWorker = new Worker(blobUrl);\r\n    newWorker._url = blobUrl;\r\n    newWorker.onmessage = (e) => {\r\n      const { resolve = () => {\r\n      }, reject = () => {\r\n      } } = promise.value;\r\n      const [status, result] = e.data;\r\n      switch (status) {\r\n        case \"SUCCESS\":\r\n          resolve(result);\r\n          workerTerminate(status);\r\n          break;\r\n        default:\r\n          reject(result);\r\n          workerTerminate(\"ERROR\");\r\n          break;\r\n      }\r\n    };\r\n    newWorker.onerror = (e) => {\r\n      const { reject = () => {\r\n      } } = promise.value;\r\n      e.preventDefault();\r\n      reject(e);\r\n      workerTerminate(\"ERROR\");\r\n    };\r\n    if (timeout) {\r\n      timeoutId.value = setTimeout(\r\n        () => workerTerminate(\"TIMEOUT_EXPIRED\"),\r\n        timeout\r\n      );\r\n    }\r\n    return newWorker;\r\n  };\r\n  const callWorker = (...fnArgs) => new Promise((resolve, reject) => {\r\n    promise.value = {\r\n      resolve,\r\n      reject\r\n    };\r\n    worker.value && worker.value.postMessage([[...fnArgs]]);\r\n    workerStatus.value = \"RUNNING\";\r\n  });\r\n  const workerFn = (...fnArgs) => {\r\n    if (workerStatus.value === \"RUNNING\") {\r\n      console.error(\r\n        \"[useWebWorkerFn] You can only run one instance of the worker at a time.\"\r\n      );\r\n      return Promise.reject();\r\n    }\r\n    worker.value = generateWorker();\r\n    return callWorker(...fnArgs);\r\n  };\r\n  return {\r\n    workerFn,\r\n    workerStatus,\r\n    workerTerminate\r\n  };\r\n}\r\n\r\nfunction useWindowFocus(options = {}) {\r\n  const { window = defaultWindow } = options;\r\n  if (!window)\r\n    return ref(false);\r\n  const focused = ref(window.document.hasFocus());\r\n  useEventListener(window, \"blur\", () => {\r\n    focused.value = false;\r\n  });\r\n  useEventListener(window, \"focus\", () => {\r\n    focused.value = true;\r\n  });\r\n  return focused;\r\n}\r\n\r\nfunction useWindowScroll(options = {}) {\r\n  const { window = defaultWindow, behavior = \"auto\" } = options;\r\n  if (!window) {\r\n    return {\r\n      x: ref(0),\r\n      y: ref(0)\r\n    };\r\n  }\r\n  const internalX = ref(window.scrollX);\r\n  const internalY = ref(window.scrollY);\r\n  const x = computed({\r\n    get() {\r\n      return internalX.value;\r\n    },\r\n    set(x2) {\r\n      scrollTo({ left: x2, behavior });\r\n    }\r\n  });\r\n  const y = computed({\r\n    get() {\r\n      return internalY.value;\r\n    },\r\n    set(y2) {\r\n      scrollTo({ top: y2, behavior });\r\n    }\r\n  });\r\n  useEventListener(\r\n    window,\r\n    \"scroll\",\r\n    () => {\r\n      internalX.value = window.scrollX;\r\n      internalY.value = window.scrollY;\r\n    },\r\n    {\r\n      capture: false,\r\n      passive: true\r\n    }\r\n  );\r\n  return { x, y };\r\n}\r\n\r\nfunction useWindowSize(options = {}) {\r\n  const {\r\n    window = defaultWindow,\r\n    initialWidth = Number.POSITIVE_INFINITY,\r\n    initialHeight = Number.POSITIVE_INFINITY,\r\n    listenOrientation = true,\r\n    includeScrollbar = true\r\n  } = options;\r\n  const width = ref(initialWidth);\r\n  const height = ref(initialHeight);\r\n  const update = () => {\r\n    if (window) {\r\n      if (includeScrollbar) {\r\n        width.value = window.innerWidth;\r\n        height.value = window.innerHeight;\r\n      } else {\r\n        width.value = window.document.documentElement.clientWidth;\r\n        height.value = window.document.documentElement.clientHeight;\r\n      }\r\n    }\r\n  };\r\n  update();\r\n  tryOnMounted(update);\r\n  useEventListener(\"resize\", update, { passive: true });\r\n  if (listenOrientation) {\r\n    const matches = useMediaQuery(\"(orientation: portrait)\");\r\n    watch(matches, () => update());\r\n  }\r\n  return { width, height };\r\n}\r\n\r\nexport { DefaultMagicKeysAliasMap, StorageSerializers, TransitionPresets, computedAsync as asyncComputed, breakpointsAntDesign, breakpointsBootstrapV5, breakpointsMasterCss, breakpointsPrimeFlex, breakpointsQuasar, breakpointsSematic, breakpointsTailwind, breakpointsVuetify, breakpointsVuetifyV2, breakpointsVuetifyV3, cloneFnJSON, computedAsync, computedInject, createFetch, createReusableTemplate, createTemplatePromise, createUnrefFn, customStorageEventName, defaultDocument, defaultLocation, defaultNavigator, defaultWindow, executeTransition, formatTimeAgo, getSSRHandler, mapGamepadToXbox360Controller, onClickOutside, onKeyDown, onKeyPressed, onKeyStroke, onKeyUp, onLongPress, onStartTyping, setSSRHandler, templateRef, unrefElement, useActiveElement, useAnimate, useAsyncQueue, useAsyncState, useBase64, useBattery, useBluetooth, useBreakpoints, useBroadcastChannel, useBrowserLocation, useCached, useClipboard, useClipboardItems, useCloned, useColorMode, useConfirmDialog, useCssVar, useCurrentElement, useCycleList, useDark, useDebouncedRefHistory, useDeviceMotion, useDeviceOrientation, useDevicePixelRatio, useDevicesList, useDisplayMedia, useDocumentVisibility, useDraggable, useDropZone, useElementBounding, useElementByPoint, useElementHover, useElementSize, useElementVisibility, useEventBus, useEventListener, useEventSource, useEyeDropper, useFavicon, useFetch, useFileDialog, useFileSystemAccess, useFocus, useFocusWithin, useFps, useFullscreen, useGamepad, useGeolocation, useIdle, useImage, useInfiniteScroll, useIntersectionObserver, useKeyModifier, useLocalStorage, useMagicKeys, useManualRefHistory, useMediaControls, useMediaQuery, useMemoize, useMemory, useMounted, useMouse, useMouseInElement, useMousePressed, useMutationObserver, useNavigatorLanguage, useNetwork, useNow, useObjectUrl, useOffsetPagination, useOnline, usePageLeave, useParallax, useParentElement, usePerformanceObserver, usePermission, usePointer, usePointerLock, usePointerSwipe, usePreferredColorScheme, usePreferredContrast, usePreferredDark, usePreferredLanguages, usePreferredReducedMotion, usePrevious, useRafFn, useRefHistory, useResizeObserver, useScreenOrientation, useScreenSafeArea, useScriptTag, useScroll, useScrollLock, useSessionStorage, useShare, useSorted, useSpeechRecognition, useSpeechSynthesis, useStepper, useStorage, useStorageAsync, useStyleTag, useSupported, useSwipe, useTemplateRefsList, useTextDirection, useTextSelection, useTextareaAutosize, useThrottledRefHistory, useTimeAgo, useTimeoutPoll, useTimestamp, useTitle, useTransition, useUrlSearchParams, useUserMedia, useVModel, useVModels, useVibrate, useVirtualList, useWakeLock, useWebNotification, useWebSocket, useWebWorker, useWebWorkerFn, useWindowFocus, useWindowScroll, useWindowSize };\r\n", "const defaultTimestep = (1 / 60) * 1000;\r\nconst getCurrentTime = typeof performance !== \"undefined\"\r\n    ? () => performance.now()\r\n    : () => Date.now();\r\nconst onNextFrame = typeof window !== \"undefined\"\r\n    ? (callback) => window.requestAnimationFrame(callback)\r\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\r\n\r\nexport { defaultTimestep, onNextFrame };\r\n", "function createRenderStep(runNextFrame) {\r\n    let toRun = [];\r\n    let toRunNextFrame = [];\r\n    let numToRun = 0;\r\n    let isProcessing = false;\r\n    let flushNextFrame = false;\r\n    const toKeepAlive = new WeakSet();\r\n    const step = {\r\n        schedule: (callback, keepAlive = false, immediate = false) => {\r\n            const addToCurrentFrame = immediate && isProcessing;\r\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\r\n            if (keepAlive)\r\n                toKeepAlive.add(callback);\r\n            if (buffer.indexOf(callback) === -1) {\r\n                buffer.push(callback);\r\n                if (addToCurrentFrame && isProcessing)\r\n                    numToRun = toRun.length;\r\n            }\r\n            return callback;\r\n        },\r\n        cancel: (callback) => {\r\n            const index = toRunNextFrame.indexOf(callback);\r\n            if (index !== -1)\r\n                toRunNextFrame.splice(index, 1);\r\n            toKeepAlive.delete(callback);\r\n        },\r\n        process: (frameData) => {\r\n            if (isProcessing) {\r\n                flushNextFrame = true;\r\n                return;\r\n            }\r\n            isProcessing = true;\r\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\r\n            toRunNextFrame.length = 0;\r\n            numToRun = toRun.length;\r\n            if (numToRun) {\r\n                for (let i = 0; i < numToRun; i++) {\r\n                    const callback = toRun[i];\r\n                    callback(frameData);\r\n                    if (toKeepAlive.has(callback)) {\r\n                        step.schedule(callback);\r\n                        runNextFrame();\r\n                    }\r\n                }\r\n            }\r\n            isProcessing = false;\r\n            if (flushNextFrame) {\r\n                flushNextFrame = false;\r\n                step.process(frameData);\r\n            }\r\n        },\r\n    };\r\n    return step;\r\n}\r\n\r\nexport { createRenderStep };\r\n", "import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\r\nimport { createRenderStep } from './create-render-step.mjs';\r\n\r\nconst maxElapsed = 40;\r\nlet useDefaultElapsed = true;\r\nlet runNextFrame = false;\r\nlet isProcessing = false;\r\nconst frame = {\r\n    delta: 0,\r\n    timestamp: 0,\r\n};\r\nconst stepsOrder = [\r\n    \"read\",\r\n    \"update\",\r\n    \"preRender\",\r\n    \"render\",\r\n    \"postRender\",\r\n];\r\nconst steps = stepsOrder.reduce((acc, key) => {\r\n    acc[key] = createRenderStep(() => (runNextFrame = true));\r\n    return acc;\r\n}, {});\r\nconst sync = stepsOrder.reduce((acc, key) => {\r\n    const step = steps[key];\r\n    acc[key] = (process, keepAlive = false, immediate = false) => {\r\n        if (!runNextFrame)\r\n            startLoop();\r\n        return step.schedule(process, keepAlive, immediate);\r\n    };\r\n    return acc;\r\n}, {});\r\nconst cancelSync = stepsOrder.reduce((acc, key) => {\r\n    acc[key] = steps[key].cancel;\r\n    return acc;\r\n}, {});\r\nconst flushSync = stepsOrder.reduce((acc, key) => {\r\n    acc[key] = () => steps[key].process(frame);\r\n    return acc;\r\n}, {});\r\nconst processStep = (stepId) => steps[stepId].process(frame);\r\nconst processFrame = (timestamp) => {\r\n    runNextFrame = false;\r\n    frame.delta = useDefaultElapsed\r\n        ? defaultTimestep\r\n        : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);\r\n    frame.timestamp = timestamp;\r\n    isProcessing = true;\r\n    stepsOrder.forEach(processStep);\r\n    isProcessing = false;\r\n    if (runNextFrame) {\r\n        useDefaultElapsed = false;\r\n        onNextFrame(processFrame);\r\n    }\r\n};\r\nconst startLoop = () => {\r\n    runNextFrame = true;\r\n    useDefaultElapsed = true;\r\n    if (!isProcessing)\r\n        onNextFrame(processFrame);\r\n};\r\nconst getFrameData = () => frame;\r\n\r\nexport default sync;\r\nexport { cancelSync, flushSync, getFrameData };\r\n", "/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n", "var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\r\n\r\nexport { invariant, warning };\r\n", "const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\r\n\r\nexport { clamp };\r\n", "import { warning } from 'hey-listen';\r\nimport { clamp } from '../../utils/clamp.mjs';\r\n\r\nconst safeMin = 0.001;\r\nconst minDuration = 0.01;\r\nconst maxDuration = 10.0;\r\nconst minDamping = 0.05;\r\nconst maxDamping = 1;\r\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\r\n    let envelope;\r\n    let derivative;\r\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\r\n    let dampingRatio = 1 - bounce;\r\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\r\n    duration = clamp(minDuration, maxDuration, duration / 1000);\r\n    if (dampingRatio < 1) {\r\n        envelope = (undampedFreq) => {\r\n            const exponentialDecay = undampedFreq * dampingRatio;\r\n            const delta = exponentialDecay * duration;\r\n            const a = exponentialDecay - velocity;\r\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\r\n            const c = Math.exp(-delta);\r\n            return safeMin - (a / b) * c;\r\n        };\r\n        derivative = (undampedFreq) => {\r\n            const exponentialDecay = undampedFreq * dampingRatio;\r\n            const delta = exponentialDecay * duration;\r\n            const d = delta * velocity + velocity;\r\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\r\n            const f = Math.exp(-delta);\r\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\r\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\r\n            return (factor * ((d - e) * f)) / g;\r\n        };\r\n    }\r\n    else {\r\n        envelope = (undampedFreq) => {\r\n            const a = Math.exp(-undampedFreq * duration);\r\n            const b = (undampedFreq - velocity) * duration + 1;\r\n            return -safeMin + a * b;\r\n        };\r\n        derivative = (undampedFreq) => {\r\n            const a = Math.exp(-undampedFreq * duration);\r\n            const b = (velocity - undampedFreq) * (duration * duration);\r\n            return a * b;\r\n        };\r\n    }\r\n    const initialGuess = 5 / duration;\r\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\r\n    duration = duration * 1000;\r\n    if (isNaN(undampedFreq)) {\r\n        return {\r\n            stiffness: 100,\r\n            damping: 10,\r\n            duration,\r\n        };\r\n    }\r\n    else {\r\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\r\n        return {\r\n            stiffness,\r\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\r\n            duration,\r\n        };\r\n    }\r\n}\r\nconst rootIterations = 12;\r\nfunction approximateRoot(envelope, derivative, initialGuess) {\r\n    let result = initialGuess;\r\n    for (let i = 1; i < rootIterations; i++) {\r\n        result = result - envelope(result) / derivative(result);\r\n    }\r\n    return result;\r\n}\r\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\r\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\r\n}\r\n\r\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\r\n", "import { __rest } from 'tslib';\r\nimport { findSpring, calcAngularFreq } from '../utils/find-spring.mjs';\r\n\r\nconst durationKeys = [\"duration\", \"bounce\"];\r\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\r\nfunction isSpringType(options, keys) {\r\n    return keys.some((key) => options[key] !== undefined);\r\n}\r\nfunction getSpringOptions(options) {\r\n    let springOptions = Object.assign({ velocity: 0.0, stiffness: 100, damping: 10, mass: 1.0, isResolvedFromDuration: false }, options);\r\n    if (!isSpringType(options, physicsKeys) &&\r\n        isSpringType(options, durationKeys)) {\r\n        const derived = findSpring(options);\r\n        springOptions = Object.assign(Object.assign(Object.assign({}, springOptions), derived), { velocity: 0.0, mass: 1.0 });\r\n        springOptions.isResolvedFromDuration = true;\r\n    }\r\n    return springOptions;\r\n}\r\nfunction spring(_a) {\r\n    var { from = 0.0, to = 1.0, restSpeed = 2, restDelta } = _a, options = __rest(_a, [\"from\", \"to\", \"restSpeed\", \"restDelta\"]);\r\n    const state = { done: false, value: from };\r\n    let { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\r\n    let resolveSpring = zero;\r\n    let resolveVelocity = zero;\r\n    function createSpring() {\r\n        const initialVelocity = velocity ? -(velocity / 1000) : 0.0;\r\n        const initialDelta = to - from;\r\n        const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\r\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\r\n        if (restDelta === undefined) {\r\n            restDelta = Math.min(Math.abs(to - from) / 100, 0.4);\r\n        }\r\n        if (dampingRatio < 1) {\r\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\r\n            resolveSpring = (t) => {\r\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\r\n                return (to -\r\n                    envelope *\r\n                        (((initialVelocity +\r\n                            dampingRatio * undampedAngularFreq * initialDelta) /\r\n                            angularFreq) *\r\n                            Math.sin(angularFreq * t) +\r\n                            initialDelta * Math.cos(angularFreq * t)));\r\n            };\r\n            resolveVelocity = (t) => {\r\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\r\n                return (dampingRatio *\r\n                    undampedAngularFreq *\r\n                    envelope *\r\n                    ((Math.sin(angularFreq * t) *\r\n                        (initialVelocity +\r\n                            dampingRatio *\r\n                                undampedAngularFreq *\r\n                                initialDelta)) /\r\n                        angularFreq +\r\n                        initialDelta * Math.cos(angularFreq * t)) -\r\n                    envelope *\r\n                        (Math.cos(angularFreq * t) *\r\n                            (initialVelocity +\r\n                                dampingRatio *\r\n                                    undampedAngularFreq *\r\n                                    initialDelta) -\r\n                            angularFreq *\r\n                                initialDelta *\r\n                                Math.sin(angularFreq * t)));\r\n            };\r\n        }\r\n        else if (dampingRatio === 1) {\r\n            resolveSpring = (t) => to -\r\n                Math.exp(-undampedAngularFreq * t) *\r\n                    (initialDelta +\r\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\r\n                            t);\r\n        }\r\n        else {\r\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\r\n            resolveSpring = (t) => {\r\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\r\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\r\n                return (to -\r\n                    (envelope *\r\n                        ((initialVelocity +\r\n                            dampingRatio * undampedAngularFreq * initialDelta) *\r\n                            Math.sinh(freqForT) +\r\n                            dampedAngularFreq *\r\n                                initialDelta *\r\n                                Math.cosh(freqForT))) /\r\n                        dampedAngularFreq);\r\n            };\r\n        }\r\n    }\r\n    createSpring();\r\n    return {\r\n        next: (t) => {\r\n            const current = resolveSpring(t);\r\n            if (!isResolvedFromDuration) {\r\n                const currentVelocity = resolveVelocity(t) * 1000;\r\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\r\n                const isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\r\n                state.done =\r\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\r\n            }\r\n            else {\r\n                state.done = t >= duration;\r\n            }\r\n            state.value = state.done ? to : current;\r\n            return state;\r\n        },\r\n        flipTarget: () => {\r\n            velocity = -velocity;\r\n            [from, to] = [to, from];\r\n            createSpring();\r\n        },\r\n    };\r\n}\r\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\r\nconst zero = (_t) => 0;\r\n\r\nexport { spring };\r\n", "const progress = (from, to, value) => {\r\n    const toFromDifference = to - from;\r\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\r\n};\r\n\r\nexport { progress };\r\n", "const mix = (from, to, progress) => -progress * from + progress * to + from;\r\n\r\nexport { mix };\r\n", "const clamp = (min, max) => (v) => Math.max(Math.min(v, max), min);\r\nconst sanitize = (v) => (v % 1 ? Number(v.toFixed(5)) : v);\r\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\r\nconst colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\r\nconst singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\r\nfunction isString(v) {\r\n    return typeof v === 'string';\r\n}\r\n\r\nexport { clamp, colorRegex, floatRegex, isString, sanitize, singleColorRegex };\r\n", "import { clamp } from '../utils.mjs';\r\n\r\nconst number = {\r\n    test: (v) => typeof v === 'number',\r\n    parse: parseFloat,\r\n    transform: (v) => v,\r\n};\r\nconst alpha = Object.assign(Object.assign({}, number), { transform: clamp(0, 1) });\r\nconst scale = Object.assign(Object.assign({}, number), { default: 1 });\r\n\r\nexport { alpha, number, scale };\r\n", "import { isString } from '../utils.mjs';\r\n\r\nconst createUnitType = (unit) => ({\r\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(' ').length === 1,\r\n    parse: parseFloat,\r\n    transform: (v) => `${v}${unit}`,\r\n});\r\nconst degrees = createUnitType('deg');\r\nconst percent = createUnitType('%');\r\nconst px = createUnitType('px');\r\nconst vh = createUnitType('vh');\r\nconst vw = createUnitType('vw');\r\nconst progressPercentage = Object.assign(Object.assign({}, percent), { parse: (v) => percent.parse(v) / 100, transform: (v) => percent.transform(v * 100) });\r\n\r\nexport { degrees, percent, progressPercentage, px, vh, vw };\r\n", "import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\r\n\r\nconst isColorString = (type, testProp) => (v) => {\r\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\r\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\r\n};\r\nconst splitColor = (aName, bName, cName) => (v) => {\r\n    if (!isString(v))\r\n        return v;\r\n    const [a, b, c, alpha] = v.match(floatRegex);\r\n    return {\r\n        [aName]: parseFloat(a),\r\n        [bName]: parseFloat(b),\r\n        [cName]: parseFloat(c),\r\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\r\n    };\r\n};\r\n\r\nexport { isColorString, splitColor };\r\n", "import { alpha } from '../numbers/index.mjs';\r\nimport { percent } from '../numbers/units.mjs';\r\nimport { sanitize } from '../utils.mjs';\r\nimport { isColorString, splitColor } from './utils.mjs';\r\n\r\nconst hsla = {\r\n    test: isColorString('hsl', 'hue'),\r\n    parse: splitColor('hue', 'saturation', 'lightness'),\r\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\r\n        return ('hsla(' +\r\n            Math.round(hue) +\r\n            ', ' +\r\n            percent.transform(sanitize(saturation)) +\r\n            ', ' +\r\n            percent.transform(sanitize(lightness)) +\r\n            ', ' +\r\n            sanitize(alpha.transform(alpha$1)) +\r\n            ')');\r\n    },\r\n};\r\n\r\nexport { hsla };\r\n", "import { number, alpha } from '../numbers/index.mjs';\r\nimport { sanitize, clamp } from '../utils.mjs';\r\nimport { isColorString, splitColor } from './utils.mjs';\r\n\r\nconst clampRgbUnit = clamp(0, 255);\r\nconst rgbUnit = Object.assign(Object.assign({}, number), { transform: (v) => Math.round(clampRgbUnit(v)) });\r\nconst rgba = {\r\n    test: isColorString('rgb', 'red'),\r\n    parse: splitColor('red', 'green', 'blue'),\r\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => 'rgba(' +\r\n        rgbUnit.transform(red) +\r\n        ', ' +\r\n        rgbUnit.transform(green) +\r\n        ', ' +\r\n        rgbUnit.transform(blue) +\r\n        ', ' +\r\n        sanitize(alpha.transform(alpha$1)) +\r\n        ')',\r\n};\r\n\r\nexport { rgbUnit, rgba };\r\n", "import { rgba } from './rgba.mjs';\r\nimport { isColorString } from './utils.mjs';\r\n\r\nfunction parseHex(v) {\r\n    let r = '';\r\n    let g = '';\r\n    let b = '';\r\n    let a = '';\r\n    if (v.length > 5) {\r\n        r = v.substr(1, 2);\r\n        g = v.substr(3, 2);\r\n        b = v.substr(5, 2);\r\n        a = v.substr(7, 2);\r\n    }\r\n    else {\r\n        r = v.substr(1, 1);\r\n        g = v.substr(2, 1);\r\n        b = v.substr(3, 1);\r\n        a = v.substr(4, 1);\r\n        r += r;\r\n        g += g;\r\n        b += b;\r\n        a += a;\r\n    }\r\n    return {\r\n        red: parseInt(r, 16),\r\n        green: parseInt(g, 16),\r\n        blue: parseInt(b, 16),\r\n        alpha: a ? parseInt(a, 16) / 255 : 1,\r\n    };\r\n}\r\nconst hex = {\r\n    test: isColorString('#'),\r\n    parse: parseHex,\r\n    transform: rgba.transform,\r\n};\r\n\r\nexport { hex };\r\n", "import { isString } from '../utils.mjs';\r\nimport { hex } from './hex.mjs';\r\nimport { hsla } from './hsla.mjs';\r\nimport { rgba } from './rgba.mjs';\r\n\r\nconst color = {\r\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\r\n    parse: (v) => {\r\n        if (rgba.test(v)) {\r\n            return rgba.parse(v);\r\n        }\r\n        else if (hsla.test(v)) {\r\n            return hsla.parse(v);\r\n        }\r\n        else {\r\n            return hex.parse(v);\r\n        }\r\n    },\r\n    transform: (v) => {\r\n        return isString(v)\r\n            ? v\r\n            : v.hasOwnProperty('red')\r\n                ? rgba.transform(v)\r\n                : hsla.transform(v);\r\n    },\r\n};\r\n\r\nexport { color };\r\n", "import { color } from '../color/index.mjs';\r\nimport { number } from '../numbers/index.mjs';\r\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\r\n\r\nconst colorToken = '${c}';\r\nconst numberToken = '${n}';\r\nfunction test(v) {\r\n    var _a, _b, _c, _d;\r\n    return (isNaN(v) &&\r\n        isString(v) &&\r\n        ((_b = (_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = v.match(colorRegex)) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0);\r\n}\r\nfunction analyse(v) {\r\n    if (typeof v === 'number')\r\n        v = `${v}`;\r\n    const values = [];\r\n    let numColors = 0;\r\n    const colors = v.match(colorRegex);\r\n    if (colors) {\r\n        numColors = colors.length;\r\n        v = v.replace(colorRegex, colorToken);\r\n        values.push(...colors.map(color.parse));\r\n    }\r\n    const numbers = v.match(floatRegex);\r\n    if (numbers) {\r\n        v = v.replace(floatRegex, numberToken);\r\n        values.push(...numbers.map(number.parse));\r\n    }\r\n    return { values, numColors, tokenised: v };\r\n}\r\nfunction parse(v) {\r\n    return analyse(v).values;\r\n}\r\nfunction createTransformer(v) {\r\n    const { values, numColors, tokenised } = analyse(v);\r\n    const numValues = values.length;\r\n    return (v) => {\r\n        let output = tokenised;\r\n        for (let i = 0; i < numValues; i++) {\r\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors ? color.transform(v[i]) : sanitize(v[i]));\r\n        }\r\n        return output;\r\n    };\r\n}\r\nconst convertNumbersToZero = (v) => typeof v === 'number' ? 0 : v;\r\nfunction getAnimatableNone(v) {\r\n    const parsed = parse(v);\r\n    const transformer = createTransformer(v);\r\n    return transformer(parsed.map(convertNumbersToZero));\r\n}\r\nconst complex = { test, parse, createTransformer, getAnimatableNone };\r\n\r\nexport { complex };\r\n", "import { complex } from './index.mjs';\r\nimport { floatRegex } from '../utils.mjs';\r\n\r\nconst maxDefaults = new Set(['brightness', 'contrast', 'saturate', 'opacity']);\r\nfunction applyDefaultFilter(v) {\r\n    let [name, value] = v.slice(0, -1).split('(');\r\n    if (name === 'drop-shadow')\r\n        return v;\r\n    const [number] = value.match(floatRegex) || [];\r\n    if (!number)\r\n        return v;\r\n    const unit = value.replace(number, '');\r\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\r\n    if (number !== value)\r\n        defaultValue *= 100;\r\n    return name + '(' + defaultValue + unit + ')';\r\n}\r\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\r\nconst filter = Object.assign(Object.assign({}, complex), { getAnimatableNone: (v) => {\r\n        const functions = v.match(functionRegex);\r\n        return functions ? functions.map(applyDefaultFilter).join(' ') : v;\r\n    } });\r\n\r\nexport { filter };\r\n", "function hueToRgb(p, q, t) {\r\n    if (t < 0)\r\n        t += 1;\r\n    if (t > 1)\r\n        t -= 1;\r\n    if (t < 1 / 6)\r\n        return p + (q - p) * 6 * t;\r\n    if (t < 1 / 2)\r\n        return q;\r\n    if (t < 2 / 3)\r\n        return p + (q - p) * (2 / 3 - t) * 6;\r\n    return p;\r\n}\r\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\r\n    hue /= 360;\r\n    saturation /= 100;\r\n    lightness /= 100;\r\n    let red = 0;\r\n    let green = 0;\r\n    let blue = 0;\r\n    if (!saturation) {\r\n        red = green = blue = lightness;\r\n    }\r\n    else {\r\n        const q = lightness < 0.5\r\n            ? lightness * (1 + saturation)\r\n            : lightness + saturation - lightness * saturation;\r\n        const p = 2 * lightness - q;\r\n        red = hueToRgb(p, q, hue + 1 / 3);\r\n        green = hueToRgb(p, q, hue);\r\n        blue = hueToRgb(p, q, hue - 1 / 3);\r\n    }\r\n    return {\r\n        red: Math.round(red * 255),\r\n        green: Math.round(green * 255),\r\n        blue: Math.round(blue * 255),\r\n        alpha,\r\n    };\r\n}\r\n\r\nexport { hslaToRgba };\r\n", "import { mix } from './mix.mjs';\r\nimport { hsla, rgba, hex } from 'style-value-types';\r\nimport { invariant } from 'hey-listen';\r\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\r\n\r\nconst mixLinearColor = (from, to, v) => {\r\n    const fromExpo = from * from;\r\n    const toExpo = to * to;\r\n    return Math.sqrt(Math.max(0, v * (toExpo - fromExpo) + fromExpo));\r\n};\r\nconst colorTypes = [hex, rgba, hsla];\r\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\r\nconst notAnimatable = (color) => `'${color}' is not an animatable color. Use the equivalent color code instead.`;\r\nconst mixColor = (from, to) => {\r\n    let fromColorType = getColorType(from);\r\n    let toColorType = getColorType(to);\r\n    invariant(!!fromColorType, notAnimatable(from));\r\n    invariant(!!toColorType, notAnimatable(to));\r\n    let fromColor = fromColorType.parse(from);\r\n    let toColor = toColorType.parse(to);\r\n    if (fromColorType === hsla) {\r\n        fromColor = hslaToRgba(fromColor);\r\n        fromColorType = rgba;\r\n    }\r\n    if (toColorType === hsla) {\r\n        toColor = hslaToRgba(toColor);\r\n        toColorType = rgba;\r\n    }\r\n    const blended = Object.assign({}, fromColor);\r\n    return (v) => {\r\n        for (const key in blended) {\r\n            if (key !== \"alpha\") {\r\n                blended[key] = mixLinearColor(fromColor[key], toColor[key], v);\r\n            }\r\n        }\r\n        blended.alpha = mix(fromColor.alpha, toColor.alpha, v);\r\n        return fromColorType.transform(blended);\r\n    };\r\n};\r\n\r\nexport { mixColor, mixLinearColor };\r\n", "const zeroPoint = {\r\n    x: 0,\r\n    y: 0,\r\n    z: 0\r\n};\r\nconst isNum = (v) => typeof v === 'number';\r\n\r\nexport { isNum, zeroPoint };\r\n", "const combineFunctions = (a, b) => (v) => b(a(v));\r\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\r\n\r\nexport { pipe };\r\n", "import { complex, color } from 'style-value-types';\r\nimport { mix } from './mix.mjs';\r\nimport { mixColor } from './mix-color.mjs';\r\nimport { isNum } from './inc.mjs';\r\nimport { pipe } from './pipe.mjs';\r\nimport { warning } from 'hey-listen';\r\n\r\nfunction getMixer(origin, target) {\r\n    if (isNum(origin)) {\r\n        return (v) => mix(origin, target, v);\r\n    }\r\n    else if (color.test(origin)) {\r\n        return mixColor(origin, target);\r\n    }\r\n    else {\r\n        return mixComplex(origin, target);\r\n    }\r\n}\r\nconst mixArray = (from, to) => {\r\n    const output = [...from];\r\n    const numValues = output.length;\r\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\r\n    return (v) => {\r\n        for (let i = 0; i < numValues; i++) {\r\n            output[i] = blendValue[i](v);\r\n        }\r\n        return output;\r\n    };\r\n};\r\nconst mixObject = (origin, target) => {\r\n    const output = Object.assign(Object.assign({}, origin), target);\r\n    const blendValue = {};\r\n    for (const key in output) {\r\n        if (origin[key] !== undefined && target[key] !== undefined) {\r\n            blendValue[key] = getMixer(origin[key], target[key]);\r\n        }\r\n    }\r\n    return (v) => {\r\n        for (const key in blendValue) {\r\n            output[key] = blendValue[key](v);\r\n        }\r\n        return output;\r\n    };\r\n};\r\nfunction analyse(value) {\r\n    const parsed = complex.parse(value);\r\n    const numValues = parsed.length;\r\n    let numNumbers = 0;\r\n    let numRGB = 0;\r\n    let numHSL = 0;\r\n    for (let i = 0; i < numValues; i++) {\r\n        if (numNumbers || typeof parsed[i] === \"number\") {\r\n            numNumbers++;\r\n        }\r\n        else {\r\n            if (parsed[i].hue !== undefined) {\r\n                numHSL++;\r\n            }\r\n            else {\r\n                numRGB++;\r\n            }\r\n        }\r\n    }\r\n    return { parsed, numNumbers, numRGB, numHSL };\r\n}\r\nconst mixComplex = (origin, target) => {\r\n    const template = complex.createTransformer(target);\r\n    const originStats = analyse(origin);\r\n    const targetStats = analyse(target);\r\n    const canInterpolate = originStats.numHSL === targetStats.numHSL &&\r\n        originStats.numRGB === targetStats.numRGB &&\r\n        originStats.numNumbers >= targetStats.numNumbers;\r\n    if (canInterpolate) {\r\n        return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\r\n    }\r\n    else {\r\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\r\n        return (p) => `${p > 0 ? target : origin}`;\r\n    }\r\n};\r\n\r\nexport { mixArray, mixComplex, mixObject };\r\n", "import { progress } from './progress.mjs';\r\nimport { mix } from './mix.mjs';\r\nimport { mixColor } from './mix-color.mjs';\r\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\r\nimport { color } from 'style-value-types';\r\nimport { clamp } from './clamp.mjs';\r\nimport { pipe } from './pipe.mjs';\r\nimport { invariant } from 'hey-listen';\r\n\r\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\r\nfunction detectMixerFactory(v) {\r\n    if (typeof v === 'number') {\r\n        return mixNumber;\r\n    }\r\n    else if (typeof v === 'string') {\r\n        if (color.test(v)) {\r\n            return mixColor;\r\n        }\r\n        else {\r\n            return mixComplex;\r\n        }\r\n    }\r\n    else if (Array.isArray(v)) {\r\n        return mixArray;\r\n    }\r\n    else if (typeof v === 'object') {\r\n        return mixObject;\r\n    }\r\n}\r\nfunction createMixers(output, ease, customMixer) {\r\n    const mixers = [];\r\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\r\n    const numMixers = output.length - 1;\r\n    for (let i = 0; i < numMixers; i++) {\r\n        let mixer = mixerFactory(output[i], output[i + 1]);\r\n        if (ease) {\r\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\r\n            mixer = pipe(easingFunction, mixer);\r\n        }\r\n        mixers.push(mixer);\r\n    }\r\n    return mixers;\r\n}\r\nfunction fastInterpolate([from, to], [mixer]) {\r\n    return (v) => mixer(progress(from, to, v));\r\n}\r\nfunction slowInterpolate(input, mixers) {\r\n    const inputLength = input.length;\r\n    const lastInputIndex = inputLength - 1;\r\n    return (v) => {\r\n        let mixerIndex = 0;\r\n        let foundMixerIndex = false;\r\n        if (v <= input[0]) {\r\n            foundMixerIndex = true;\r\n        }\r\n        else if (v >= input[lastInputIndex]) {\r\n            mixerIndex = lastInputIndex - 1;\r\n            foundMixerIndex = true;\r\n        }\r\n        if (!foundMixerIndex) {\r\n            let i = 1;\r\n            for (; i < inputLength; i++) {\r\n                if (input[i] > v || i === lastInputIndex) {\r\n                    break;\r\n                }\r\n            }\r\n            mixerIndex = i - 1;\r\n        }\r\n        const progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);\r\n        return mixers[mixerIndex](progressInRange);\r\n    };\r\n}\r\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\r\n    const inputLength = input.length;\r\n    invariant(inputLength === output.length, 'Both input and output ranges must be the same length');\r\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');\r\n    if (input[0] > input[inputLength - 1]) {\r\n        input = [].concat(input);\r\n        output = [].concat(output);\r\n        input.reverse();\r\n        output.reverse();\r\n    }\r\n    const mixers = createMixers(output, ease, mixer);\r\n    const interpolator = inputLength === 2\r\n        ? fastInterpolate(input, mixers)\r\n        : slowInterpolate(input, mixers);\r\n    return isClamp\r\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\r\n        : interpolator;\r\n}\r\n\r\nexport { interpolate };\r\n", "const reverseEasing = easing => p => 1 - easing(1 - p);\r\nconst mirrorEasing = easing => p => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\r\nconst createExpoIn = (power) => p => Math.pow(p, power);\r\nconst createBackIn = (power) => p => p * p * ((power + 1) * p - power);\r\nconst createAnticipate = (power) => {\r\n    const backEasing = createBackIn(power);\r\n    return p => (p *= 2) < 1\r\n        ? 0.5 * backEasing(p)\r\n        : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\r\n};\r\n\r\nexport { createAnticipate, createBackIn, createExpoIn, mirrorEasing, reverseEasing };\r\n", "import { createExpoIn, reverseEasing, mirrorEasing, createBackIn, createAnticipate } from './utils.mjs';\r\n\r\nconst DEFAULT_OVERSHOOT_STRENGTH = 1.525;\r\nconst BOUNCE_FIRST_THRESHOLD = 4.0 / 11.0;\r\nconst BOUNCE_SECOND_THRESHOLD = 8.0 / 11.0;\r\nconst BOUNCE_THIRD_THRESHOLD = 9.0 / 10.0;\r\nconst linear = p => p;\r\nconst easeIn = createExpoIn(2);\r\nconst easeOut = reverseEasing(easeIn);\r\nconst easeInOut = mirrorEasing(easeIn);\r\nconst circIn = p => 1 - Math.sin(Math.acos(p));\r\nconst circOut = reverseEasing(circIn);\r\nconst circInOut = mirrorEasing(circOut);\r\nconst backIn = createBackIn(DEFAULT_OVERSHOOT_STRENGTH);\r\nconst backOut = reverseEasing(backIn);\r\nconst backInOut = mirrorEasing(backIn);\r\nconst anticipate = createAnticipate(DEFAULT_OVERSHOOT_STRENGTH);\r\nconst ca = 4356.0 / 361.0;\r\nconst cb = 35442.0 / 1805.0;\r\nconst cc = 16061.0 / 1805.0;\r\nconst bounceOut = (p) => {\r\n    if (p === 1 || p === 0)\r\n        return p;\r\n    const p2 = p * p;\r\n    return p < BOUNCE_FIRST_THRESHOLD\r\n        ? 7.5625 * p2\r\n        : p < BOUNCE_SECOND_THRESHOLD\r\n            ? 9.075 * p2 - 9.9 * p + 3.4\r\n            : p < BOUNCE_THIRD_THRESHOLD\r\n                ? ca * p2 - cb * p + cc\r\n                : 10.8 * p * p - 20.52 * p + 10.72;\r\n};\r\nconst bounceIn = reverseEasing(bounceOut);\r\nconst bounceInOut = (p) => p < 0.5\r\n    ? 0.5 * (1.0 - bounceOut(1.0 - p * 2.0))\r\n    : 0.5 * bounceOut(p * 2.0 - 1.0) + 0.5;\r\n\r\nexport { anticipate, backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, easeIn, easeInOut, easeOut, linear };\r\n", "import { interpolate } from '../../utils/interpolate.mjs';\r\nimport { easeInOut } from '../../easing/index.mjs';\r\n\r\nfunction defaultEasing(values, easing) {\r\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\r\n}\r\nfunction defaultOffset(values) {\r\n    const numValues = values.length;\r\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\r\n}\r\nfunction convertOffsetToTimes(offset, duration) {\r\n    return offset.map((o) => o * duration);\r\n}\r\nfunction keyframes({ from = 0, to = 1, ease, offset, duration = 300, }) {\r\n    const state = { done: false, value: from };\r\n    const values = Array.isArray(to) ? to : [from, to];\r\n    const times = convertOffsetToTimes(offset && offset.length === values.length\r\n        ? offset\r\n        : defaultOffset(values), duration);\r\n    function createInterpolator() {\r\n        return interpolate(times, values, {\r\n            ease: Array.isArray(ease) ? ease : defaultEasing(values, ease),\r\n        });\r\n    }\r\n    let interpolator = createInterpolator();\r\n    return {\r\n        next: (t) => {\r\n            state.value = interpolator(t);\r\n            state.done = t >= duration;\r\n            return state;\r\n        },\r\n        flipTarget: () => {\r\n            values.reverse();\r\n            interpolator = createInterpolator();\r\n        },\r\n    };\r\n}\r\n\r\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\r\n", "function decay({ velocity = 0, from = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\r\n    const state = { done: false, value: from };\r\n    let amplitude = power * velocity;\r\n    const ideal = from + amplitude;\r\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\r\n    if (target !== ideal)\r\n        amplitude = target - from;\r\n    return {\r\n        next: (t) => {\r\n            const delta = -amplitude * Math.exp(-t / timeConstant);\r\n            state.done = !(delta > restDelta || delta < -restDelta);\r\n            state.value = state.done ? target : target + delta;\r\n            return state;\r\n        },\r\n        flipTarget: () => { },\r\n    };\r\n}\r\n\r\nexport { decay };\r\n", "import { spring } from '../generators/spring.mjs';\r\nimport { keyframes } from '../generators/keyframes.mjs';\r\nimport { decay } from '../generators/decay.mjs';\r\n\r\nconst types = { keyframes, spring, decay };\r\nfunction detectAnimationFromOptions(config) {\r\n    if (Array.isArray(config.to)) {\r\n        return keyframes;\r\n    }\r\n    else if (types[config.type]) {\r\n        return types[config.type];\r\n    }\r\n    const keys = new Set(Object.keys(config));\r\n    if (keys.has(\"ease\") ||\r\n        (keys.has(\"duration\") && !keys.has(\"dampingRatio\"))) {\r\n        return keyframes;\r\n    }\r\n    else if (keys.has(\"dampingRatio\") ||\r\n        keys.has(\"stiffness\") ||\r\n        keys.has(\"mass\") ||\r\n        keys.has(\"damping\") ||\r\n        keys.has(\"restSpeed\") ||\r\n        keys.has(\"restDelta\")) {\r\n        return spring;\r\n    }\r\n    return keyframes;\r\n}\r\n\r\nexport { detectAnimationFromOptions };\r\n", "function loopElapsed(elapsed, duration, delay = 0) {\r\n    return elapsed - duration - delay;\r\n}\r\nfunction reverseElapsed(elapsed, duration, delay = 0, isForwardPlayback = true) {\r\n    return isForwardPlayback\r\n        ? loopElapsed(duration + -elapsed, duration, delay)\r\n        : duration - (elapsed - duration) + delay;\r\n}\r\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\r\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\r\n}\r\n\r\nexport { hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\r\n", "import { __rest } from 'tslib';\r\nimport { detectAnimationFromOptions } from './utils/detect-animation-from-options.mjs';\r\nimport sync, { cancelSync } from 'framesync';\r\nimport { interpolate } from '../utils/interpolate.mjs';\r\nimport { hasRepeatDelayElapsed, reverseElapsed, loopElapsed } from './utils/elapsed.mjs';\r\n\r\nconst framesync = (update) => {\r\n    const passTimestamp = ({ delta }) => update(delta);\r\n    return {\r\n        start: () => sync.update(passTimestamp, true),\r\n        stop: () => cancelSync.update(passTimestamp),\r\n    };\r\n};\r\nfunction animate(_a) {\r\n    var _b, _c;\r\n    var { from, autoplay = true, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, onPlay, onStop, onComplete, onRepeat, onUpdate } = _a, options = __rest(_a, [\"from\", \"autoplay\", \"driver\", \"elapsed\", \"repeat\", \"repeatType\", \"repeatDelay\", \"onPlay\", \"onStop\", \"onComplete\", \"onRepeat\", \"onUpdate\"]);\r\n    let { to } = options;\r\n    let driverControls;\r\n    let repeatCount = 0;\r\n    let computedDuration = options.duration;\r\n    let latest;\r\n    let isComplete = false;\r\n    let isForwardPlayback = true;\r\n    let interpolateFromNumber;\r\n    const animator = detectAnimationFromOptions(options);\r\n    if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {\r\n        interpolateFromNumber = interpolate([0, 100], [from, to], {\r\n            clamp: false,\r\n        });\r\n        from = 0;\r\n        to = 100;\r\n    }\r\n    const animation = animator(Object.assign(Object.assign({}, options), { from, to }));\r\n    function repeat() {\r\n        repeatCount++;\r\n        if (repeatType === \"reverse\") {\r\n            isForwardPlayback = repeatCount % 2 === 0;\r\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\r\n        }\r\n        else {\r\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\r\n            if (repeatType === \"mirror\")\r\n                animation.flipTarget();\r\n        }\r\n        isComplete = false;\r\n        onRepeat && onRepeat();\r\n    }\r\n    function complete() {\r\n        driverControls.stop();\r\n        onComplete && onComplete();\r\n    }\r\n    function update(delta) {\r\n        if (!isForwardPlayback)\r\n            delta = -delta;\r\n        elapsed += delta;\r\n        if (!isComplete) {\r\n            const state = animation.next(Math.max(0, elapsed));\r\n            latest = state.value;\r\n            if (interpolateFromNumber)\r\n                latest = interpolateFromNumber(latest);\r\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\r\n        }\r\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\r\n        if (isComplete) {\r\n            if (repeatCount === 0)\r\n                computedDuration !== null && computedDuration !== void 0 ? computedDuration : (computedDuration = elapsed);\r\n            if (repeatCount < repeatMax) {\r\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\r\n            }\r\n            else {\r\n                complete();\r\n            }\r\n        }\r\n    }\r\n    function play() {\r\n        onPlay === null || onPlay === void 0 ? void 0 : onPlay();\r\n        driverControls = driver(update);\r\n        driverControls.start();\r\n    }\r\n    autoplay && play();\r\n    return {\r\n        stop: () => {\r\n            onStop === null || onStop === void 0 ? void 0 : onStop();\r\n            driverControls.stop();\r\n        },\r\n    };\r\n}\r\n\r\nexport { animate };\r\n", "function velocityPerSecond(velocity, frameDuration) {\r\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\r\n}\r\n\r\nexport { velocityPerSecond };\r\n", "import { animate } from './index.mjs';\r\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\r\nimport { getFrameData } from 'framesync';\r\n\r\nfunction inertia({ from = 0, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\r\n    let currentAnimation;\r\n    function isOutOfBounds(v) {\r\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\r\n    }\r\n    function boundaryNearest(v) {\r\n        if (min === undefined)\r\n            return max;\r\n        if (max === undefined)\r\n            return min;\r\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\r\n    }\r\n    function startAnimation(options) {\r\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\r\n        currentAnimation = animate(Object.assign(Object.assign({}, options), { driver, onUpdate: (v) => {\r\n                var _a;\r\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\r\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\r\n            }, onComplete,\r\n            onStop }));\r\n    }\r\n    function startSpring(options) {\r\n        startAnimation(Object.assign({ type: \"spring\", stiffness: bounceStiffness, damping: bounceDamping, restDelta }, options));\r\n    }\r\n    if (isOutOfBounds(from)) {\r\n        startSpring({ from, velocity, to: boundaryNearest(from) });\r\n    }\r\n    else {\r\n        let target = power * velocity + from;\r\n        if (typeof modifyTarget !== \"undefined\")\r\n            target = modifyTarget(target);\r\n        const boundary = boundaryNearest(target);\r\n        const heading = boundary === min ? -1 : 1;\r\n        let prev;\r\n        let current;\r\n        const checkBoundary = (v) => {\r\n            prev = current;\r\n            current = v;\r\n            velocity = velocityPerSecond(v - prev, getFrameData().delta);\r\n            if ((heading === 1 && v > boundary) ||\r\n                (heading === -1 && v < boundary)) {\r\n                startSpring({ from: v, to: boundary, velocity });\r\n            }\r\n        };\r\n        startAnimation({\r\n            type: \"decay\",\r\n            from,\r\n            velocity,\r\n            timeConstant,\r\n            power,\r\n            restDelta,\r\n            modifyTarget,\r\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\r\n        });\r\n    }\r\n    return {\r\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\r\n    };\r\n}\r\n\r\nexport { inertia };\r\n", "const identity = (v) => v;\r\nconst createAttractor = (alterDisplacement = identity) => (constant, origin, v) => {\r\n    const displacement = origin - v;\r\n    const springModifiedDisplacement = -(0 - constant + 1) * (0 - alterDisplacement(Math.abs(displacement)));\r\n    return displacement <= 0\r\n        ? origin + springModifiedDisplacement\r\n        : origin - springModifiedDisplacement;\r\n};\r\nconst attract = createAttractor();\r\nconst attractExpo = createAttractor(Math.sqrt);\r\n\r\nexport { attract, attractExpo, createAttractor };\r\n", "import { linear } from './index.mjs';\r\n\r\nconst a = (a1, a2) => 1.0 - 3.0 * a2 + 3.0 * a1;\r\nconst b = (a1, a2) => 3.0 * a2 - 6.0 * a1;\r\nconst c = (a1) => 3.0 * a1;\r\nconst calcBezier = (t, a1, a2) => ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\r\nconst getSlope = (t, a1, a2) => 3.0 * a(a1, a2) * t * t + 2.0 * b(a1, a2) * t + c(a1);\r\nconst subdivisionPrecision = 0.0000001;\r\nconst subdivisionMaxIterations = 10;\r\nfunction binarySubdivide(aX, aA, aB, mX1, mX2) {\r\n    let currentX;\r\n    let currentT;\r\n    let i = 0;\r\n    do {\r\n        currentT = aA + (aB - aA) / 2.0;\r\n        currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n        if (currentX > 0.0) {\r\n            aB = currentT;\r\n        }\r\n        else {\r\n            aA = currentT;\r\n        }\r\n    } while (Math.abs(currentX) > subdivisionPrecision &&\r\n        ++i < subdivisionMaxIterations);\r\n    return currentT;\r\n}\r\nconst newtonIterations = 8;\r\nconst newtonMinSlope = 0.001;\r\nfunction newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\r\n    for (let i = 0; i < newtonIterations; ++i) {\r\n        const currentSlope = getSlope(aGuessT, mX1, mX2);\r\n        if (currentSlope === 0.0) {\r\n            return aGuessT;\r\n        }\r\n        const currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n        aGuessT -= currentX / currentSlope;\r\n    }\r\n    return aGuessT;\r\n}\r\nconst kSplineTableSize = 11;\r\nconst kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\r\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\r\n    if (mX1 === mY1 && mX2 === mY2)\r\n        return linear;\r\n    const sampleValues = new Float32Array(kSplineTableSize);\r\n    for (let i = 0; i < kSplineTableSize; ++i) {\r\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n    }\r\n    function getTForX(aX) {\r\n        let intervalStart = 0.0;\r\n        let currentSample = 1;\r\n        const lastSample = kSplineTableSize - 1;\r\n        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\r\n            intervalStart += kSampleStepSize;\r\n        }\r\n        --currentSample;\r\n        const dist = (aX - sampleValues[currentSample]) /\r\n            (sampleValues[currentSample + 1] - sampleValues[currentSample]);\r\n        const guessForT = intervalStart + dist * kSampleStepSize;\r\n        const initialSlope = getSlope(guessForT, mX1, mX2);\r\n        if (initialSlope >= newtonMinSlope) {\r\n            return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\r\n        }\r\n        else if (initialSlope === 0.0) {\r\n            return guessForT;\r\n        }\r\n        else {\r\n            return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\r\n        }\r\n    }\r\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\r\n}\r\n\r\nexport { cubicBezier };\r\n", "import defu from 'defu';\r\nimport { ref, unref, watch, computed, reactive, defineComponent, useSlots, h, resolveComponent, onUpdated, isRef } from 'vue';\r\nimport { isObject, useEventListener, useIntersectionObserver, unrefElement, useMediaQuery } from '@vueuse/core';\r\nimport { tryOnUnmounted } from '@vueuse/shared';\r\nimport sync, { getFrameData } from 'framesync';\r\nimport { velocityPerSecond, inertia, animate, cubicBezier, linear, easeIn, easeInOut, easeOut, circIn, circInOut, circOut, backIn, backInOut, backOut, anticipate, bounceIn, bounceInOut, bounceOut } from 'popmotion';\r\nimport { number, color, px, degrees, scale, alpha, progressPercentage, filter, complex } from 'style-value-types';\r\nimport { isHTMLTag } from '@vue/shared';\r\n\r\nconst motionState = {};\r\n\r\nvar __defProp$1 = Object.defineProperty;\r\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __publicField$1 = (obj, key, value) => {\r\n  __defNormalProp$1(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\r\n  return value;\r\n};\r\nclass SubscriptionManager {\r\n  constructor() {\r\n    __publicField$1(this, \"subscriptions\", /* @__PURE__ */ new Set());\r\n  }\r\n  add(handler) {\r\n    this.subscriptions.add(handler);\r\n    return () => this.subscriptions.delete(handler);\r\n  }\r\n  notify(a, b, c) {\r\n    if (!this.subscriptions.size)\r\n      return;\r\n    for (const handler of this.subscriptions)\r\n      handler(a, b, c);\r\n  }\r\n  clear() {\r\n    this.subscriptions.clear();\r\n  }\r\n}\r\n\r\nvar __defProp = Object.defineProperty;\r\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __publicField = (obj, key, value) => {\r\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\r\n  return value;\r\n};\r\nfunction isFloat(value) {\r\n  return !isNaN(parseFloat(value));\r\n}\r\nclass MotionValue {\r\n  /**\r\n   * @param init - The initiating value\r\n   * @param config - Optional configuration options\r\n   */\r\n  constructor(init) {\r\n    /**\r\n     * The current state of the `MotionValue`.\r\n     */\r\n    __publicField(this, \"current\");\r\n    /**\r\n     * The previous state of the `MotionValue`.\r\n     */\r\n    __publicField(this, \"prev\");\r\n    /**\r\n     * Duration, in milliseconds, since last updating frame.\r\n     */\r\n    __publicField(this, \"timeDelta\", 0);\r\n    /**\r\n     * Timestamp of the last time this `MotionValue` was updated.\r\n     */\r\n    __publicField(this, \"lastUpdated\", 0);\r\n    /**\r\n     * Functions to notify when the `MotionValue` updates.\r\n     */\r\n    __publicField(this, \"updateSubscribers\", new SubscriptionManager());\r\n    /**\r\n     * A reference to the currently-controlling Popmotion animation\r\n     */\r\n    __publicField(this, \"stopAnimation\");\r\n    /**\r\n     * Tracks whether this value can output a velocity.\r\n     */\r\n    __publicField(this, \"canTrackVelocity\", false);\r\n    /**\r\n     * Update and notify `MotionValue` subscribers.\r\n     *\r\n     * @param v\r\n     * @param render\r\n     */\r\n    __publicField(this, \"updateAndNotify\", (v) => {\r\n      this.prev = this.current;\r\n      this.current = v;\r\n      const { delta, timestamp } = getFrameData();\r\n      if (this.lastUpdated !== timestamp) {\r\n        this.timeDelta = delta;\r\n        this.lastUpdated = timestamp;\r\n      }\r\n      sync.postRender(this.scheduleVelocityCheck);\r\n      this.updateSubscribers.notify(this.current);\r\n    });\r\n    /**\r\n     * Schedule a velocity check for the next frame.\r\n     */\r\n    __publicField(this, \"scheduleVelocityCheck\", () => sync.postRender(this.velocityCheck));\r\n    /**\r\n     * Updates `prev` with `current` if the value hasn't been updated this frame.\r\n     * This ensures velocity calculations return `0`.\r\n     */\r\n    __publicField(this, \"velocityCheck\", ({ timestamp }) => {\r\n      if (!this.canTrackVelocity)\r\n        this.canTrackVelocity = isFloat(this.current);\r\n      if (timestamp !== this.lastUpdated)\r\n        this.prev = this.current;\r\n    });\r\n    this.prev = this.current = init;\r\n    this.canTrackVelocity = isFloat(this.current);\r\n  }\r\n  /**\r\n   * Adds a function that will be notified when the `MotionValue` is updated.\r\n   *\r\n   * It returns a function that, when called, will cancel the subscription.\r\n   */\r\n  onChange(subscription) {\r\n    return this.updateSubscribers.add(subscription);\r\n  }\r\n  clearListeners() {\r\n    this.updateSubscribers.clear();\r\n  }\r\n  /**\r\n   * Sets the state of the `MotionValue`.\r\n   *\r\n   * @param v\r\n   * @param render\r\n   */\r\n  set(v) {\r\n    this.updateAndNotify(v);\r\n  }\r\n  /**\r\n   * Returns the latest state of `MotionValue`\r\n   *\r\n   * @returns - The latest state of `MotionValue`\r\n   */\r\n  get() {\r\n    return this.current;\r\n  }\r\n  /**\r\n   * Get previous value.\r\n   *\r\n   * @returns - The previous latest state of `MotionValue`\r\n   */\r\n  getPrevious() {\r\n    return this.prev;\r\n  }\r\n  /**\r\n   * Returns the latest velocity of `MotionValue`\r\n   *\r\n   * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\r\n   */\r\n  getVelocity() {\r\n    return this.canTrackVelocity ? velocityPerSecond(parseFloat(this.current) - parseFloat(this.prev), this.timeDelta) : 0;\r\n  }\r\n  /**\r\n   * Registers a new animation to control this `MotionValue`. Only one\r\n   * animation can drive a `MotionValue` at one time.\r\n   */\r\n  start(animation) {\r\n    this.stop();\r\n    return new Promise((resolve) => {\r\n      const { stop } = animation(resolve);\r\n      this.stopAnimation = stop;\r\n    }).then(() => this.clearAnimation());\r\n  }\r\n  /**\r\n   * Stop the currently active animation.\r\n   */\r\n  stop() {\r\n    if (this.stopAnimation)\r\n      this.stopAnimation();\r\n    this.clearAnimation();\r\n  }\r\n  /**\r\n   * Returns `true` if this value is currently animating.\r\n   */\r\n  isAnimating() {\r\n    return !!this.stopAnimation;\r\n  }\r\n  /**\r\n   * Clear the current animation reference.\r\n   */\r\n  clearAnimation() {\r\n    this.stopAnimation = null;\r\n  }\r\n  /**\r\n   * Destroy and clean up subscribers to this `MotionValue`.\r\n   */\r\n  destroy() {\r\n    this.updateSubscribers.clear();\r\n    this.stop();\r\n  }\r\n}\r\nfunction getMotionValue(init) {\r\n  return new MotionValue(init);\r\n}\r\n\r\nconst { isArray } = Array;\r\nfunction useMotionValues() {\r\n  const motionValues = ref({});\r\n  const stop = (keys) => {\r\n    const destroyKey = (key) => {\r\n      if (!motionValues.value[key])\r\n        return;\r\n      motionValues.value[key].stop();\r\n      motionValues.value[key].destroy();\r\n      delete motionValues.value[key];\r\n    };\r\n    if (keys) {\r\n      if (isArray(keys)) {\r\n        keys.forEach(destroyKey);\r\n      } else {\r\n        destroyKey(keys);\r\n      }\r\n    } else {\r\n      Object.keys(motionValues.value).forEach(destroyKey);\r\n    }\r\n  };\r\n  const get = (key, from, target) => {\r\n    if (motionValues.value[key])\r\n      return motionValues.value[key];\r\n    const motionValue = getMotionValue(from);\r\n    motionValue.onChange((v) => target[key] = v);\r\n    motionValues.value[key] = motionValue;\r\n    return motionValue;\r\n  };\r\n  tryOnUnmounted(stop);\r\n  return {\r\n    motionValues,\r\n    get,\r\n    stop\r\n  };\r\n}\r\n\r\nfunction isKeyframesTarget(v) {\r\n  return Array.isArray(v);\r\n}\r\nfunction underDampedSpring() {\r\n  return {\r\n    type: \"spring\",\r\n    stiffness: 500,\r\n    damping: 25,\r\n    restDelta: 0.5,\r\n    restSpeed: 10\r\n  };\r\n}\r\nfunction criticallyDampedSpring(to) {\r\n  return {\r\n    type: \"spring\",\r\n    stiffness: 550,\r\n    damping: to === 0 ? 2 * Math.sqrt(550) : 30,\r\n    restDelta: 0.01,\r\n    restSpeed: 10\r\n  };\r\n}\r\nfunction overDampedSpring(to) {\r\n  return {\r\n    type: \"spring\",\r\n    stiffness: 550,\r\n    damping: to === 0 ? 100 : 30,\r\n    restDelta: 0.01,\r\n    restSpeed: 10\r\n  };\r\n}\r\nfunction linearTween() {\r\n  return {\r\n    type: \"keyframes\",\r\n    ease: \"linear\",\r\n    duration: 300\r\n  };\r\n}\r\nfunction keyframes(values) {\r\n  return {\r\n    type: \"keyframes\",\r\n    duration: 800,\r\n    values\r\n  };\r\n}\r\nconst defaultTransitions = {\r\n  default: overDampedSpring,\r\n  x: underDampedSpring,\r\n  y: underDampedSpring,\r\n  z: underDampedSpring,\r\n  rotate: underDampedSpring,\r\n  rotateX: underDampedSpring,\r\n  rotateY: underDampedSpring,\r\n  rotateZ: underDampedSpring,\r\n  scaleX: criticallyDampedSpring,\r\n  scaleY: criticallyDampedSpring,\r\n  scale: criticallyDampedSpring,\r\n  backgroundColor: linearTween,\r\n  color: linearTween,\r\n  opacity: linearTween\r\n};\r\nfunction getDefaultTransition(valueKey, to) {\r\n  let transitionFactory;\r\n  if (isKeyframesTarget(to)) {\r\n    transitionFactory = keyframes;\r\n  } else {\r\n    transitionFactory = defaultTransitions[valueKey] || defaultTransitions.default;\r\n  }\r\n  return { to, ...transitionFactory(to) };\r\n}\r\n\r\nconst int = {\r\n  ...number,\r\n  transform: Math.round\r\n};\r\nconst valueTypes = {\r\n  // Color props\r\n  color,\r\n  backgroundColor: color,\r\n  outlineColor: color,\r\n  fill: color,\r\n  stroke: color,\r\n  // Border props\r\n  borderColor: color,\r\n  borderTopColor: color,\r\n  borderRightColor: color,\r\n  borderBottomColor: color,\r\n  borderLeftColor: color,\r\n  borderWidth: px,\r\n  borderTopWidth: px,\r\n  borderRightWidth: px,\r\n  borderBottomWidth: px,\r\n  borderLeftWidth: px,\r\n  borderRadius: px,\r\n  radius: px,\r\n  borderTopLeftRadius: px,\r\n  borderTopRightRadius: px,\r\n  borderBottomRightRadius: px,\r\n  borderBottomLeftRadius: px,\r\n  // Positioning props\r\n  width: px,\r\n  maxWidth: px,\r\n  height: px,\r\n  maxHeight: px,\r\n  size: px,\r\n  top: px,\r\n  right: px,\r\n  bottom: px,\r\n  left: px,\r\n  // Spacing props\r\n  padding: px,\r\n  paddingTop: px,\r\n  paddingRight: px,\r\n  paddingBottom: px,\r\n  paddingLeft: px,\r\n  margin: px,\r\n  marginTop: px,\r\n  marginRight: px,\r\n  marginBottom: px,\r\n  marginLeft: px,\r\n  // Transform props\r\n  rotate: degrees,\r\n  rotateX: degrees,\r\n  rotateY: degrees,\r\n  rotateZ: degrees,\r\n  scale,\r\n  scaleX: scale,\r\n  scaleY: scale,\r\n  scaleZ: scale,\r\n  skew: degrees,\r\n  skewX: degrees,\r\n  skewY: degrees,\r\n  distance: px,\r\n  translateX: px,\r\n  translateY: px,\r\n  translateZ: px,\r\n  x: px,\r\n  y: px,\r\n  z: px,\r\n  perspective: px,\r\n  transformPerspective: px,\r\n  opacity: alpha,\r\n  originX: progressPercentage,\r\n  originY: progressPercentage,\r\n  originZ: px,\r\n  // Misc\r\n  zIndex: int,\r\n  filter,\r\n  WebkitFilter: filter,\r\n  // SVG\r\n  fillOpacity: alpha,\r\n  strokeOpacity: alpha,\r\n  numOctaves: int\r\n};\r\nconst getValueType = (key) => valueTypes[key];\r\nfunction getValueAsType(value, type) {\r\n  return type && typeof value === \"number\" && type.transform ? type.transform(value) : value;\r\n}\r\nfunction getAnimatableNone(key, value) {\r\n  let defaultValueType = getValueType(key);\r\n  if (defaultValueType !== filter)\r\n    defaultValueType = complex;\r\n  return defaultValueType.getAnimatableNone ? defaultValueType.getAnimatableNone(value) : void 0;\r\n}\r\n\r\nconst easingLookup = {\r\n  linear,\r\n  easeIn,\r\n  easeInOut,\r\n  easeOut,\r\n  circIn,\r\n  circInOut,\r\n  circOut,\r\n  backIn,\r\n  backInOut,\r\n  backOut,\r\n  anticipate,\r\n  bounceIn,\r\n  bounceInOut,\r\n  bounceOut\r\n};\r\nfunction easingDefinitionToFunction(definition) {\r\n  if (Array.isArray(definition)) {\r\n    const [x1, y1, x2, y2] = definition;\r\n    return cubicBezier(x1, y1, x2, y2);\r\n  } else if (typeof definition === \"string\") {\r\n    return easingLookup[definition];\r\n  }\r\n  return definition;\r\n}\r\nfunction isEasingArray(ease) {\r\n  return Array.isArray(ease) && typeof ease[0] !== \"number\";\r\n}\r\nfunction isAnimatable(key, value) {\r\n  if (key === \"zIndex\")\r\n    return false;\r\n  if (typeof value === \"number\" || Array.isArray(value))\r\n    return true;\r\n  if (typeof value === \"string\" && // It's animatable if we have a string\r\n  complex.test(value) && // And it contains numbers and/or colors\r\n  !value.startsWith(\"url(\"))\r\n    return true;\r\n  return false;\r\n}\r\nfunction hydrateKeyframes(options) {\r\n  if (Array.isArray(options.to) && options.to[0] === null) {\r\n    options.to = [...options.to];\r\n    options.to[0] = options.from;\r\n  }\r\n  return options;\r\n}\r\nfunction convertTransitionToAnimationOptions({ ease, times, delay, ...transition }) {\r\n  const options = { ...transition };\r\n  if (times)\r\n    options.offset = times;\r\n  if (ease) {\r\n    options.ease = isEasingArray(ease) ? ease.map(easingDefinitionToFunction) : easingDefinitionToFunction(ease);\r\n  }\r\n  if (delay)\r\n    options.elapsed = -delay;\r\n  return options;\r\n}\r\nfunction getPopmotionAnimationOptions(transition, options, key) {\r\n  if (Array.isArray(options.to)) {\r\n    if (!transition.duration)\r\n      transition.duration = 800;\r\n  }\r\n  hydrateKeyframes(options);\r\n  if (!isTransitionDefined(transition)) {\r\n    transition = {\r\n      ...transition,\r\n      ...getDefaultTransition(key, options.to)\r\n    };\r\n  }\r\n  return {\r\n    ...options,\r\n    ...convertTransitionToAnimationOptions(transition)\r\n  };\r\n}\r\nfunction isTransitionDefined({ delay, repeat, repeatType, repeatDelay, from, ...transition }) {\r\n  return !!Object.keys(transition).length;\r\n}\r\nfunction getValueTransition(transition, key) {\r\n  return transition[key] || transition.default || transition;\r\n}\r\nfunction getAnimation(key, value, target, transition, onComplete) {\r\n  const valueTransition = getValueTransition(transition, key);\r\n  let origin = valueTransition.from === null || valueTransition.from === void 0 ? value.get() : valueTransition.from;\r\n  const isTargetAnimatable = isAnimatable(key, target);\r\n  if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\")\r\n    origin = getAnimatableNone(key, target);\r\n  const isOriginAnimatable = isAnimatable(key, origin);\r\n  function start(complete) {\r\n    const options = {\r\n      from: origin,\r\n      to: target,\r\n      velocity: transition.velocity ? transition.velocity : value.getVelocity(),\r\n      onUpdate: (v) => value.set(v)\r\n    };\r\n    return valueTransition.type === \"inertia\" || valueTransition.type === \"decay\" ? inertia({ ...options, ...valueTransition }) : animate({\r\n      ...getPopmotionAnimationOptions(valueTransition, options, key),\r\n      onUpdate: (v) => {\r\n        options.onUpdate(v);\r\n        if (valueTransition.onUpdate)\r\n          valueTransition.onUpdate(v);\r\n      },\r\n      onComplete: () => {\r\n        if (transition.onComplete)\r\n          transition.onComplete();\r\n        if (onComplete)\r\n          onComplete();\r\n        if (complete)\r\n          complete();\r\n      }\r\n    });\r\n  }\r\n  function set(complete) {\r\n    value.set(target);\r\n    if (transition.onComplete)\r\n      transition.onComplete();\r\n    if (onComplete)\r\n      onComplete();\r\n    if (complete)\r\n      complete();\r\n    return { stop: () => {\r\n    } };\r\n  }\r\n  return !isOriginAnimatable || !isTargetAnimatable || valueTransition.type === false ? set : start;\r\n}\r\n\r\nfunction useMotionTransitions() {\r\n  const { motionValues, stop, get } = useMotionValues();\r\n  const push = (key, value, target, transition = {}, onComplete) => {\r\n    const from = target[key];\r\n    const motionValue = get(key, from, target);\r\n    if (transition && transition.immediate) {\r\n      motionValue.set(value);\r\n      return;\r\n    }\r\n    const animation = getAnimation(key, motionValue, value, transition, onComplete);\r\n    motionValue.start(animation);\r\n  };\r\n  return { motionValues, stop, push };\r\n}\r\n\r\nfunction useMotionControls(motionProperties, variants = {}, { motionValues, push, stop } = useMotionTransitions()) {\r\n  const _variants = unref(variants);\r\n  const isAnimating = ref(false);\r\n  watch(\r\n    motionValues,\r\n    (newVal) => {\r\n      isAnimating.value = Object.values(newVal).filter((value) => value.isAnimating()).length > 0;\r\n    },\r\n    {\r\n      immediate: true,\r\n      deep: true\r\n    }\r\n  );\r\n  const getVariantFromKey = (variant) => {\r\n    if (!_variants || !_variants[variant])\r\n      throw new Error(`The variant ${variant} does not exist.`);\r\n    return _variants[variant];\r\n  };\r\n  const apply = (variant) => {\r\n    if (typeof variant === \"string\")\r\n      variant = getVariantFromKey(variant);\r\n    return Promise.all(\r\n      Object.entries(variant).map(([key, value]) => {\r\n        if (key === \"transition\")\r\n          return void 0;\r\n        return new Promise(\r\n          (resolve) => (\r\n            // @ts-expect-error - Fix errors later for typescript 5\r\n            push(key, value, motionProperties, variant.transition || getDefaultTransition(key, variant[key]), resolve)\r\n          )\r\n        );\r\n      }).filter(Boolean)\r\n    );\r\n  };\r\n  const set = (variant) => {\r\n    const variantData = isObject(variant) ? variant : getVariantFromKey(variant);\r\n    Object.entries(variantData).forEach(([key, value]) => {\r\n      if (key === \"transition\")\r\n        return;\r\n      push(key, value, motionProperties, {\r\n        immediate: true\r\n      });\r\n    });\r\n  };\r\n  const leave = async (done) => {\r\n    let leaveVariant;\r\n    if (_variants) {\r\n      if (_variants.leave)\r\n        leaveVariant = _variants.leave;\r\n      if (!_variants.leave && _variants.initial)\r\n        leaveVariant = _variants.initial;\r\n    }\r\n    if (!leaveVariant) {\r\n      done();\r\n      return;\r\n    }\r\n    await apply(leaveVariant);\r\n    done();\r\n  };\r\n  return {\r\n    isAnimating,\r\n    apply,\r\n    set,\r\n    leave,\r\n    stop\r\n  };\r\n}\r\n\r\nconst isBrowser = typeof window !== \"undefined\";\r\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\r\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\r\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\r\n\r\nfunction registerEventListeners({ target, state, variants, apply }) {\r\n  const _variants = unref(variants);\r\n  const hovered = ref(false);\r\n  const tapped = ref(false);\r\n  const focused = ref(false);\r\n  const mutableKeys = computed(() => {\r\n    let result = [];\r\n    if (!_variants)\r\n      return result;\r\n    if (_variants.hovered)\r\n      result = [...result, ...Object.keys(_variants.hovered)];\r\n    if (_variants.tapped)\r\n      result = [...result, ...Object.keys(_variants.tapped)];\r\n    if (_variants.focused)\r\n      result = [...result, ...Object.keys(_variants.focused)];\r\n    return result;\r\n  });\r\n  const computedProperties = computed(() => {\r\n    const result = {};\r\n    Object.assign(result, state.value);\r\n    if (hovered.value && _variants.hovered)\r\n      Object.assign(result, _variants.hovered);\r\n    if (tapped.value && _variants.tapped)\r\n      Object.assign(result, _variants.tapped);\r\n    if (focused.value && _variants.focused)\r\n      Object.assign(result, _variants.focused);\r\n    for (const key in result) {\r\n      if (!mutableKeys.value.includes(key))\r\n        delete result[key];\r\n    }\r\n    return result;\r\n  });\r\n  if (_variants.hovered) {\r\n    useEventListener(target, \"mouseenter\", () => hovered.value = true);\r\n    useEventListener(target, \"mouseleave\", () => {\r\n      hovered.value = false;\r\n      tapped.value = false;\r\n    });\r\n    useEventListener(target, \"mouseout\", () => {\r\n      hovered.value = false;\r\n      tapped.value = false;\r\n    });\r\n  }\r\n  if (_variants.tapped) {\r\n    if (supportsMouseEvents()) {\r\n      useEventListener(target, \"mousedown\", () => tapped.value = true);\r\n      useEventListener(target, \"mouseup\", () => tapped.value = false);\r\n    }\r\n    if (supportsPointerEvents()) {\r\n      useEventListener(target, \"pointerdown\", () => tapped.value = true);\r\n      useEventListener(target, \"pointerup\", () => tapped.value = false);\r\n    }\r\n    if (supportsTouchEvents()) {\r\n      useEventListener(target, \"touchstart\", () => tapped.value = true);\r\n      useEventListener(target, \"touchend\", () => tapped.value = false);\r\n    }\r\n  }\r\n  if (_variants.focused) {\r\n    useEventListener(target, \"focus\", () => focused.value = true);\r\n    useEventListener(target, \"blur\", () => focused.value = false);\r\n  }\r\n  watch(computedProperties, apply);\r\n}\r\n\r\nfunction registerLifeCycleHooks({ set, target, variants, variant }) {\r\n  const _variants = unref(variants);\r\n  watch(\r\n    () => target,\r\n    () => {\r\n      if (!_variants)\r\n        return;\r\n      if (_variants.initial)\r\n        set(\"initial\");\r\n      if (_variants.enter)\r\n        variant.value = \"enter\";\r\n    },\r\n    {\r\n      immediate: true,\r\n      flush: \"pre\"\r\n    }\r\n  );\r\n}\r\n\r\nfunction registerVariantsSync({ state, apply }) {\r\n  watch(\r\n    state,\r\n    (newVal) => {\r\n      if (newVal)\r\n        apply(newVal);\r\n    },\r\n    {\r\n      immediate: true\r\n    }\r\n  );\r\n}\r\n\r\nfunction registerVisibilityHooks({ target, variants, variant }) {\r\n  const _variants = unref(variants);\r\n  if (_variants && (_variants.visible || _variants.visibleOnce)) {\r\n    useIntersectionObserver(target, ([{ isIntersecting }]) => {\r\n      if (_variants.visible) {\r\n        if (isIntersecting)\r\n          variant.value = \"visible\";\r\n        else\r\n          variant.value = \"initial\";\r\n      } else if (_variants.visibleOnce) {\r\n        if (isIntersecting && variant.value !== \"visibleOnce\")\r\n          variant.value = \"visibleOnce\";\r\n        else if (!variant.value)\r\n          variant.value = \"initial\";\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction useMotionFeatures(instance, options = {\r\n  syncVariants: true,\r\n  lifeCycleHooks: true,\r\n  visibilityHooks: true,\r\n  eventListeners: true\r\n}) {\r\n  if (options.lifeCycleHooks)\r\n    registerLifeCycleHooks(instance);\r\n  if (options.syncVariants)\r\n    registerVariantsSync(instance);\r\n  if (options.visibilityHooks)\r\n    registerVisibilityHooks(instance);\r\n  if (options.eventListeners)\r\n    registerEventListeners(instance);\r\n}\r\n\r\nfunction reactiveStyle(props = {}) {\r\n  const state = reactive({\r\n    ...props\r\n  });\r\n  const style = ref({});\r\n  watch(\r\n    state,\r\n    () => {\r\n      const result = {};\r\n      for (const [key, value] of Object.entries(state)) {\r\n        const valueType = getValueType(key);\r\n        const valueAsType = getValueAsType(value, valueType);\r\n        result[key] = valueAsType;\r\n      }\r\n      style.value = result;\r\n    },\r\n    {\r\n      immediate: true,\r\n      deep: true\r\n    }\r\n  );\r\n  return {\r\n    state,\r\n    style\r\n  };\r\n}\r\n\r\nfunction usePermissiveTarget(target, onTarget) {\r\n  watch(\r\n    () => unrefElement(target),\r\n    (el) => {\r\n      if (!el)\r\n        return;\r\n      onTarget(el);\r\n    },\r\n    {\r\n      immediate: true\r\n    }\r\n  );\r\n}\r\n\r\nconst translateAlias = {\r\n  x: \"translateX\",\r\n  y: \"translateY\",\r\n  z: \"translateZ\"\r\n};\r\nfunction reactiveTransform(props = {}, enableHardwareAcceleration = true) {\r\n  const state = reactive({ ...props });\r\n  const transform = ref(\"\");\r\n  watch(\r\n    state,\r\n    (newVal) => {\r\n      let result = \"\";\r\n      let hasHardwareAcceleration = false;\r\n      if (enableHardwareAcceleration && (newVal.x || newVal.y || newVal.z)) {\r\n        const str = [newVal.x || 0, newVal.y || 0, newVal.z || 0].map(px.transform).join(\",\");\r\n        result += `translate3d(${str}) `;\r\n        hasHardwareAcceleration = true;\r\n      }\r\n      for (const [key, value] of Object.entries(newVal)) {\r\n        if (enableHardwareAcceleration && (key === \"x\" || key === \"y\" || key === \"z\"))\r\n          continue;\r\n        const valueType = getValueType(key);\r\n        const valueAsType = getValueAsType(value, valueType);\r\n        result += `${translateAlias[key] || key}(${valueAsType}) `;\r\n      }\r\n      if (enableHardwareAcceleration && !hasHardwareAcceleration)\r\n        result += \"translateZ(0px) \";\r\n      transform.value = result.trim();\r\n    },\r\n    {\r\n      immediate: true,\r\n      deep: true\r\n    }\r\n  );\r\n  return {\r\n    state,\r\n    transform\r\n  };\r\n}\r\n\r\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\r\nconst order = [\"perspective\", \"translate\", \"scale\", \"rotate\", \"skew\"];\r\nconst transformProps = [\"transformPerspective\", \"x\", \"y\", \"z\"];\r\norder.forEach((operationKey) => {\r\n  transformAxes.forEach((axesKey) => {\r\n    const key = operationKey + axesKey;\r\n    transformProps.push(key);\r\n  });\r\n});\r\nconst transformPropSet = new Set(transformProps);\r\nfunction isTransformProp(key) {\r\n  return transformPropSet.has(key);\r\n}\r\nconst transformOriginProps = /* @__PURE__ */ new Set([\"originX\", \"originY\", \"originZ\"]);\r\nfunction isTransformOriginProp(key) {\r\n  return transformOriginProps.has(key);\r\n}\r\nfunction splitValues(variant) {\r\n  const transform = {};\r\n  const style = {};\r\n  Object.entries(variant).forEach(([key, value]) => {\r\n    if (isTransformProp(key) || isTransformOriginProp(key))\r\n      transform[key] = value;\r\n    else\r\n      style[key] = value;\r\n  });\r\n  return { transform, style };\r\n}\r\nfunction variantToStyle(variant) {\r\n  const { transform: _transform, style: _style } = splitValues(variant);\r\n  const { transform } = reactiveTransform(_transform);\r\n  const { style } = reactiveStyle(_style);\r\n  if (transform.value)\r\n    style.value.transform = transform.value;\r\n  return style.value;\r\n}\r\n\r\nfunction useElementStyle(target, onInit) {\r\n  let _cache;\r\n  let _target;\r\n  const { state, style } = reactiveStyle();\r\n  usePermissiveTarget(target, (el) => {\r\n    _target = el;\r\n    for (const key of Object.keys(valueTypes)) {\r\n      if (el.style[key] === null || el.style[key] === \"\" || isTransformProp(key) || isTransformOriginProp(key))\r\n        continue;\r\n      state[key] = el.style[key];\r\n    }\r\n    if (_cache) {\r\n      Object.entries(_cache).forEach(([key, value]) => el.style[key] = value);\r\n    }\r\n    if (onInit)\r\n      onInit(state);\r\n  });\r\n  watch(\r\n    style,\r\n    (newVal) => {\r\n      if (!_target) {\r\n        _cache = newVal;\r\n        return;\r\n      }\r\n      for (const key in newVal)\r\n        _target.style[key] = newVal[key];\r\n    },\r\n    {\r\n      immediate: true\r\n    }\r\n  );\r\n  return {\r\n    style: state\r\n  };\r\n}\r\n\r\nfunction parseTransform(transform) {\r\n  const transforms = transform.trim().split(/\\) |\\)/);\r\n  if (transforms.length === 1)\r\n    return {};\r\n  const parseValues = (value) => {\r\n    if (value.endsWith(\"px\") || value.endsWith(\"deg\"))\r\n      return parseFloat(value);\r\n    if (isNaN(Number(value)))\r\n      return Number(value);\r\n    return value;\r\n  };\r\n  return transforms.reduce((acc, transform2) => {\r\n    if (!transform2)\r\n      return acc;\r\n    const [name, transformValue] = transform2.split(\"(\");\r\n    const valueArray = transformValue.split(\",\");\r\n    const values = valueArray.map((val) => {\r\n      return parseValues(val.endsWith(\")\") ? val.replace(\")\", \"\") : val.trim());\r\n    });\r\n    const value = values.length === 1 ? values[0] : values;\r\n    return {\r\n      ...acc,\r\n      [name]: value\r\n    };\r\n  }, {});\r\n}\r\nfunction stateFromTransform(state, transform) {\r\n  Object.entries(parseTransform(transform)).forEach(([key, value]) => {\r\n    const axes = [\"x\", \"y\", \"z\"];\r\n    if (key === \"translate3d\") {\r\n      if (value === 0) {\r\n        axes.forEach((axis) => state[axis] = 0);\r\n        return;\r\n      }\r\n      value.forEach((axisValue, index) => state[axes[index]] = axisValue);\r\n      return;\r\n    }\r\n    value = parseFloat(value);\r\n    if (key === \"translateX\") {\r\n      state.x = value;\r\n      return;\r\n    }\r\n    if (key === \"translateY\") {\r\n      state.y = value;\r\n      return;\r\n    }\r\n    if (key === \"translateZ\") {\r\n      state.z = value;\r\n      return;\r\n    }\r\n    state[key] = value;\r\n  });\r\n}\r\n\r\nfunction useElementTransform(target, onInit) {\r\n  let _cache;\r\n  let _target;\r\n  const { state, transform } = reactiveTransform();\r\n  usePermissiveTarget(target, (el) => {\r\n    _target = el;\r\n    if (el.style.transform)\r\n      stateFromTransform(state, el.style.transform);\r\n    if (_cache)\r\n      el.style.transform = _cache;\r\n    if (onInit)\r\n      onInit(state);\r\n  });\r\n  watch(\r\n    transform,\r\n    (newValue) => {\r\n      if (!_target) {\r\n        _cache = newValue;\r\n        return;\r\n      }\r\n      _target.style.transform = newValue;\r\n    },\r\n    {\r\n      immediate: true\r\n    }\r\n  );\r\n  return {\r\n    transform: state\r\n  };\r\n}\r\n\r\nfunction useMotionProperties(target, defaultValues) {\r\n  const motionProperties = reactive({});\r\n  const apply = (values) => Object.entries(values).forEach(([key, value]) => motionProperties[key] = value);\r\n  const { style } = useElementStyle(target, apply);\r\n  const { transform } = useElementTransform(target, apply);\r\n  watch(\r\n    motionProperties,\r\n    (newVal) => {\r\n      Object.entries(newVal).forEach(([key, value]) => {\r\n        const target2 = isTransformProp(key) ? transform : style;\r\n        if (target2[key] && target2[key] === value)\r\n          return;\r\n        target2[key] = value;\r\n      });\r\n    },\r\n    {\r\n      immediate: true,\r\n      deep: true\r\n    }\r\n  );\r\n  usePermissiveTarget(target, () => defaultValues && apply(defaultValues));\r\n  return {\r\n    motionProperties,\r\n    style,\r\n    transform\r\n  };\r\n}\r\n\r\nfunction useMotionVariants(variants = {}) {\r\n  const _variants = unref(variants);\r\n  const variant = ref();\r\n  const state = computed(() => {\r\n    if (!variant.value)\r\n      return;\r\n    return _variants[variant.value];\r\n  });\r\n  return {\r\n    state,\r\n    variant\r\n  };\r\n}\r\n\r\nfunction useMotion(target, variants = {}, options) {\r\n  const { motionProperties } = useMotionProperties(target);\r\n  const { variant, state } = useMotionVariants(variants);\r\n  const controls = useMotionControls(motionProperties, variants);\r\n  const instance = {\r\n    target,\r\n    variant,\r\n    variants,\r\n    state,\r\n    motionProperties,\r\n    ...controls\r\n  };\r\n  useMotionFeatures(instance, options);\r\n  return instance;\r\n}\r\n\r\nconst directivePropsKeys = [\"initial\", \"enter\", \"leave\", \"visible\", \"visible-once\", \"visibleOnce\", \"hovered\", \"tapped\", \"focused\", \"delay\"];\r\nfunction resolveVariants(node, variantsRef) {\r\n  const target = node.props ? node.props : node.data && node.data.attrs ? node.data.attrs : {};\r\n  if (target) {\r\n    if (target.variants && isObject(target.variants)) {\r\n      variantsRef.value = {\r\n        ...variantsRef.value,\r\n        ...target.variants\r\n      };\r\n    }\r\n    directivePropsKeys.forEach((key) => {\r\n      if (key === \"delay\") {\r\n        if (target && target[key] && typeof target[key] === \"number\") {\r\n          const delay = target[key];\r\n          if (variantsRef && variantsRef.value) {\r\n            if (variantsRef.value.enter) {\r\n              if (!variantsRef.value.enter.transition)\r\n                variantsRef.value.enter.transition = {};\r\n              variantsRef.value.enter.transition = {\r\n                delay,\r\n                ...variantsRef.value.enter.transition\r\n              };\r\n            }\r\n            if (variantsRef.value.visible) {\r\n              if (!variantsRef.value.visible.transition)\r\n                variantsRef.value.visible.transition = {};\r\n              variantsRef.value.visible.transition = {\r\n                delay,\r\n                ...variantsRef.value.visible.transition\r\n              };\r\n            }\r\n            if (variantsRef.value.visibleOnce) {\r\n              if (!variantsRef.value.visibleOnce.transition)\r\n                variantsRef.value.visibleOnce.transition = {};\r\n              variantsRef.value.visibleOnce.transition = {\r\n                delay,\r\n                ...variantsRef.value.visibleOnce.transition\r\n              };\r\n            }\r\n          }\r\n        }\r\n        return;\r\n      }\r\n      if (target && target[key] && isObject(target[key])) {\r\n        const prop = target[key];\r\n        if (key === \"visible-once\")\r\n          key = \"visibleOnce\";\r\n        variantsRef.value[key] = prop;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction directive(variants) {\r\n  const register = (el, binding, node) => {\r\n    const key = binding.value && typeof binding.value === \"string\" ? binding.value : node.key;\r\n    if (key && motionState[key])\r\n      motionState[key].stop();\r\n    const variantsRef = ref(variants || {});\r\n    if (typeof binding.value === \"object\")\r\n      variantsRef.value = binding.value;\r\n    resolveVariants(node, variantsRef);\r\n    const motionOptions = { eventListeners: true, lifeCycleHooks: true, syncVariants: true, visibilityHooks: false };\r\n    const motionInstance = useMotion(el, variantsRef, motionOptions);\r\n    el.motionInstance = motionInstance;\r\n    if (key)\r\n      motionState[key] = motionInstance;\r\n  };\r\n  const mounted = (el, binding, node) => {\r\n    el.motionInstance && registerVisibilityHooks(el.motionInstance);\r\n  };\r\n  return {\r\n    created: register,\r\n    mounted,\r\n    getSSRProps(binding, node) {\r\n      let { initial: bindingInitial } = binding.value || node && node?.props || {};\r\n      bindingInitial = unref(bindingInitial);\r\n      const initial = defu(variants?.initial || {}, bindingInitial || {});\r\n      if (!initial || Object.keys(initial).length === 0)\r\n        return;\r\n      const style = variantToStyle(initial);\r\n      return {\r\n        style\r\n      };\r\n    }\r\n  };\r\n}\r\n\r\nconst fade = {\r\n  initial: {\r\n    opacity: 0\r\n  },\r\n  enter: {\r\n    opacity: 1\r\n  }\r\n};\r\nconst fadeVisible = {\r\n  initial: {\r\n    opacity: 0\r\n  },\r\n  visible: {\r\n    opacity: 1\r\n  }\r\n};\r\nconst fadeVisibleOnce = {\r\n  initial: {\r\n    opacity: 0\r\n  },\r\n  visibleOnce: {\r\n    opacity: 1\r\n  }\r\n};\r\n\r\nconst pop = {\r\n  initial: {\r\n    scale: 0,\r\n    opacity: 0\r\n  },\r\n  enter: {\r\n    scale: 1,\r\n    opacity: 1\r\n  }\r\n};\r\nconst popVisible = {\r\n  initial: {\r\n    scale: 0,\r\n    opacity: 0\r\n  },\r\n  visible: {\r\n    scale: 1,\r\n    opacity: 1\r\n  }\r\n};\r\nconst popVisibleOnce = {\r\n  initial: {\r\n    scale: 0,\r\n    opacity: 0\r\n  },\r\n  visibleOnce: {\r\n    scale: 1,\r\n    opacity: 1\r\n  }\r\n};\r\n\r\nconst rollLeft = {\r\n  initial: {\r\n    x: -100,\r\n    rotate: 90,\r\n    opacity: 0\r\n  },\r\n  enter: {\r\n    x: 0,\r\n    rotate: 0,\r\n    opacity: 1\r\n  }\r\n};\r\nconst rollVisibleLeft = {\r\n  initial: {\r\n    x: -100,\r\n    rotate: 90,\r\n    opacity: 0\r\n  },\r\n  visible: {\r\n    x: 0,\r\n    rotate: 0,\r\n    opacity: 1\r\n  }\r\n};\r\nconst rollVisibleOnceLeft = {\r\n  initial: {\r\n    x: -100,\r\n    rotate: 90,\r\n    opacity: 0\r\n  },\r\n  visibleOnce: {\r\n    x: 0,\r\n    rotate: 0,\r\n    opacity: 1\r\n  }\r\n};\r\nconst rollRight = {\r\n  initial: {\r\n    x: 100,\r\n    rotate: -90,\r\n    opacity: 0\r\n  },\r\n  enter: {\r\n    x: 0,\r\n    rotate: 0,\r\n    opacity: 1\r\n  }\r\n};\r\nconst rollVisibleRight = {\r\n  initial: {\r\n    x: 100,\r\n    rotate: -90,\r\n    opacity: 0\r\n  },\r\n  visible: {\r\n    x: 0,\r\n    rotate: 0,\r\n    opacity: 1\r\n  }\r\n};\r\nconst rollVisibleOnceRight = {\r\n  initial: {\r\n    x: 100,\r\n    rotate: -90,\r\n    opacity: 0\r\n  },\r\n  visibleOnce: {\r\n    x: 0,\r\n    rotate: 0,\r\n    opacity: 1\r\n  }\r\n};\r\nconst rollTop = {\r\n  initial: {\r\n    y: -100,\r\n    rotate: -90,\r\n    opacity: 0\r\n  },\r\n  enter: {\r\n    y: 0,\r\n    rotate: 0,\r\n    opacity: 1\r\n  }\r\n};\r\nconst rollVisibleTop = {\r\n  initial: {\r\n    y: -100,\r\n    rotate: -90,\r\n    opacity: 0\r\n  },\r\n  visible: {\r\n    y: 0,\r\n    rotate: 0,\r\n    opacity: 1\r\n  }\r\n};\r\nconst rollVisibleOnceTop = {\r\n  initial: {\r\n    y: -100,\r\n    rotate: -90,\r\n    opacity: 0\r\n  },\r\n  visibleOnce: {\r\n    y: 0,\r\n    rotate: 0,\r\n    opacity: 1\r\n  }\r\n};\r\nconst rollBottom = {\r\n  initial: {\r\n    y: 100,\r\n    rotate: 90,\r\n    opacity: 0\r\n  },\r\n  enter: {\r\n    y: 0,\r\n    rotate: 0,\r\n    opacity: 1\r\n  }\r\n};\r\nconst rollVisibleBottom = {\r\n  initial: {\r\n    y: 100,\r\n    rotate: 90,\r\n    opacity: 0\r\n  },\r\n  visible: {\r\n    y: 0,\r\n    rotate: 0,\r\n    opacity: 1\r\n  }\r\n};\r\nconst rollVisibleOnceBottom = {\r\n  initial: {\r\n    y: 100,\r\n    rotate: 90,\r\n    opacity: 0\r\n  },\r\n  visibleOnce: {\r\n    y: 0,\r\n    rotate: 0,\r\n    opacity: 1\r\n  }\r\n};\r\n\r\nconst slideLeft = {\r\n  initial: {\r\n    x: -100,\r\n    opacity: 0\r\n  },\r\n  enter: {\r\n    x: 0,\r\n    opacity: 1\r\n  }\r\n};\r\nconst slideVisibleLeft = {\r\n  initial: {\r\n    x: -100,\r\n    opacity: 0\r\n  },\r\n  visible: {\r\n    x: 0,\r\n    opacity: 1\r\n  }\r\n};\r\nconst slideVisibleOnceLeft = {\r\n  initial: {\r\n    x: -100,\r\n    opacity: 0\r\n  },\r\n  visibleOnce: {\r\n    x: 0,\r\n    opacity: 1\r\n  }\r\n};\r\nconst slideRight = {\r\n  initial: {\r\n    x: 100,\r\n    opacity: 0\r\n  },\r\n  enter: {\r\n    x: 0,\r\n    opacity: 1\r\n  }\r\n};\r\nconst slideVisibleRight = {\r\n  initial: {\r\n    x: 100,\r\n    opacity: 0\r\n  },\r\n  visible: {\r\n    x: 0,\r\n    opacity: 1\r\n  }\r\n};\r\nconst slideVisibleOnceRight = {\r\n  initial: {\r\n    x: 100,\r\n    opacity: 0\r\n  },\r\n  visibleOnce: {\r\n    x: 0,\r\n    opacity: 1\r\n  }\r\n};\r\nconst slideTop = {\r\n  initial: {\r\n    y: -100,\r\n    opacity: 0\r\n  },\r\n  enter: {\r\n    y: 0,\r\n    opacity: 1\r\n  }\r\n};\r\nconst slideVisibleTop = {\r\n  initial: {\r\n    y: -100,\r\n    opacity: 0\r\n  },\r\n  visible: {\r\n    y: 0,\r\n    opacity: 1\r\n  }\r\n};\r\nconst slideVisibleOnceTop = {\r\n  initial: {\r\n    y: -100,\r\n    opacity: 0\r\n  },\r\n  visibleOnce: {\r\n    y: 0,\r\n    opacity: 1\r\n  }\r\n};\r\nconst slideBottom = {\r\n  initial: {\r\n    y: 100,\r\n    opacity: 0\r\n  },\r\n  enter: {\r\n    y: 0,\r\n    opacity: 1\r\n  }\r\n};\r\nconst slideVisibleBottom = {\r\n  initial: {\r\n    y: 100,\r\n    opacity: 0\r\n  },\r\n  visible: {\r\n    y: 0,\r\n    opacity: 1\r\n  }\r\n};\r\nconst slideVisibleOnceBottom = {\r\n  initial: {\r\n    y: 100,\r\n    opacity: 0\r\n  },\r\n  visibleOnce: {\r\n    y: 0,\r\n    opacity: 1\r\n  }\r\n};\r\n\r\nconst presets = {\r\n  __proto__: null,\r\n  fade: fade,\r\n  fadeVisible: fadeVisible,\r\n  fadeVisibleOnce: fadeVisibleOnce,\r\n  pop: pop,\r\n  popVisible: popVisible,\r\n  popVisibleOnce: popVisibleOnce,\r\n  rollBottom: rollBottom,\r\n  rollLeft: rollLeft,\r\n  rollRight: rollRight,\r\n  rollTop: rollTop,\r\n  rollVisibleBottom: rollVisibleBottom,\r\n  rollVisibleLeft: rollVisibleLeft,\r\n  rollVisibleOnceBottom: rollVisibleOnceBottom,\r\n  rollVisibleOnceLeft: rollVisibleOnceLeft,\r\n  rollVisibleOnceRight: rollVisibleOnceRight,\r\n  rollVisibleOnceTop: rollVisibleOnceTop,\r\n  rollVisibleRight: rollVisibleRight,\r\n  rollVisibleTop: rollVisibleTop,\r\n  slideBottom: slideBottom,\r\n  slideLeft: slideLeft,\r\n  slideRight: slideRight,\r\n  slideTop: slideTop,\r\n  slideVisibleBottom: slideVisibleBottom,\r\n  slideVisibleLeft: slideVisibleLeft,\r\n  slideVisibleOnceBottom: slideVisibleOnceBottom,\r\n  slideVisibleOnceLeft: slideVisibleOnceLeft,\r\n  slideVisibleOnceRight: slideVisibleOnceRight,\r\n  slideVisibleOnceTop: slideVisibleOnceTop,\r\n  slideVisibleRight: slideVisibleRight,\r\n  slideVisibleTop: slideVisibleTop\r\n};\r\n\r\nconst component = defineComponent({\r\n  props: {\r\n    is: {\r\n      type: [String, Object],\r\n      required: false\r\n    },\r\n    // Preset to be loaded\r\n    preset: {\r\n      type: String,\r\n      required: false\r\n    },\r\n    // Instance\r\n    instance: {\r\n      type: Object,\r\n      required: false\r\n    },\r\n    // Variants\r\n    variants: {\r\n      type: Object,\r\n      required: false\r\n    },\r\n    // Initial variant\r\n    initial: {\r\n      type: Object,\r\n      required: false\r\n    },\r\n    // Lifecycle hooks variants\r\n    enter: {\r\n      type: Object,\r\n      required: false\r\n    },\r\n    leave: {\r\n      type: Object,\r\n      required: false\r\n    },\r\n    // Intersection observer variants\r\n    visible: {\r\n      type: Object,\r\n      required: false\r\n    },\r\n    visibleOnce: {\r\n      type: Object,\r\n      required: false\r\n    },\r\n    // Event listeners variants\r\n    hovered: {\r\n      type: Object,\r\n      required: false\r\n    },\r\n    tapped: {\r\n      type: Object,\r\n      required: false\r\n    },\r\n    focused: {\r\n      type: Object,\r\n      required: false\r\n    },\r\n    // Helpers\r\n    delay: {\r\n      type: [Number, String],\r\n      required: false\r\n    }\r\n  },\r\n  setup(props) {\r\n    const slots = useSlots();\r\n    const instances = reactive({});\r\n    if (!props.is && !slots.default)\r\n      return () => h(\"div\", {});\r\n    const _preset = computed(() => {\r\n      let preset;\r\n      if (props.preset)\r\n        preset = presets[props.preset];\r\n      return preset;\r\n    });\r\n    const propsConfig = computed(() => ({\r\n      initial: props.initial,\r\n      enter: props.enter,\r\n      leave: props.leave,\r\n      visible: props.visible,\r\n      visibleOnce: props.visibleOnce,\r\n      hovered: props.hovered,\r\n      tapped: props.tapped,\r\n      focused: props.focused\r\n    }));\r\n    const motionConfig = computed(() => {\r\n      const config = {\r\n        ...propsConfig.value,\r\n        ..._preset.value || {},\r\n        ...props.variants || {}\r\n      };\r\n      if (props.delay) {\r\n        config.enter.transition = { ...config.enter.transition };\r\n        config.enter.transition.delay = parseInt(props.delay);\r\n      }\r\n      return config;\r\n    });\r\n    const component = computed(() => {\r\n      if (!props.is)\r\n        return;\r\n      let comp = props.is;\r\n      if (typeof component.value === \"string\" && !isHTMLTag(comp)) {\r\n        comp = resolveComponent(comp);\r\n      }\r\n      return comp;\r\n    });\r\n    if (process?.env?.NODE_ENV === \"development\" || process?.dev) {\r\n      const replayAnimation = (instance) => {\r\n        if (instance.variants?.initial)\r\n          instance.set(\"initial\");\r\n        setTimeout(() => {\r\n          if (instance.variants?.enter)\r\n            instance.apply(\"enter\");\r\n          if (instance.variants?.visible)\r\n            instance.apply(\"visible\");\r\n          if (instance.variants?.visibleOnce)\r\n            instance.apply(\"visibleOnce\");\r\n        }, 10);\r\n      };\r\n      onUpdated(() => Object.entries(instances).forEach(([_, value]) => replayAnimation(value)));\r\n    }\r\n    return {\r\n      slots,\r\n      component,\r\n      motionConfig,\r\n      instances\r\n    };\r\n  },\r\n  render({ slots, motionConfig, instances, component }) {\r\n    const style = variantToStyle(motionConfig.initial || {});\r\n    const setNode = (node, index) => {\r\n      if (!node.props)\r\n        node.props = {};\r\n      node.props.style = style;\r\n      node.props.onVnodeMounted = ({ el }) => {\r\n        const instance = useMotion(el, motionConfig);\r\n        instances[index] = instance;\r\n      };\r\n      return node;\r\n    };\r\n    if (component) {\r\n      const node = h(component, void 0, slots);\r\n      setNode(node, 0);\r\n      return node;\r\n    }\r\n    const nodes = slots.default?.() || [];\r\n    return nodes.map((node, index) => setNode(node, index));\r\n  }\r\n});\r\n\r\nfunction slugify(string) {\r\n  const a = \"\\xE0\\xE1\\xE2\\xE4\\xE6\\xE3\\xE5\\u0101\\u0103\\u0105\\xE7\\u0107\\u010D\\u0111\\u010F\\xE8\\xE9\\xEA\\xEB\\u0113\\u0117\\u0119\\u011B\\u011F\\u01F5\\u1E27\\xEE\\xEF\\xED\\u012B\\u012F\\xEC\\u0142\\u1E3F\\xF1\\u0144\\u01F9\\u0148\\xF4\\xF6\\xF2\\xF3\\u0153\\xF8\\u014D\\xF5\\u0151\\u1E55\\u0155\\u0159\\xDF\\u015B\\u0161\\u015F\\u0219\\u0165\\u021B\\xFB\\xFC\\xF9\\xFA\\u016B\\u01D8\\u016F\\u0171\\u0173\\u1E83\\u1E8D\\xFF\\xFD\\u017E\\u017A\\u017C\\xB7/_,:;\";\r\n  const b = \"aaaaaaaaaacccddeeeeeeeegghiiiiiilmnnnnoooooooooprrsssssttuuuuuuuuuwxyyzzz------\";\r\n  const p = new RegExp(a.split(\"\").join(\"|\"), \"g\");\r\n  return string.toString().replace(/[A-Z]/g, (s) => `-${s}`).toLowerCase().replace(/\\s+/g, \"-\").replace(p, (c) => b.charAt(a.indexOf(c))).replace(/&/g, \"-and-\").replace(/[^\\w\\-]+/g, \"\").replace(/\\-\\-+/g, \"-\").replace(/^-+/, \"\").replace(/-+$/, \"\");\r\n}\r\n\r\nconst MotionPlugin = {\r\n  install(app, options) {\r\n    app.directive(\"motion\", directive());\r\n    app.component(\"Motion\", component);\r\n    if (!options || options && !options.excludePresets) {\r\n      for (const key in presets) {\r\n        const preset = presets[key];\r\n        app.directive(`motion-${slugify(key)}`, directive(preset));\r\n      }\r\n    }\r\n    if (options && options.directives) {\r\n      for (const key in options.directives) {\r\n        const variants = options.directives[key];\r\n        if (!variants.initial && __DEV__) {\r\n          console.warn(`Your directive v-motion-${key} is missing initial variant!`);\r\n        }\r\n        app.directive(`motion-${key}`, directive(variants));\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nfunction isMotionInstance(obj) {\r\n  const _obj = obj;\r\n  return _obj.apply !== void 0 && typeof _obj.apply === \"function\" && _obj.set !== void 0 && typeof _obj.set === \"function\" && _obj.target !== void 0 && isRef(_obj.target);\r\n}\r\n\r\nfunction useMotions() {\r\n  return motionState;\r\n}\r\n\r\nfunction useSpring(values, spring) {\r\n  const { stop, get } = useMotionValues();\r\n  return {\r\n    values,\r\n    stop,\r\n    set: (properties) => Promise.all(\r\n      Object.entries(properties).map(([key, value]) => {\r\n        const motionValue = get(key, values[key], values);\r\n        return motionValue.start((onComplete) => {\r\n          const options = {\r\n            type: \"spring\",\r\n            ...spring || getDefaultTransition(key, value)\r\n          };\r\n          return animate({\r\n            from: motionValue.get(),\r\n            to: value,\r\n            velocity: motionValue.getVelocity(),\r\n            onUpdate: (v) => motionValue.set(v),\r\n            onComplete,\r\n            ...options\r\n          });\r\n        });\r\n      })\r\n    )\r\n  };\r\n}\r\n\r\nfunction useReducedMotion(options = {}) {\r\n  return useMediaQuery(\"(prefers-reduced-motion: reduce)\", options);\r\n}\r\n\r\nexport { directive as MotionDirective, MotionPlugin, fade, fadeVisible, fadeVisibleOnce, isMotionInstance, pop, popVisible, popVisibleOnce, reactiveStyle, reactiveTransform, rollBottom, rollLeft, rollRight, rollTop, rollVisibleBottom, rollVisibleLeft, rollVisibleOnceBottom, rollVisibleOnceLeft, rollVisibleOnceRight, rollVisibleOnceTop, rollVisibleRight, rollVisibleTop, slideBottom, slideLeft, slideRight, slideTop, slideVisibleBottom, slideVisibleLeft, slideVisibleOnceBottom, slideVisibleOnceLeft, slideVisibleOnceRight, slideVisibleOnceTop, slideVisibleRight, slideVisibleTop, slugify, useElementStyle, useElementTransform, useMotion, useMotionControls, useMotionProperties, useMotionTransitions, useMotionVariants, useMotions, useReducedMotion, useSpring };\r\n"],
  "mappings": "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",
  "names": ["c", "c", "isVue2", "isVue2", "window", "window", "runNextFrame", "isProcessing", "process", "timestamp", "clamp", "clamp", "undampedFreq", "a", "b", "c", "keys", "a", "b", "progress", "clamp", "clamp", "a", "b", "c", "alpha", "clamp", "b", "a", "v", "number", "alpha", "color", "a", "b", "analyse", "clamp", "keys", "identity", "a", "b", "c", "timestamp", "keys", "keyframes", "getAnimatableNone", "set", "component", "_a", "spring"]
}
